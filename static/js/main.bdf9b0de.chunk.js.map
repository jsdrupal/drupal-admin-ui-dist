{"version":3,"sources":["utils/api/errors.js","utils/api/api.js","constants/messages.js","components/05_pages/NodeForm/WidgetPropTypes.js","components/02_atoms/Widgets/OptionsSelect.js","components/02_atoms/Widgets/NumberTextfield.js","components/02_atoms/Widgets/StringTextfield.js","components/02_atoms/Widgets/BooleanCheckbox.js","components/02_atoms/Widgets/DatetimeTimestamp.js","components/02_atoms/FileUpload/FileUpload.js","utils/api/fieldItem.ts","components/02_atoms/Widgets/FileUploadWidget.js","components/05_pages/NodeForm/SchemaPropType.js","components/02_atoms/Widgets/EntityReferenceAutocomplete.js","components/02_atoms/Widgets/TextTextarea.js","components/05_pages/NodeForm/Widgets.js","actions/application.js","components/02_atoms/PageTitle/PageTitle.js","components/02_atoms/PageTitle/index.js","components/05_pages/AddContent/AddContent.js","components/05_pages/AddContent/index.js","components/02_atoms/OpsModalButton/OpsModalButton.js","components/01_subatomics/MessageHelpers/MessageSave.js","utils/api/content.js","actions/content.js","components/04_templates/ContentTable/ContentTable.js","components/05_pages/Content/ConfirmationDialog.js","components/05_pages/Content/Content.js","components/02_atoms/Loading/Loading.js","components/01_subatomics/Table/Table.js","components/05_pages/Permissions/Permissions.js","actions/roles.js","components/05_pages/Roles/Roles.js","components/05_pages/Roles/index.js","actions/helpers.js","actions/reports.js","components/05_pages/Reports/Dblog.js","utils/api/schema.js","components/02_atoms/MultipleFields/MultipleFields.js","actions/schema.js","components/05_pages/NodeForm/index.js","components/02_atoms/EnsureComponent/EnsureComponent.js","components/05_pages/NodeEditForm/index.js","components/05_pages/NodeAddForm/index.js","components/05_pages/TaxonomyVocabulary/TaxonomyVocabulary.js","actions/taxonomy.js","components/05_pages/TaxonomyVocabulary/index.js","components/05_pages/TaxonomyTermsOverview/TaxonomyTermsOverview.js","components/05_pages/TaxonomyTermsOverview/index.js","routes.js","components/02_atoms/SnackbarMessage/SnackbarMessage.js","components/02_atoms/InlineMessage/InlineMessage.js","components/06_wrappers/Default/Default.js","components/06_wrappers/ErrorBoundary/ErrorBoundary.js","NoMatch.ts","actions/index.js","reducers/application.js","reducers/content.js","reducers/schema.js","reducers/taxonomy.js","reducers/index.js","InitialRedirect.js","App.js","registerServiceWorker.js","index.js"],"names":["ApiError","status","statusText","response","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","message","concat","error","toHumanString","toString","json","Error","api","_callee","endpoint","_ref","_ref$queryString","queryString","_ref$parameters","parameters","_ref$options","options","url","deleteToken","node","saveToken","_saveToken","data","_args","arguments","regenerator_default","a","wrap","_context","prev","next","length","undefined","credentials","headers","t0","abrupt","Accept","text","role","id","method","body","JSON","stringify","entityTypeId","bundle","fieldName","fileName","objectSpread","type","includes","sent","links","self","replace","process","attributes","nid","revision_timestamp","changed","relationships","revision_uid","uid","join","entityId","fetch","qs","arrayFormat","then","res","stop","MESSAGE_SEVERITY_SUCCESS","PropTypes","string","isRequired","func","styles","select","css","_templateObject","OptionsSelect","label","value","onChange","helpText","required","defaultValue","schema","default","classes","allowedValues","inputProps","allowed_values","react_default","createElement","FormControl_default","margin","InputLabel_default","htmlFor","NativeSelect_default","fullWidth","event","target","className","entries","map","_ref2","_ref3","slicedToArray","machineName","humanName","key","FormHelperText_default","defaultProps","NumberTextfield","TextField_default","Number","InputProps","unsigned","endAdornment","suffix","InputAdornment_default","position","startAdornment","prefix","min","StringTextfield","props","Array","isArray","autoFocus","BooleanCheckbox","FormControlLabel_default","control","Checkbox_default","checked","String","root","BooleanCheckbox_templateObject","DatetimeTimestamp","Date","toJSON","slice","InputLabelProps","shrink","Container","styled","FileUpload_templateObject","Element","_templateObject2","Text","_templateObject3","marginTopDense","marginTop","color","paddingLeft","FileUpload","state","total","files","errors","filesLength","isDisabled","onDragOver","stopPropagation","preventDefault","setElementStyles","dataTransfer","dropEffect","onDragLeave","onDrop","readFile","onClick","input","click","_assertThisInitialize","assertThisInitialized","element","style","border","opacity","getFiles","uploadFile","file","reader","window","FileReader","onloadend","asyncToGenerator","mark","_ref$target","readyState","result","_assertThisInitialize2","resetState","_assertThisInitialize3","onFileUpload","buffer","token","createdFile","DONE","Uint8Array","X-CSRF-Token","setState","prevState","toConsumableArray","_x","apply","readAsArrayBuffer","checkFile","_ref4","size","lastModified","extension","split","_assertThisInitialize4","_assertThisInitialize5","max_filesize","file_extensions","keys","_assertThisInitialize6","_assertThisInitialize7","_assertThisInitialize8","_assertThisInitialize9","multiple","remainingUploads","slicedFiles","reduce","obj","forEach","isEnabled","fn","render","_assertThisInitialize10","_assertThisInitialize11","_assertThisInitialize12","innerRef","Typography_default","variant","Button_default","disabled","aria-label","CloudUpload_default","display","ref","LinearProgress_default","component","_ref5","Component","setItemById","item","items","index","findIndex","i","getItemsAsArray","values","CardWrapper","FileUploadWidget_templateObject","FileUploadWidget_templateObject2","Image","FileUploadWidget_templateObject3","_templateObject4","FileUploadWidget","selectedItems","setSelectedItems","recalculateSelectedItems","properties","ids","fetchEntitites","entities","defineProperty","meta","agg","filter","condition","operator","path","prevProps","_this2","_this$props","_this$props$schema","maxItems","maxItemsCount","FileUploadWidget_Element","FormLabel_default","_02_atoms_FileUpload_FileUpload","newItems","itemsAgg","uuid","filename","alt","Card_default","CardContent_default","List_default","_item$file","last","react","ListItem_default","src","mini","deleteItemById","currentTarget","Delete_default","Divider_default","React","lazyFunction","f","propName","componentName","_len","rest","_key","lazySchemaType","shape","title","description","objectOf","results","EntityReferenceAutocomplete_templateObject","EntityReferenceAutocomplete_templateObject2","EntityReferenceAutocomplete","inputValue","suggestions","Map","getMaxItems","_this$determineEntity","determineEntityTypeAndBundlesFromSchema","_this$determineEntity2","enum","handleChange","handleInputChange","_this$determineEntity4","_this$determineEntity5","fetchSuggestedEntities","_ref6","_ref7","handleKeyDown","_this$state","keycode","handleDelete","_ref8","_ref9","_ref10$","bundles","_ref11","renderSuggestion","_ref12","suggestion","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","MenuItem_default","assign","selected","fontWeight","renderInput","_ref13","other","objectWithoutProperties","inputRef","autoComplete","_this$state2","downshift_esm","itemToString","_ref14","getInputProps","getItemProps","isOpen","_ref15","_ref16","Chip_default","tabIndex","onDelete","onKeyDown","placeholder","Paper_default","square","from","TextTextarea","createValueFromString","RichTextEditor","extractValueString","valueString","componentDidUpdate","format","react_rte_default","container","TextTextarea_templateObject","TextTextarea_templateObject2","widgets","options_select","number","boolean_checkbox","datetime_timestamp","image_image","entity_reference_autocomplete","text_textarea","loadMenu","loadContentTypes","loadActions","loadComponentList","watchApplication","setMessage","messageSeverity","payload","setErrorMessage","setSuccessMessage","clearMessage","MENU_REQUESTED","MENU_LOADED","menuLinks","errorMessage","put","resetLoading","showLoading","errorToHumanString","hideLoading","finish","_marked","CONTENT_TYPES_REQUESTED","requestContentTypes","contentTypesSelector","application","contentTypes","CONTENT_TYPES_LOADED","_context2","_marked2","ACTIONS_REQUESTED","getActionsCache","actions","ACTIONS_LOADED","_context3","t1","_marked3","COMPONENT_LIST_REQUESTED","COMPONENT_LIST_LOADED","components","_context4","_marked4","_context5","takeLatest","takeEvery","_marked5","PageTitle_templateObject","withSideEffect","propsList","innermostProps","children","document","e","trim","PageTitle","menuLink","AddContent_templateObject","AddContent_templateObject2","_02_atoms_PageTitle","data-nightwatch","contentType","Link","to","ListItemText_default","primary","secondary","interweave_lib","content","connect","AddContent","Transition","Slide_default","direction","OpsModalButton","open","handleClickOpen","handleClose","cancelText","confirmText","enterAction","buttonProps","IconButton_default","Dialog_default","TransitionComponent","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","MessageSave","extractContentType","substring","mapContentTypeToName","cleanupRelationships","acc","cur","_cur","relationshipData","loadContent","loadSingleContent","executeAction","saveContent","addContent","deleteContent","loadUser","rootSaga","CONTENT_REQUESTED","CONTENT_LOADED","action","sort","page","offset","limit","contentList","typeGroup","group","conjunction","typearticle","typepage","accumulator","memberOf","include","content_marked","CONTENT_SINGLE_REQUESTED","CONTENT_SINGLE_LOADED","_ref$data","content_marked2","CONTENT_SAVE","contentSave","CONTENT_ADD","contentAdd","CONTENT_DELETE","contentDelete","ACTION_EXECUTE","SUPPORTED_ACTIONS","_ref2$payload","nids","saveAction","contentItem","plugin","sticky","promote","x","all","content_marked3","_ref5$0$data$attribut","contentTypeName","MessageHelpers_MessageSave","content_marked4","contentName","push","content_marked5","_context6","_marked6","USER_REQUESTED","USER_LOADED","_ref8$data","user","_context7","_marked7","_context8","_marked8","noContentMessage","ContentTable_templateObject","ContentTable","setChecked","_this$props$page","count","table","Table_default","TableHead_default","TableRow_default","TableCell_default","padding","selectAll","sortable","TableSortLabel_default","toLowerCase","active","tableSortHandler","TableBody_default","_node$attributes","rowSelectId","nextChecked","parse","Intl","DateTimeFormat","navigator","language","weekday","year","month","day","hour","minute","whiteSpace","button","Edit_default","_02_atoms_OpsModalButton_OpsModalButton","TablePagination_default","rowsPerPage","onChangePage","pageChangeHandler","rowsPerPageOptions","labelDisplayedRows","nextIconButtonProps","backIconButtonProps","dialogActionName","ConfirmationDialog_templateObject","listItemText","ConfirmationDialog_templateObject2","ConfirmationDialog","dialogVisibility","actionLabel","shift","_ref5$attributes","Content_templateObject","addButton","Content_templateObject2","Content_templateObject3","formControl","Content_templateObject4","chips","_templateObject5","chip","_templateObject6","selectEmpty","_templateObject7","_templateObject8","filters","_templateObject9","_templateObject10","textField","_templateObject11","Content","dialogOpen","dialogClose","matchingAction","actionExecute","requestContent","build_default","marginBottom","Select_default","Input_default","renderValue","indexOf","autoWidth","Boolean","Content_ConfirmationDialog","Add_default","_04_templates_ContentTable_ContentTable","requestActions","rotate","keyframes","Loading_templateObject","Loading_templateObject2","peace","Loading_templateObject3","Loading","TABLE","TR","TD","THEAD","Table_TR","tr","Table_TD","td","TBODY","rows","tbody","colspan","tds","tdKey","tdValue","tdClassName","cx","colSpan","thead","Table_templateObject","Table_templateObject2","Table_templateObject3","Table_templateObject4","filterPermissions","permissions","provider","providerLabel","provider_label","Permissions","_Component","_getPrototypeOf2","args","loaded","rawPermissions","renderablePermissions","working","onPermissionCheck","roleName","permission","changedRoles","Set","add","roles","togglePermission","fetchData","makeCancelable","Promise","match","params","b","is_admin","catch","err","roleIndex","splice","groupPermissions","createTableRows","groupedPermissions","providerMachineName","_ref6$","Permissions_templateObject","handleKeyPress","saveRoles","cancelFetch","inherits","createClass","react_sticky_lib","stickyBar","searchInput","saveButton","Table_TABLE","Table_THEAD","Table_TBODY","_02_atoms_Loading_Loading","Permissions_templateObject2","Permissions_templateObject3","Permissions_templateObject4","loadRoles","ROLES_LOADED","cancelled","roles_marked","watchRequestedRolesWithCancel","watchRequestedRoles","race","task","cancel","take","Roles","_ref$attributes","requestRoles","cancelTask","ConnectedRoles","loadDblog","DBLOG_FILTER_UPDATED","DBLOG_COLLECTION_LOADED","dbLogEntriesTypes","dbLogEntries","types","severities","severityGroup","reports_marked","watchDblogRequests","Dblog","generateTableRows","wid","messageFormattedPlain","timestamp","severityFilterHandler","requestDblogCollection","filterOptions","option","typeFilterHandler","nextPage","previousPage","availableTypes","onBlur","dblog","createEntity","Add","MultipleFields_templateObject","ListItemStyles","paddingRight","ListItemIconStyles","cursor","MultipleFields","handle","currentIndex","newItemAdded","onMouseDown","onDragStart","contains","setData","effectAllowed","parseInt","dataset","overIndex","selectedValue","onDragEnd","changeItem","_this$props2","propsValue","newValue","addAnotherItem","_this$props3","usedValues","createEmptyItem","draggable","data-key","ListItemIcon_default","Reorder_default","MultipleFields_Add","loadUiSchema","loadSchema","loadSchemaByEntityId","UI_SCHEMA_REQUESTED","UI_SCHEMA_LOADED","_action$payload","fieldSchema","formDisplaySchema","fieldStorageConfig","entity_type","targetEntityType","mode","schema_marked","SCHEMA_REQUESTED","SCHEMA_LOADED","_action$payload2","entitySchema","_describes","_format","schema_marked2","SCHEMA_BY_ENTITY_ID_REQUESTED","SCHEMA_BY_ENTITY_ID_LOADED","_action$payload3","schema_marked3","schema_marked4","EnsureComponent","define","MaterialUI","require","NodeForm","restored","onAttributeChange","entity","onSave","missingFields","resolveMissingRequiredFields","onRelationshipChange","fieldData","getSchemaInfo","unavailableFields","requiredFields","field","calculateState","uiSchema","restorableEntity","_ref10","createField","widget","_this$props$schema$pr","propType","widgetProps","widgetRoot","widgetIsMultiple","hasMultipleDeltas","_02_atoms_EnsureComponent_EnsureComponent","widgetComponent","_02_atoms_MultipleFields_MultipleFields","requestUiSchema","requestComponentList","_this3","_this4","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","Close_default","icon","secondaryColumnFields","_sortUISchemaFields","startsWith","weight","currentFieldName","widgetName","fieldStorageSettings","field_name","prototype","hasOwnProperty","settings","constraints","curr","right","left","gridRoot","renderRestoreSnackbar","fieldContainer","divider","NodeForm_templateObject","NodeForm_templateObject2","NodeForm_templateObject3","NodeForm_templateObject4","NodeForm_templateObject5","NodeEditForm","requestSchemaByEntityId","requestSingleContent","_02_atoms_PageTitle_PageTitle","_05_pages_NodeForm","NodeEditForm_templateObject","contentByNid","restorableContentEditById","change","extractRestorableEntity","NodeAddForm","forgeEntity","local","setMinutes","getMinutes","getTimezoneOffset","created","Math","round","requestUser","requestSchema","restorableContentAddByBundle","TaxonomyVocabulary_templateObject","TaxonomyVocabulary","activeLink","vocabularyOperations","vid","MenuItem_MenuItem_default","Redirect","requestTaxonomyVocabulary","taxonomyVocabulary","vocabulary","loadTaxonomyVocabulary","loadTaxonomyTerms","TAXONOMY_VOCABULARY_REQUESTED","TAXONOMY_VOCABULARY_LOADED","taxonomy_marked","TAXONOMY_TERMS_REQUESTED","getTaxonomyVocabularyById","taxonomyVocabularyList","TAXONOMY_TERMS_LOADED","taxonomyTerms","taxonomy","taxonomy_marked2","taxonomy_marked3","TaxonomyTermsOverview_templateObject","TaxonomyTermsOverview","termOperations","tid","requestTaxonomyTerms","term","routes","/admin/content","/admin/people/permissions/:role?","/admin/people/roles","/admin/reports/dblog","/node/add","/node/:nid/edit","/node/add/:bundle","/admin/structure/taxonomy/manage/:vocabulary/overview","/admin/structure/taxonomy","Taxonomy","variantIcon","CheckCircleIcon","MESSAGE_SEVERITY_WARNING","WarningIcon","MESSAGE_SEVERITY_ERROR","ErrorIcon","MESSAGE_SEVERITY_INFO","InfoIcon","success","SnackbarMessage_templateObject","SnackbarMessage_templateObject2","info","SnackbarMessage_templateObject3","warning","SnackbarMessage_templateObject4","SnackbarMessage_templateObject5","iconVariant","SnackbarMessage_templateObject6","SnackbarMessage_templateObject7","SnackbarMessage","Icon","duration","SnackbarContent_default","severity","modifierClassMap","InlineMessage_templateObject","InlineMessage_templateObject2","InlineMessage_templateObject3","InlineMessage_templateObject4","InlineMessage_templateObject5","_modifierClassMap","Message","ErrorBoundary","InlineMessage","iconMap","ViewList_default","/admin/structure","Build_default","/admin/appearance","ColorLens_default","/admin/modules","Extension_default","/admin/config","Settings_default","/admin/people","People_default","/admin/reports","Assessment_default","/admin/help","Help_default","Default","outerWrapper","CssBaseline_default","Drawer_default","paper","drawerPaper","drawerOpen","drawerPaperClose","menuButtonWrapper","closeDrawer","menuButton","ChevronLeft_default","openDrawer","Menu_default","link","main","_06_wrappers_ErrorBoundary_ErrorBoundary","_02_atoms_SnackbarMessage_SnackbarMessage","requestMenu","Default_templateObject","Default_templateObject2","Default_templateObject3","Default_templateObject4","Default_templateObject5","Default_templateObject6","Default_templateObject7","withRouter","messages","NoMatch","location","pathname","href","applicationSaga","contentSaga","schemaSaga","taxonomySaga","actions_marked","initialState","filterString","reducers","now","random","LOCATION_CHANGE","message_formatted_plain","included","substr","applicationInitialState","contentInitialState","schemaInitialState","taxonomyInitialState","src_reducers","loadingBar","InitialRedirect","searchString","search","es_Redirect","history","createBrowserHistory","middleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","router","routerReducer","deepMerge","storedState","stringifiedState","localStorage","setItem","getItem","Cookie","decodeURIComponent","get","restoreState","composeWithDevTools","applyMiddleware","run","subscribe","getState","localStorageStore","storeState","generateClassName","createGenerateClassName","jss","create","jssPreset","insertionPoint","getElementById","theme","createMuiTheme","typography","useNextVariants","App","serverRoutes","JssProvider_default","react_redux_es","react_router_redux_es","_06_wrappers_Default_Default","Switch","Route","exact","route","routePrefix","moduleName","isLocalhost","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","URL","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.bdf9b0de.chunk.js","sourcesContent":["/**\n * Error class for an API response outside the 200 range\n *\n * @param {number} status - the status code of the API response\n * @param {string} statusText - the status text of the API response\n * @param {object} response - the parsed JSON response of the API server if the\n *  'Content-Type' header signals a JSON response\n */\nclass ApiError extends Error {\n  constructor(status, statusText, response) {\n    super();\n    this.name = 'ApiError';\n    this.status = status;\n    this.statusText = statusText;\n    this.response = response;\n    this.message = `${status} - ${statusText}`;\n  }\n\n  static errorToHumanString(error) {\n    if (error.name === 'ApiError') {\n      return ApiError.toHumanString(error);\n    }\n    return error.toString();\n  }\n\n  static async toHumanString(error) {\n    try {\n      switch (error.status) {\n        case 403:\n          return `You don't have access: ${\n            (await error.response.json()).message\n          } Maybe you aren't logged in.`;\n        case 404:\n          return `Some page is missing: ${\n            (await error.response.json()).message\n          }`;\n        case 400:\n          return `You posted some invalid data, contact the administration team: ${\n            (await error.response.json()).message\n          }`;\n        case 500:\n          return `The server crashed, contact the administration team: ${\n            (await error.response.json()).message\n          }`;\n        default:\n          return error.toString();\n      }\n    } catch (e) {\n      return error.toString();\n    }\n  }\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport { ApiError };\n","import qs from 'qs';\nimport { ApiError } from './errors';\n\nasync function api(\n  endpoint,\n  { queryString = null, parameters = {}, options = {} } = {},\n) {\n  let url;\n  options.credentials = 'include';\n  options.headers = options.headers || {};\n\n  switch (endpoint) {\n    case 'menu':\n      url = '/admin-api/menu?_format=json';\n      break;\n    case 'dblog':\n      url = '/jsonapi/watchdog_entity/';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'csrf_token':\n      url = '/session/token';\n      options.text = true;\n      break;\n    case 'dblog:types':\n      url = '/admin-ui-support/dblog-types?_format=json';\n      break;\n    case 'roles':\n      url = '/jsonapi/user_role';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'role':\n      url = `/jsonapi/user_role/${parameters.role.id}`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'role:patch':\n      url = `/jsonapi/user_role/${parameters.role.id}`;\n      options.headers.Accept = 'application/vnd.api+json';\n      options.method = 'PATCH';\n      options.body = JSON.stringify({ data: parameters.role });\n      options.headers['Content-Type'] = 'application/vnd.api+json';\n      break;\n    case 'file:upload':\n      url = `/file/upload/${parameters.entityTypeId}/${parameters.bundle}/${\n        parameters.fieldName\n      }`;\n      options.method = 'POST';\n      options.headers['Content-Type'] = 'application/octet-stream';\n      options.headers['Content-Disposition'] = `file; filename=\"${\n        parameters.fileName\n      }\"`;\n      options.body = parameters.body;\n      break;\n    case 'permissions':\n      url = '/admin-api/permissions?_format=json';\n      break;\n    case 'content':\n      url = '/jsonapi/node';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'content_single':\n      url = `/jsonapi/node/${parameters.bundle}/${parameters.id}`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'file':\n      url = `/jsonapi/file`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'actions':\n      url = '/jsonapi/action';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'contentTypes':\n      url = '/jsonapi/node_type';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'node:delete': {\n      // Set the type to the right value for jsonapi to process.\n      // @todo Ideally this should not be differnet in the first place.\n      parameters.node = {\n        ...parameters.node,\n        type: parameters.node.type.includes('--')\n          ? parameters.node.type\n          : `node--${parameters.node.type}`,\n      };\n\n      const deleteToken = await api('csrf_token');\n      // @todo Delete requests sadly return non json.\n      options.text = true;\n      options.headers.Accept = 'application/vnd.api+json';\n      options.headers['X-CSRF-Token'] = deleteToken;\n      options.headers['Content-Type'] = 'application/vnd.api+json';\n      options.method = 'DELETE';\n      url = parameters.node.links.self.replace(\n        process.env.REACT_APP_DRUPAL_BASE_URL,\n        '',\n      );\n      break;\n    }\n    case 'node:add': {\n      const { node } = parameters;\n      // Set the type to the right value for jsonapi to process.\n      // @todo Ideally this should not be differnet in the first place.\n      node.type = node.type.includes('--') ? node.type : `node--${node.type}`;\n\n      // Ensure that we don't have an ID when creating new content.\n      delete node.id;\n      delete node.attributes.nid;\n      delete node.attributes.revision_timestamp;\n      delete node.attributes.changed;\n\n      // Delete revision_uid, type, uid\n      delete node.relationships.revision_uid;\n      delete node.relationships.type;\n      delete node.relationships.uid;\n\n      const saveToken = await api('csrf_token');\n      options.headers.Accept = 'application/vnd.api+json';\n      options.headers['X-CSRF-Token'] = saveToken;\n      options.method = 'POST';\n      options.body = JSON.stringify({ data: node });\n      url = `/jsonapi/${node.type.replace('--', '/')}`;\n      break;\n    }\n    case 'node:save': {\n      // Set the type to the right value for jsonapi to process.\n      // @todo Ideally this should not be differnet in the first place.\n      parameters.node = {\n        ...parameters.node,\n        type: parameters.node.type.includes('--')\n          ? parameters.node.type\n          : `node--${parameters.node.type}`,\n      };\n\n      const saveToken = await api('csrf_token');\n      options.headers.Accept = 'application/vnd.api+json';\n      options.headers['X-CSRF-Token'] = saveToken;\n      options.method = 'PATCH';\n      options.body = JSON.stringify({ data: parameters.node });\n      url = parameters.node.links.self.replace(\n        process.env.REACT_APP_DRUPAL_BASE_URL,\n        '',\n      );\n      break;\n    }\n    case 'taxonomy_vocabulary': {\n      url = '/jsonapi/taxonomy_vocabulary';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    }\n    case 'taxonomy_term': {\n      url = `/jsonapi/taxonomy_term/${parameters.type}`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    }\n    case 'user': {\n      url = `/jsonapi/user`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    }\n    case 'schema': {\n      url = `/schemata/${[parameters.entityTypeId, parameters.bundle].join(\n        '/',\n      )}`;\n      break;\n    }\n    case 'schema_by_id': {\n      url = `/admin-api/entity-schema/${parameters.entityTypeId}/${\n        parameters.entityId\n      }`;\n      break;\n    }\n    case 'field_schema': {\n      url = '/jsonapi/field_config';\n      break;\n    }\n    case 'form_display': {\n      url = '/jsonapi/entity_form_display';\n      break;\n    }\n    case 'field_storage_config': {\n      url = '/jsonapi/field_storage_config';\n      break;\n    }\n    case 'admin_ui_components': {\n      url = '/jsdrupal/components';\n      break;\n    }\n    case 'admin_ui_routes': {\n      url = '/jsdrupal/routes';\n      break;\n    }\n    default:\n      break;\n  }\n\n  const data = await fetch(\n    `${process.env.REACT_APP_DRUPAL_BASE_URL}${url}${\n      queryString\n        ? `?${qs.stringify(queryString, { arrayFormat: 'brackets' })}`\n        : ''\n    }`,\n    options,\n  ).then(res => {\n    if (![200, 201, 204].includes(res.status)) {\n      throw new ApiError(res.status, res.statusText, res);\n    }\n\n    // CSRF tokens return text, not json.\n    if (options.text) {\n      return res.text();\n    }\n    return res.json();\n  });\n  return data;\n}\n\nexport default api;\n","// messageSeverity – used to determine render traits based on message severity.\nexport const MESSAGE_SEVERITY_ERROR = 'MESSAGE_SEVERITY_ERROR';\nexport const MESSAGE_SEVERITY_SUCCESS = 'MESSAGE_SEVERITY_SUCCESS';\nexport const MESSAGE_SEVERITY_INFO = 'MESSAGE_SEVERITY_INFO';\nexport const MESSAGE_SEVERITY_WARNING = 'MESSAGE_SEVERITY_WARNING';\n","import PropTypes from 'prop-types';\n\nexport default {\n  fieldName: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst styles = {\n  select: css`\n    min-width: 182px;\n  `,\n};\n\nconst OptionsSelect = ({\n  label,\n  value,\n  onChange,\n  helpText,\n  fieldName,\n  required,\n  schema: { default: defaultValue },\n  classes,\n  inputProps: { allowed_values: allowedValues },\n}) => (\n  <FormControl margin=\"normal\" classes={classes}>\n    <InputLabel htmlFor={fieldName} required={required}>\n      {label}\n    </InputLabel>\n    <NativeSelect\n      value={value || defaultValue}\n      fullWidth\n      onChange={event => onChange(event.target.value)}\n      inputProps={{\n        name: fieldName,\n        id: fieldName,\n      }}\n      className={styles.select}\n    >\n      {Object.entries(allowedValues).map(([machineName, humanName]) => (\n        <option key={machineName} value={machineName}>\n          {humanName}\n        </option>\n      ))}\n    </NativeSelect>\n    {helpText && <FormHelperText>{helpText}</FormHelperText>}\n  </FormControl>\n);\n\nOptionsSelect.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.string,\n  helpText: PropTypes.string,\n  schema: PropTypes.shape({\n    default: PropTypes.string.isRequired,\n  }).isRequired,\n  inputProps: PropTypes.shape({\n    allowed_values: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nOptionsSelect.defaultProps = {\n  value: '',\n  helpText: '',\n};\n\nexport default OptionsSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst NumberTextfield = ({\n  classes,\n  label,\n  value,\n  onChange,\n  fieldName,\n  required,\n  inputProps,\n}) => (\n  <TextField\n    id={fieldName}\n    value={value}\n    fullWidth\n    onChange={event => onChange(Number(event.target.value))}\n    InputProps={{\n      ...inputProps,\n      unsigned: inputProps.unsigned && inputProps.unsigned.toString(),\n      endAdornment: inputProps.suffix && (\n        <InputAdornment position=\"end\">{inputProps.suffix}</InputAdornment>\n      ),\n      startAdornment: inputProps.prefix && (\n        <InputAdornment position=\"start\">{inputProps.prefix}</InputAdornment>\n      ),\n    }}\n    type=\"number\"\n    margin=\"normal\"\n    label={label}\n    classes={classes}\n    required={required}\n  />\n);\n\nNumberTextfield.propTypes = {\n  ...WidgetPropTypes,\n  inputProps: PropTypes.shape({\n    max: PropTypes.number,\n    min: PropTypes.number,\n    step: PropTypes.number,\n    suffix: PropTypes.string,\n    prefix: PropTypes.string,\n  }),\n  value: PropTypes.number,\n};\n\nNumberTextfield.defaultProps = {\n  inputProps: {\n    min: 0,\n  },\n  value: '',\n};\n\nexport default NumberTextfield;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst StringTextfield = props => (\n  <TextField\n    id={props.fieldName}\n    value={\n      (Array.isArray(props.value) && props.value.length && props.value[0]) ||\n      props.value\n    }\n    onChange={event => props.onChange(event.target.value)}\n    margin=\"normal\"\n    label={props.label}\n    classes={props.classes}\n    required={props.required}\n    autoFocus={props.autoFocus}\n    fullWidth\n  />\n);\n\nStringTextfield.propTypes = {\n  ...WidgetPropTypes,\n  // @todo This should not be needed after https://github.com/jsdrupal/drupal-admin-ui/issues/195\n  value: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  autoFocus: PropTypes.bool,\n};\n\nStringTextfield.defaultProps = {\n  value: '',\n  autoFocus: false,\n};\n\nexport default StringTextfield;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckBox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { css } from 'emotion';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nlet styles;\n\nconst BooleanCheckbox = props => {\n  const { onChange, label, value } = props;\n\n  return (\n    <FormControlLabel\n      id={`${props.fieldName}-label`}\n      control={\n        <CheckBox\n          id={`${props.fieldName}-cb`}\n          onChange={event => onChange(event.target.checked)}\n          margin=\"normal\"\n          value={String(value)}\n          checked={value}\n        />\n      }\n      label={label}\n      classes={styles}\n      required={props.required}\n    />\n  );\n};\n\nBooleanCheckbox.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.bool,\n};\n\nBooleanCheckbox.defaultProps = {\n  value: false,\n};\n\nstyles = {\n  root: css`\n    align-items: center;\n  `,\n};\n\nexport default BooleanCheckbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst DatetimeTimestamp = ({\n  classes,\n  fieldName,\n  label,\n  value,\n  onChange,\n  required,\n}) => (\n  <TextField\n    id={fieldName}\n    fullWidth\n    label={label}\n    type=\"datetime-local\"\n    defaultValue={value ? new Date(value * 1000).toJSON().slice(0, 19) : null}\n    margin=\"normal\"\n    onChange={event => onChange(+new Date(event.target.value) / 1000)}\n    InputLabelProps={{\n      shrink: true,\n    }}\n    classes={classes}\n    required={required}\n  />\n);\n\nDatetimeTimestamp.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.number,\n  required: PropTypes.bool.isRequired,\n};\n\nDatetimeTimestamp.defaultProps = {\n  value: 0,\n};\n\nexport default DatetimeTimestamp;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport api from '../../../utils/api/api';\n\nconst Container = styled('div')`\n  width: 100%;\n`;\n\nconst Element = styled('div')`\n  border: 2px dashed grey;\n  border-radius: 3px;\n  display: flex;\n  padding: 25px;\n  width: 100%;\n\n  > div {\n    width: 100%;\n  }\n`;\n\nconst Text = styled('div')`\n  margin: 0;\n  text-align: center;\n  .icon {\n    margin-left: 10px;\n  }\n`;\n\nconst marginTopDense = {\n  marginTop: '10px',\n};\n\nconst marginTop = {\n  marginTop: '20px',\n};\n\nconst error = {\n  color: 'red',\n  paddingLeft: 0,\n};\n\nclass FileUpload extends Component {\n  static propTypes = {\n    entityTypeId: PropTypes.string.isRequired,\n    bundle: PropTypes.string.isRequired,\n    fieldName: PropTypes.string.isRequired,\n    onFileUpload: PropTypes.func.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    remainingUploads: PropTypes.number.isRequired,\n    inputProps: PropTypes.shape({\n      file_extensions: PropTypes.string,\n      max_filesize: PropTypes.string,\n    }).isRequired,\n  };\n\n  /**\n   * Initial state\n   */\n  state = {\n    total: 0,\n    files: [],\n    errors: [],\n    filesLength: 0,\n    isDisabled: false,\n  };\n\n  /**\n   * Will set the border of the element to red and\n   * drop effect on drag over.\n   * @param {Event} event\n   */\n  onDragOver = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setElementStyles('red');\n    event.dataTransfer.dropEffect = 'dragend';\n  };\n\n  /**\n   * Resets the border on drag leave.\n   * @param {Event} event\n   */\n  onDragLeave = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setElementStyles();\n  };\n\n  /**\n   * Will read the file/s that are dropped in the drop area.\n   * @param {Event} event\n   */\n  onDrop = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.readFile(event.dataTransfer.files);\n  };\n\n  /**\n   * Will call the click event on the input to open the file explorer\n   * to allow file/s to be selected.\n   */\n  onClick = () => {\n    this.input.click();\n  };\n\n  /**\n   * Sets the styles of the drop zone element.\n   * Set the border and opacity.\n   * @param {String} [color=\"grey\"] Color of the border.\n   */\n  setElementStyles = (color = 'grey') => {\n    const {\n      element,\n      state: { isDisabled },\n    } = this;\n\n    if (element) {\n      element.style.border = `2px dashed ${color}`;\n      element.style.opacity = `${isDisabled ? '0.3' : '1'}`;\n    }\n  };\n\n  /**\n   * Will get the selected file/s from the file explorer.\n   * @param {Event} event\n   */\n  getFiles = event => {\n    this.readFile(event.target.files);\n  };\n\n  /**\n   * Uploads the file to the server, updates the total and files state.\n   * @param {Object} file File to be uploaded.\n   */\n  uploadFile = file => {\n    const reader = new window.FileReader();\n\n    reader.onloadend = async ({ target: { readyState, result } }) => {\n      if (readyState === window.FileReader.DONE) {\n        const {\n          resetState,\n          props: { entityTypeId, bundle, fieldName, onFileUpload },\n        } = this;\n        const { buffer } = new Uint8Array(result);\n        const token = await api('csrf_token');\n        // Replace file name, some reason any space doesn't work\n        // TODO: Find a way to fix this without changing the name\n        const fileName = file.name.replace(/[,#!$^&*;{}=\\-+`~()[\\] ]/g, '_');\n\n        // Upload the file to server\n        const createdFile = await api('file:upload', {\n          parameters: {\n            bundle,\n            fileName,\n            fieldName,\n            entityTypeId,\n            body: buffer,\n          },\n          options: {\n            headers: {\n              'X-CSRF-Token': token,\n            },\n          },\n        });\n\n        this.setState(\n          prevState => ({\n            total: prevState.total + 1,\n            files: [...prevState.files, createdFile],\n          }),\n          () => {\n            onFileUpload(this.state.files);\n            resetState();\n          },\n        );\n      }\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  /**\n   * Checks the current file has met all the criteria before\n   * being uploaded to the server. If not then will set the\n   * error state and update the total.\n   * Will check file size and extension.\n   * @param {String} type file type.\n   * @param {Number} size file size.\n   * @param {String} name file name.\n   */\n  checkFile = ({ type, size, name, lastModified }) => {\n    /* eslint-disable camelcase */\n    const errors = {};\n    const extension = type.split('/')[1]; // <MIME_subtype>\n    const {\n      resetState,\n      props: {\n        inputProps: { max_filesize, file_extensions },\n      },\n    } = this;\n\n    // Check file size\n    if (max_filesize && size > Number(max_filesize)) {\n      // TODO: Convert max_filesize to MB\n      errors.size =\n        'The file could not be saved because it exceeds 2 MB, the maximum allowed size for uploads.';\n    }\n\n    // Check file extension\n    if (!file_extensions.includes(extension)) {\n      errors.type = `The image file is invalid or the image type is not allowed. Allowed types: ${file_extensions}.`;\n    }\n\n    // Check if there are errors\n    if (Object.keys(errors).length > 0) {\n      errors.name = `The specified file ${name} could not be uploaded.`;\n      errors.id = lastModified;\n\n      // Set the state with error and update total\n      this.setState(\n        prevState => ({\n          total: prevState.total + 1,\n          errors: [...prevState.errors, errors],\n        }),\n        resetState,\n      );\n      return false;\n    }\n\n    return true;\n    /* eslint-enable camelcase */\n  };\n\n  /**\n   * Resets the state if all file/s have been uploaded.\n   */\n  resetState = () => {\n    const {\n      setElementStyles,\n      state: { total, filesLength },\n    } = this;\n\n    if (total === filesLength) {\n      this.setState(\n        { files: [], filesLength: 0, total: 0, isDisabled: false },\n        setElementStyles,\n      );\n    }\n  };\n\n  /**\n   * Will read the file/s, check if multiple files can be uploaded,\n   * check for errors, if no errors then upload the file.\n   * @param {Object} files Selected files.\n   */\n  readFile = files => {\n    const {\n      setElementStyles,\n      checkFile,\n      uploadFile,\n      props: { multiple, remainingUploads },\n    } = this;\n\n    // Slice the files if more than the remaining uploads length\n    const slicedFiles = Object.keys(files)\n      .slice(0, remainingUploads)\n      .reduce((obj, value) => {\n        obj[value] = files[value];\n        return obj;\n      }, {});\n\n    this.setState(\n      {\n        errors: [],\n        isDisabled: true,\n        filesLength: Object.keys(slicedFiles).length,\n      },\n      setElementStyles,\n    );\n\n    if (multiple) {\n      Object.keys(slicedFiles).forEach(key => {\n        const file = slicedFiles[key];\n        if (checkFile(file)) {\n          uploadFile(file);\n        }\n      });\n    }\n\n    // If single file upload, upload the first file from the dropped files\n    if (!multiple && checkFile(slicedFiles[0])) {\n      uploadFile(slicedFiles[0]);\n    }\n  };\n\n  /**\n   * If disabled, then prevent all file upload events.\n   * @param {Function} fn Event function.\n   */\n  isEnabled = fn => {\n    if (this.state.isDisabled) {\n      return null;\n    }\n\n    return fn;\n  };\n\n  render = () => {\n    const {\n      onDrop,\n      onClick,\n      getFiles,\n      isEnabled,\n      onDragOver,\n      onDragLeave,\n      state: { total, errors, isDisabled, filesLength },\n      props: { multiple, remainingUploads },\n    } = this;\n\n    return (\n      <Container>\n        <Element\n          onDrop={isEnabled(onDrop)}\n          onClick={isEnabled(onClick)}\n          onDragOver={isEnabled(onDragOver)}\n          onDragLeave={isEnabled(onDragLeave)}\n          innerRef={element => {\n            this.element = element;\n          }}\n        >\n          <Text>\n            <Typography variant=\"subtitle1\">\n              {multiple\n                ? 'Drop files or click here to upload.'\n                : 'Drop a file or click here to upload.'}\n            </Typography>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={isDisabled}\n              aria-label=\"Upload Image/s\"\n              style={marginTop}\n            >\n              Upload <CloudUploadIcon className=\"icon\" />\n            </Button>\n          </Text>\n\n          <input\n            type=\"file\"\n            onChange={getFiles}\n            multiple={multiple}\n            style={{ display: 'none' }}\n            ref={element => {\n              this.input = element;\n            }}\n          />\n        </Element>\n\n        {filesLength > 0 && (\n          <LinearProgress\n            style={marginTop}\n            variant=\"determinate\"\n            value={(total / filesLength) * 100}\n          />\n        )}\n\n        {remainingUploads <= 15 && (\n          <Typography component=\"p\" style={marginTopDense}>\n            Remaining uploads: {remainingUploads}\n          </Typography>\n        )}\n\n        {errors.length > 0 && (\n          <div>\n            <Typography style={error} component=\"p\">\n              One or more files could not be uploaded.\n            </Typography>\n\n            <Typography style={error} component=\"ul\">\n              {errors.map(({ name, size, type, id }) => (\n                <Typography style={error} component=\"li\" key={id}>\n                  {name}\n                  <Typography style={error} component=\"ul\">\n                    {size && (\n                      <Typography style={error} component=\"li\">\n                        {size}\n                      </Typography>\n                    )}\n                    {type && (\n                      <Typography style={error} component=\"li\">\n                        {type}\n                      </Typography>\n                    )}\n                  </Typography>\n                </Typography>\n              ))}\n            </Typography>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default FileUpload;\n","interface FieldItem {\n  id: string;\n}\n\nexport const setItemById = (\n  multiple: boolean,\n  item: FieldItem,\n  items: Array<FieldItem>,\n): Array<FieldItem> | FieldItem => {\n  if (multiple) {\n    const index = items.findIndex(i => i.id === item.id);\n    if (index === -1) {\n      return [...items, item];\n    }\n    items[index] = item;\n    return items;\n  }\n  return item;\n};\n\nexport const getItemsAsArray = (\n  multiple: boolean,\n  items: Array<FieldItem>,\n): Array<FieldItem> => {\n  if (Array.isArray(items)) {\n    return items;\n  }\n  if (multiple) {\n    return Object.values(items);\n  }\n  return [items];\n};\n\nexport const deleteItemById = (\n  multiple: boolean,\n  id: string,\n  items: Array<FieldItem>,\n): Array<FieldItem> => {\n  if (!multiple) {\n    return [];\n  }\n\n  return items.filter(i => i.id !== id);\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport { css } from 'emotion';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\nimport FileUpload from '../FileUpload/FileUpload';\nimport {\n  deleteItemById,\n  getItemsAsArray,\n  setItemById,\n} from '../../../utils/api/fieldItem';\nimport api from '../../../utils/api/api';\n\nconst CardWrapper = styled('div')`\n  margin-top: 15px;\n`;\n\nconst Element = styled('div')`\n  width: 100%;\n\n  legend {\n    margin-bottom: 10px;\n  }\n\n  .remove {\n    margin-left: auto;\n  }\n`;\n\nconst Image = styled('div')`\n  > img {\n    max-width: 100px;\n    margin-right: 20px;\n  }\n`;\n\nconst styles = {\n  fullWidth: css`\n    width: 100%;\n  `,\n};\n\nclass FileUploadWidget extends React.Component {\n  state = {\n    selectedItems: null,\n  };\n\n  componentDidMount() {\n    if (\n      !this.state.selectedItems &&\n      this.props.value &&\n      this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.value &&\n      this.props.value.data &&\n      prevProps.value.data !== this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  setSelectedItems = items => {\n    this.setState(\n      {\n        selectedItems: items,\n      },\n      () => {\n        this.props.onChange({\n          data: this.state.selectedItems,\n        });\n      },\n    );\n  };\n\n  recalculateSelectedItems = () => {\n    const entityTypeId = 'file';\n    const bundle = 'file';\n\n    const multiple = this.props.schema.properties.data.type === 'array';\n    const items = getItemsAsArray(multiple, this.props.value.data);\n    const ids = items.map(({ id }) => id);\n    this.fetchEntitites(entityTypeId, bundle, ids).then(\n      ({ data: entities }) => {\n        this.setState({\n          selectedItems: entities\n            .map(({ id, attributes }, index) => ({\n              id,\n              type: 'file--file',\n              [entityTypeId]: attributes,\n              meta: items[index].meta,\n            }))\n            .reduce(\n              (agg, item) => setItemById(multiple, item, agg),\n              multiple ? [] : {},\n            ),\n        });\n      },\n    );\n  };\n\n  fetchEntitites = (entityTypeId, bundle, ids) =>\n    api(entityTypeId, {\n      queryString: {\n        filter: {\n          id: {\n            condition: {\n              operator: 'IN',\n              path: 'uuid',\n              value: ids,\n            },\n          },\n        },\n      },\n      parameters: {\n        bundle,\n      },\n    });\n\n  render() {\n    const {\n      value,\n      label,\n      bundle,\n      fieldName,\n      inputProps,\n      entityTypeId,\n      required,\n      schema: { properties, maxItems },\n      classes,\n    } = this.props;\n\n    if (this.state.selectedItems === null) {\n      return null;\n    }\n\n    // If array then allow for multiple uploads.\n    const multiple = properties.data.type === 'array';\n\n    const items = getItemsAsArray(multiple, this.state.selectedItems)\n      // Default schema creates stub entries, which we don't need here.\n      .filter(item => item.id);\n    const length = (items && items.length) || 0;\n    // maxItems is only set if array, so set to 1 as default.\n    const maxItemsCount = multiple ? maxItems || 100000000000 : 1;\n\n    return (\n      <FormControl\n        margin=\"normal\"\n        required={required}\n        classes={classes}\n        fullWidth\n      >\n        <Element>\n          <FormLabel component=\"legend\">{label}</FormLabel>\n          <div\n            className={styles.fullWidth}\n            style={{\n              display:\n                (!multiple && length) || length === maxItemsCount\n                  ? 'none'\n                  : 'block',\n            }}\n          >\n            <FileUpload\n              bundle={bundle}\n              multiple={multiple}\n              fieldName={fieldName}\n              inputProps={inputProps}\n              entityTypeId={entityTypeId}\n              remainingUploads={maxItemsCount - length}\n              onFileUpload={files => {\n                const newItems = files.reduce((itemsAgg, file) => {\n                  const item = {\n                    file: {\n                      type: 'file--file',\n                      url: file.url[0].value,\n                      id: file.uuid[0].value,\n                      filename: file.filename[0].value,\n                    },\n                    meta: { alt: '' },\n                    id: file.uuid[0].value,\n                    type: 'file--file',\n                  };\n                  return setItemById(multiple, item, itemsAgg);\n                }, items);\n\n                this.setSelectedItems(newItems);\n              }}\n            />\n          </div>\n\n          {length > 0 && (\n            <CardWrapper>\n              <Card>\n                <CardContent>\n                  <List>\n                    {items.map((item, index) => {\n                      const {\n                        id,\n                        meta: { alt },\n                        file: { url, filename },\n                      } = item;\n                      const last = items.length - 1 === index;\n\n                      return (\n                        <Fragment key={id}>\n                          <ListItem>\n                            <Image>\n                              <img\n                                alt={alt || filename}\n                                src={`${\n                                  process.env.REACT_APP_DRUPAL_BASE_URL\n                                }${url}`}\n                              />\n                            </Image>\n                            <TextField\n                              required\n                              value={alt}\n                              margin=\"normal\"\n                              label=\"Alternative text\"\n                              onChange={event =>\n                                this.setSelectedItems(\n                                  setItemById(\n                                    multiple,\n                                    {\n                                      ...item,\n                                      meta: {\n                                        alt: event.target.value,\n                                      },\n                                    },\n                                    value.data,\n                                  ),\n                                )\n                              }\n                            />\n                            <Button\n                              mini\n                              id={id}\n                              variant=\"fab\"\n                              color=\"secondary\"\n                              className=\"remove\"\n                              aria-label=\"Remove Image\"\n                              onClick={event => {\n                                this.setSelectedItems(\n                                  deleteItemById(\n                                    multiple,\n                                    event.currentTarget.id,\n                                    items,\n                                  ),\n                                );\n                              }}\n                            >\n                              <DeleteIcon />\n                            </Button>\n                          </ListItem>\n                          {!last && <Divider />}\n                        </Fragment>\n                      );\n                    })}\n                  </List>\n                </CardContent>\n              </Card>\n            </CardWrapper>\n          )}\n        </Element>\n      </FormControl>\n    );\n  }\n}\n\nconst filePropType = PropTypes.shape({\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  filename: PropTypes.string.isRequired,\n});\n\nconst fileItemMultiplePropType = PropTypes.shape({\n  id: PropTypes.toString.isRequired,\n  file: filePropType.isRequired,\n});\n\nconst fileItemSinglePropType = PropTypes.shape({\n  file: filePropType.isRequired,\n});\n\nFileUploadWidget.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.shape({\n    data: PropTypes.shape({\n      file: PropTypes.oneOfType([\n        PropTypes.arrayOf(fileItemMultiplePropType),\n        fileItemSinglePropType,\n      ]),\n      meta: PropTypes.shape({\n        alt: PropTypes.string,\n      }),\n    }),\n  }),\n  inputProps: PropTypes.shape({\n    file_extensions: PropTypes.string,\n    max_filesize: PropTypes.string,\n  }),\n  schema: PropTypes.shape({\n    maxItems: PropTypes.number,\n    properties: PropTypes.shape({\n      data: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n      }),\n    }),\n  }).isRequired,\n};\n\nFileUploadWidget.defaultProps = {\n  value: { data: { file: {}, meta: {} } },\n  inputProps: {\n    file_extensions: 'png gif jpg jpeg',\n    max_filesize: '2000000',\n  },\n};\n\nexport default FileUploadWidget;\n","import PropTypes from 'prop-types';\n\nconst lazyFunction = f => (props, propName, componentName, ...rest) =>\n  f(props, propName, componentName, ...rest);\n\nlet schemaType;\nconst lazySchemaType = lazyFunction(() => schemaType);\n\nexport default PropTypes.shape({\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  properties: PropTypes.objectOf(lazyFunction(lazySchemaType)),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\nimport SchemaPropType from '../../05_pages/NodeForm/SchemaPropType';\n\nimport api from '../../../utils/api/api';\nimport { getItemsAsArray } from '../../../utils/api/fieldItem';\n\nconst styles = {\n  results: css`\n    position: absolute;\n    z-index: 900;\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n};\n\nclass EntityReferenceAutocomplete extends React.Component {\n  static propTypes = {\n    ...WidgetPropTypes,\n    schema: SchemaPropType.isRequired,\n    required: PropTypes.bool.isRequired,\n    inputProps: PropTypes.shape({\n      bundle: PropTypes.string,\n      type: PropTypes.string,\n    }),\n  };\n\n  static defaultProps = {\n    inputProps: {},\n  };\n\n  state = {\n    inputValue: '',\n    selectedItems: null,\n    suggestions: new Map(),\n  };\n\n  componentDidMount() {\n    if (\n      !this.state.selectedItems &&\n      this.props.value &&\n      this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.value &&\n      this.props.value.data &&\n      prevProps.value.data !== this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  getMaxItems = () => {\n    const {\n      schema: { maxItems, properties },\n    } = this.props;\n    const multiple = properties.data.type === 'array';\n    return multiple ? maxItems || 100000000000 : 1;\n  };\n\n  recalculateSelectedItems = () => {\n    const [\n      entityTypeId,\n      [bundle],\n    ] = this.determineEntityTypeAndBundlesFromSchema(this.props.schema);\n\n    const multiple = this.props.schema.properties.data.type === 'array';\n    const items = getItemsAsArray(multiple, this.props.value.data);\n    const ids = items.map(({ id }) => id);\n    this.fetchEntitites(entityTypeId, bundle, ids).then(\n      ({ data: entities }) => {\n        this.setState({\n          selectedItems: entities.map(\n            ({ id, attributes: { name: label } }) => ({\n              id,\n              label,\n              type: (\n                this.props.schema.properties.data.items ||\n                this.props.schema.properties.data\n              ).properties.type.enum[0],\n            }),\n          ),\n        });\n      },\n    );\n  };\n\n  handleChange = ({ id, label }) =>\n    this.setState(\n      ({ selectedItems }) => ({\n        inputValue: '',\n        selectedItems: {\n          ...selectedItems,\n          ...{\n            [id]: {\n              id,\n              label,\n              // Figure out a better way to handle this.\n              type: (\n                this.props.schema.properties.data.items ||\n                this.props.schema.properties.data\n              ).properties.type.enum[0],\n            },\n          },\n        },\n      }),\n      () => {\n        this.props.onChange(this.state.selectedItems);\n      },\n    );\n\n  handleInputChange = event => {\n    if (\n      this.state.selectedItems &&\n      this.getMaxItems() === Object.keys(this.state.selectedItems).length\n    ) {\n      return;\n    }\n\n    this.setState({ inputValue: event.target.value }, () => {\n      if (!this.state.inputValue.length) {\n        return;\n      }\n\n      // @todo Move this call to the mounting component?\n      const [\n        entityTypeId,\n        [bundle],\n      ] = this.determineEntityTypeAndBundlesFromSchema(this.props.schema);\n      this.fetchSuggestedEntities(\n        entityTypeId,\n        bundle,\n        this.state.inputValue,\n      ).then(({ data: items }) => {\n        this.setState({\n          suggestions: new Map(\n            items.map(({ id, attributes: { name: label } }) => [\n              id,\n              { id, label },\n            ]),\n          ),\n        });\n      });\n    });\n  };\n\n  fetchEntitites = (entityTypeId, bundle, ids) =>\n    api(entityTypeId, {\n      queryString: {\n        filter: {\n          id: {\n            condition: {\n              operator: 'IN',\n              path: 'uuid',\n              value: ids,\n            },\n          },\n        },\n      },\n      parameters: {\n        type: bundle,\n      },\n    });\n\n  fetchSuggestedEntities = (bundle, type, input) =>\n    api(bundle, {\n      queryString: {\n        filter: {\n          // @todo On the longrun fetch the label_key from the entity type\n          //   definition.\n          name: {\n            condition: {\n              path: 'name',\n              operator: 'CONTAINS',\n              value: input,\n            },\n          },\n        },\n      },\n      parameters: {\n        type,\n      },\n    });\n\n  handleKeyDown = event => {\n    const { inputValue, selectedItems } = this.state;\n    if (\n      selectedItems &&\n      selectedItems.length &&\n      !inputValue.length &&\n      keycode(event) === 'backspace'\n    ) {\n      this.setState(\n        {\n          selectedItems: selectedItems.slice(0, selectedItems.length - 1),\n        },\n        () => this.props.onChange(this.state.selectedItems),\n      );\n    }\n  };\n\n  handleDelete = id => () => {\n    this.setState(\n      state => {\n        const { selectedItems } = state;\n        delete selectedItems[id];\n        return { selectedItems };\n      },\n      () => this.props.onChange(this.state.selectedItems),\n    );\n  };\n\n  determineEntityTypeAndBundlesFromSchema = schema => {\n    // For some reason different entity references have different schema.\n    const resourceNames = (\n      schema.properties.data.items || schema.properties.data\n    ).properties.type.enum;\n    return resourceNames\n      .map(name => name.split('--'))\n      .reduce(\n        ([, bundles = []], [entityTypeId, bundle]) => [\n          entityTypeId,\n          [...bundles, entityTypeId === bundle ? undefined : bundle],\n        ],\n        [],\n      );\n  };\n\n  renderSuggestion = ({\n    suggestion,\n    index,\n    itemProps,\n    highlightedIndex,\n    selectedItem: selectedItems,\n  }) => {\n    if (\n      selectedItems &&\n      this.getMaxItems() === Object.keys(selectedItems).length\n    ) {\n      return null;\n    }\n\n    const isHighlighted = highlightedIndex === index;\n    const isSelected =\n      selectedItems && Object.keys(selectedItems).includes(suggestion.id);\n\n    return (\n      <MenuItem\n        {...itemProps}\n        key={suggestion.id}\n        selected={isHighlighted}\n        component=\"div\"\n        style={{\n          fontWeight: isSelected ? 500 : 400,\n        }}\n      >\n        {suggestion.label}\n      </MenuItem>\n    );\n  };\n\n  renderInput = ({ InputProps, ref, label, ...other }) => (\n    <TextField\n      label={label}\n      id={InputProps.id}\n      InputProps={{\n        inputRef: ref,\n        ...InputProps,\n        inputProps: {\n          autoComplete: 'off',\n        },\n      }}\n      {...other}\n    />\n  );\n\n  render() {\n    const { inputValue, selectedItems } = this.state;\n    const { fieldName } = this.props;\n    return (\n      <FormControl\n        margin=\"normal\"\n        required={this.props.required}\n        classes={this.props.classes}\n        fullWidth\n      >\n        <Downshift\n          inputValue={inputValue}\n          onChange={this.handleChange}\n          selectedItem={selectedItems}\n          itemToString={item => (item ? item.label : '')}\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            selectedItem,\n            highlightedIndex,\n          }) => (\n            <div className={styles.fullWidth}>\n              {this.renderInput({\n                fullWidth: true,\n                label: this.props.label,\n                InputProps: getInputProps({\n                  startAdornment: selectedItems\n                    ? /* eslint-disable prettier/prettier */\n                      Object.entries(selectedItems).map(([key, value]) => (\n                        <Chip\n                          key={key}\n                          tabIndex={-1}\n                          label={value.label}\n                          className=\"chip\"\n                          onDelete={this.handleDelete(key)}\n                        />\n                      ))\n                    : [],\n                  /* eslint-enable prettier/prettier */\n                  onChange: this.handleInputChange,\n                  onKeyDown: this.handleKeyDown,\n                  placeholder: '',\n                  id: fieldName,\n                }),\n              })}\n              {isOpen ? (\n                <Paper\n                  className={`${styles.results} ${styles.fullWidth}`}\n                  square\n                >\n                  {!!this.state.inputValue.length &&\n                    Array.from(this.state.suggestions.values()).map(\n                      (suggestion, index) =>\n                        this.renderSuggestion({\n                          suggestion,\n                          index,\n                          itemProps: getItemProps({ item: suggestion }),\n                          highlightedIndex,\n                          selectedItem,\n                        }),\n                    )}\n                </Paper>\n              ) : null}\n            </div>\n          )}\n        </Downshift>\n      </FormControl>\n    );\n  }\n}\n\nexport default EntityReferenceAutocomplete;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport RichTextEditor from 'react-rte';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nlet styles;\n\n/**\n * Some basic wysiwyg editor based upon react-rte which is based upon draft.js.\n * This was designed to be as easiest as possible for the demo.\n *\n * On the longrun we might want to switch back to ckeditor.\n */\nclass TextTextarea extends React.Component {\n  static propTypes = {\n    ...WidgetPropTypes,\n    value: PropTypes.oneOfType([\n      PropTypes.shape({\n        value: PropTypes.string.isRequired,\n      }),\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          value: PropTypes.string.isRequired,\n        }),\n      ),\n    ]),\n  };\n\n  static defaultProps = {\n    value: {\n      value: '',\n      format: 'basic_html',\n    },\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  createValueFromString = props =>\n    RichTextEditor.createValueFromString(\n      // @todo This should not be needed after https://github.com/jsdrupal/drupal-admin-ui/issues/195\n      (Array.isArray(props.value) &&\n        props.value.length &&\n        props.value[0].value) ||\n        props.value.value ||\n        '',\n      'html',\n    );\n\n  extractValueString = props =>\n    (Array.isArray(props.value) &&\n      props.value.length &&\n      props.value[0].value) ||\n    props.value.value ||\n    '';\n\n  state = {\n    value: this.createValueFromString(this.props),\n    valueString: this.extractValueString(this.props),\n  };\n\n  componentDidUpdate = prevProps => {\n    if (\n      this.props.value.value !== prevProps.value.value &&\n      this.extractValueString(this.props) !== this.state.valueString\n    ) {\n      this.setState({\n        value: this.createValueFromString(this.props),\n      });\n    }\n  };\n\n  onChange = value => {\n    const valueString = value.toString('html');\n    this.setState({ value, valueString }, () => {\n      // Send the changes up to the parent component as an HTML string.\n      // This is here to demonstrate using `.toString()` but in a real app it\n      // would be better to avoid generating a string on each change.\n      this.props.onChange({\n        value: valueString,\n        format: 'basic_html',\n      });\n    });\n  };\n\n  render() {\n    return (\n      <FormControl margin=\"normal\" fullWidth required={this.props.required}>\n        <FormLabel classes={{ root: styles.label }}>\n          {this.props.label}\n        </FormLabel>\n        <RichTextEditor\n          className={styles.container}\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n      </FormControl>\n    );\n  }\n}\n\nstyles = {\n  container: css`\n    .public-DraftEditor-content {\n      min-height: 110px;\n    }\n  `,\n  label: css`\n    margin-bottom: 10px;\n  `,\n};\n\nexport default TextTextarea;\n","import OptionsSelect from '../../02_atoms/Widgets/OptionsSelect';\nimport NumberTextfield from '../../02_atoms/Widgets/NumberTextfield';\nimport StringTextfield from '../../02_atoms/Widgets/StringTextfield';\nimport BooleanCheckbox from '../../02_atoms/Widgets/BooleanCheckbox';\nimport DatetimeTimestamp from '../../02_atoms/Widgets/DatetimeTimestamp';\nimport FileUploadWidget from '../../02_atoms/Widgets/FileUploadWidget';\nimport EntityReferenceAutocomplete from '../../02_atoms/Widgets/EntityReferenceAutocomplete';\nimport TextTextarea from '../../02_atoms/Widgets/TextTextarea';\n\n// @todo How do we do extensibility from modules, maybe a build step?\nconst widgets = {\n  options_select: {\n    component: OptionsSelect,\n  },\n  number: {\n    component: NumberTextfield,\n  },\n  string: {\n    component: StringTextfield,\n  },\n  boolean_checkbox: {\n    component: BooleanCheckbox,\n  },\n  datetime_timestamp: {\n    component: DatetimeTimestamp,\n  },\n  image_image: {\n    component: FileUploadWidget,\n    multiple: true,\n  },\n  entity_reference_autocomplete: {\n    component: EntityReferenceAutocomplete,\n    multiple: true,\n  },\n  text_textarea: {\n    component: TextTextarea,\n  },\n};\n\nexport default widgets;\n","import { call, put, select, takeLatest, takeEvery } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport api from '../utils/api/api';\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_SUCCESS,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_WARNING,\n} from '../constants/messages';\nimport { ApiError } from '../utils/api/errors';\nimport widgets from '../components/05_pages/NodeForm/Widgets';\n\nexport const OPEN_DRAWER = 'OPEN_DRAWER';\nexport const openDrawer = () => ({\n  type: OPEN_DRAWER,\n});\n\nexport const CLOSE_DRAWER = 'CLOSE_DRAWER';\nexport const closeDrawer = () => ({\n  type: CLOSE_DRAWER,\n});\n\nexport const SET_MESSAGE = 'SET_MESSAGE';\n\n/**\n *\n * @param {string} message - the message content\n * @param {string} severity - the severity level of the message, one of the levels\n *  listed at constants/messages.js\n * @returns {{type: string, payload: {message: *, messageSeverity: *}}}\n */\nexport const setMessage = (message, messageSeverity) => ({\n  type: SET_MESSAGE,\n  payload: {\n    message,\n    messageSeverity,\n  },\n});\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_ERROR}}}\n */\nexport const setErrorMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_ERROR);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_SUCCESS}}}\n */\nexport const setSuccessMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_SUCCESS);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_INFO}}}\n */\nexport const setInfoMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_INFO);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_WARNING}}}\n */\nexport const setWarningMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_WARNING);\n\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\nexport const clearMessage = key => ({\n  type: CLEAR_MESSAGE,\n  payload: {\n    key,\n  },\n});\n\nexport const CLEAR_ALL_MESSAGES = 'CLEAR_MESSAGES';\nexport const clearAllMessages = () => ({\n  type: CLEAR_ALL_MESSAGES,\n  payload: {},\n});\n\nexport const MENU_REQUESTED = 'MENU_REQUESTED';\nexport const requestMenu = () => ({\n  type: MENU_REQUESTED,\n  payload: {},\n});\n\nexport const MENU_LOADED = 'MENU_LOADED';\nfunction* loadMenu() {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const menuLinks = yield call(api, 'menu');\n\n    yield put({\n      type: MENU_LOADED,\n      payload: {\n        menuLinks,\n      },\n    });\n  } catch (error) {\n    if (process.env.REACT_APP_DRUPAL_BASE_URL.includes('localhost')) {\n      yield put(\n        setErrorMessage(\n          'Unable to access data from Drupal. Did you set REACT_APP_DRUPAL_BASE_URL to localhost instead of 127.0.0.1?',\n        ),\n      );\n    }\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\n/**\n * Gets all available content types.\n */\nexport const CONTENT_TYPES_REQUESTED = 'CONTENT_TYPES_REQUESTED';\nexport const requestContentTypes = () => ({\n  type: CONTENT_TYPES_REQUESTED,\n  payload: {},\n});\n\nexport const contentTypesSelector = state => state.application.contentTypes;\nexport const CONTENT_TYPES_LOADED = 'CONTENT_TYPES_LOADED';\nfunction* loadContentTypes() {\n  try {\n    const contentTypes = yield call(api, 'contentTypes');\n    yield put({\n      type: CONTENT_TYPES_LOADED,\n      payload: {\n        contentTypes,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\n/**\n * Gets all available action types.\n */\nexport const ACTIONS_REQUESTED = 'ACTIONS_REQUESTED';\nexport const requestActions = () => ({\n  type: ACTIONS_REQUESTED,\n  payload: {},\n});\n\nexport const getActionsCache = state => state.application.actions;\nexport const ACTIONS_LOADED = 'ACTIONS_LOADED';\nfunction* loadActions() {\n  try {\n    let actions = { data: yield select(getActionsCache) };\n    if (!Object.keys(actions.data).length) {\n      actions = yield call(api, 'actions');\n    }\n    yield put({\n      type: ACTIONS_LOADED,\n      payload: {\n        actions,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  }\n}\n\nexport const COMPONENT_LIST_REQUESTED = 'COMPONENT_LIST_REQUESTED';\nexport const requestComponentList = () => ({\n  type: COMPONENT_LIST_REQUESTED,\n  payload: {},\n});\n\nexport const COMPONENT_LIST_LOADED = 'COMPONENT_LIST_LOADED';\n\nfunction* loadComponentList() {\n  try {\n    const components = yield call(api, 'admin_ui_components');\n    yield put({\n      type: COMPONENT_LIST_LOADED,\n      payload: {\n        components: {\n          ...components,\n          widgets: {\n            ...components.widgets,\n            ...widgets,\n          },\n        },\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  }\n}\n\nexport default function* watchApplication() {\n  yield takeLatest(MENU_REQUESTED, loadMenu);\n  yield takeLatest(CONTENT_TYPES_REQUESTED, loadContentTypes);\n  yield takeEvery(ACTIONS_REQUESTED, loadActions);\n  yield takeLatest(COMPONENT_LIST_REQUESTED, loadComponentList);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport { css } from 'emotion';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  title: css`\n    margin: 10px 3px 40px;\n  `,\n};\n\nconst PageTitle = ({ children }) => (\n  <Typography variant=\"h4\" classes={{ root: styles.title }}>\n    {children}\n  </Typography>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst reducePropsToState = propsList => {\n  const innermostProps = propsList[propsList.length - 1];\n  if (innermostProps) {\n    return innermostProps.children;\n  }\n\n  return null;\n};\n\n/**\n * Set the title of the page based on the children of PageTitle.\n *\n * @param  {(String|Array)} title\n *   Title may be an array if the number children is > 1\n */\nconst handleStateChangeOnClient = title => {\n  document.title = (Array.isArray(title) ? title : [title])\n    .map(e => (e && typeof e === 'string' ? e.trim() : ''))\n    .join(' ');\n};\n\nexport default withSideEffect(reducePropsToState, handleStateChangeOnClient)(\n  PageTitle,\n);\n","import PageTitle from './PageTitle';\n\nexport default PageTitle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Markup } from 'interweave';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PageTitle from '../../02_atoms/PageTitle';\n\nconst styles = {\n  menuLink: css`\n    text-decoration: inherit;\n  `,\n  root: css`\n    margin-bottom: 50px;\n  `,\n};\n\nexport default class extends Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    requestContentTypes: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.requestContentTypes();\n  }\n\n  render = () => (\n    <div className={styles.root}>\n      <PageTitle>Add content</PageTitle>\n      <Paper>\n        <List data-nightwatch=\"node-type-list\">\n          {Object.keys(this.props.contentTypes).map(contentType => (\n            <ListItem component=\"li\" key={`node-add-${contentType}`}>\n              <Link className={styles.menuLink} to={`/node/add/${contentType}`}>\n                <ListItemText\n                  primary={this.props.contentTypes[contentType].name}\n                  secondary={\n                    <Markup\n                      content={this.props.contentTypes[contentType].description}\n                    />\n                  }\n                />\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport { requestContentTypes } from '../../../actions/application';\n\nimport AddContent from './AddContent';\n\nconst mapStateToProps = state => ({\n  contentTypes: state.application.contentTypes,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestContentTypes },\n)(AddContent);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\n/* A Drupal specific button, for use in the operations column of a table.\n *\n * Typically a Add, Edit or Delete icon can be provided as a child element\n * see for example  '@material-ui/icons/Add'\n *\n * When pressed a modal dialog slides up into view.\n */\nclass OpsModalButton extends React.Component {\n  static propTypes = {\n    /**\n     * The dialog title.\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * The text below the dialog title.\n     */\n    text: PropTypes.string.isRequired,\n    /**\n     * The confirm button label.\n     */\n    confirmText: PropTypes.string.isRequired,\n    /**\n     * The cancel button label.\n     */\n    cancelText: PropTypes.string.isRequired,\n    /**\n     * Children of the button.\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * Called when the confirm button is pressed.\n     */\n    enterAction: PropTypes.func.isRequired,\n  };\n\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    // Pass all props except those consumed here down into the button.\n    const {\n      title,\n      text,\n      cancelText,\n      confirmText,\n      enterAction,\n      ...buttonProps\n    } = this.props;\n\n    return (\n      <Fragment>\n        <IconButton {...buttonProps} onClick={this.handleClickOpen}>\n          {this.props.children}\n        </IconButton>\n        <Dialog\n          open={this.state.open}\n          TransitionComponent={Transition}\n          onClose={this.handleClose}\n        >\n          <DialogTitle>{title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>{text}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                enterAction();\n                this.handleClose();\n              }}\n              color=\"primary\"\n            >\n              {confirmText}\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              {cancelText}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default OpsModalButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MessageSave = ({ bundle, title, nid }) => (\n  <Fragment>\n    <p>\n      {bundle} <Link to={`/node/${nid}`}>{title}</Link> has been updated\n    </p>\n  </Fragment>\n);\n\nMessageSave.propTypes = {\n  bundle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  nid: PropTypes.number.isRequired,\n};\n\nexport default MessageSave;\n","export const extractContentType = content =>\n  content && content.type && content.type.substring('node--'.length);\n\nexport const mapContentTypeToName = (contentTypes, contentType) =>\n  contentTypes &&\n  contentType &&\n  contentTypes[contentType] &&\n  contentTypes[contentType].name;\n\nexport const cleanupRelationships = ({ relationships, ...rest }) => ({\n  ...rest,\n  relationships: Object.entries(relationships).reduce((acc, cur) => {\n    const [key, { data: relationshipData }] = cur;\n    if (\n      typeof relationshipData === 'object' &&\n      relationshipData.id &&\n      relationshipData.type &&\n      relationshipData.id !== '' &&\n      relationshipData.type !== ''\n    ) {\n      acc[key] = { data: relationshipData };\n    }\n    if (Array.isArray(relationshipData) && relationshipData.length) {\n      acc[key] = { data: relationshipData };\n    }\n    return acc;\n  }, {}),\n});\n","import React from 'react';\nimport {\n  put,\n  call,\n  takeLatest,\n  takeEvery,\n  select,\n  all,\n} from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport { push } from 'react-router-redux';\n\nimport api from '../utils/api/api';\nimport {\n  contentTypesSelector,\n  setErrorMessage,\n  setSuccessMessage,\n  requestContentTypes,\n} from './application';\n\nimport MessageSave from '../components/01_subatomics/MessageHelpers/MessageSave';\nimport { extractContentType, mapContentTypeToName } from '../utils/api/content';\nimport { ApiError } from '../utils/api/errors';\n\nexport const CONTENT_REQUESTED = 'CONTENT_REQUESTED';\nexport const requestContent = (\n  options = { contentTypes: [], status: null },\n) => ({\n  type: CONTENT_REQUESTED,\n  payload: { options },\n});\n\nexport const CONTENT_LOADED = 'CONTENT_LOADED';\nfunction* loadContent(action) {\n  const title =\n    (action.payload.options && action.payload.options.title) || null;\n  const contentTypes =\n    (action.payload.options && action.payload.options.contentTypes) || [];\n  const status =\n    (action.payload.options && action.payload.options.status) || null;\n  const sort = (action.payload.options && action.payload.options.sort) || null;\n  const page = (action.payload.options && action.payload.options.page) || null;\n\n  try {\n    yield put(showLoading());\n\n    const queryString = {\n      filter: {},\n    };\n\n    if (page) {\n      const { offset, limit } = page;\n      queryString.page = { offset, limit };\n    }\n\n    if (sort) {\n      const { path, direction } = sort;\n      queryString.sort = `${(direction === 'DESC' && '-') || ''}${path}`;\n    }\n\n    if (title && title.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        title: {\n          path: 'title',\n          operator: 'CONTAINS',\n          value: title,\n        },\n      };\n    }\n    if (contentTypes.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        typeGroup: { group: { conjunction: 'OR' } },\n        typearticle: {},\n        typepage: {},\n        ...contentTypes.reduce(\n          (accumulator, contentType) => ({\n            ...accumulator,\n            [`type${contentType}`]: {\n              condition: {\n                value: contentType,\n                path: 'type',\n                memberOf: 'typeGroup',\n              },\n            },\n          }),\n          {},\n        ),\n      };\n    }\n    if (status && status.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        status: {\n          value: status === 'published' ? 1 : 0,\n        },\n      };\n    }\n\n    queryString.include = 'uid';\n\n    // Unset this, otherwise it'll send 'filter=' to JSON:API and cause an error.\n    if (!Object.keys(queryString.filter).length) {\n      delete queryString.filter;\n    }\n\n    const contentList = yield call(api, 'content', { queryString });\n    yield put({\n      type: CONTENT_LOADED,\n      payload: {\n        contentList,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const CONTENT_SINGLE_REQUESTED = 'CONTENT_SINGLE_REQUESTED';\nexport const requestSingleContent = nid => ({\n  type: CONTENT_SINGLE_REQUESTED,\n  payload: { nid },\n});\n\nexport const CONTENT_SINGLE_LOADED = 'CONTENT_SINGLE_LOADED';\nfunction* loadSingleContent(action) {\n  const {\n    payload: { nid },\n  } = action;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const {\n      data: [content],\n    } = yield call(api, 'content', {\n      queryString: {\n        filter: { condition: { path: 'nid', value: nid } },\n      },\n    });\n\n    yield put({\n      type: CONTENT_SINGLE_LOADED,\n      payload: {\n        content,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const CONTENT_ADD_CHANGE = 'CONTENT_ADD_CHANGE';\nexport const contentAddChange = (bundle, entity) => ({\n  type: CONTENT_ADD_CHANGE,\n  payload: { bundle, entity },\n});\n\nexport const CONTENT_EDIT_CHANGE = 'CONTENT_EDIT_CHANGE';\nexport const contentEditChange = (bundle, entity) => ({\n  type: CONTENT_EDIT_CHANGE,\n  payload: { bundle, entity },\n});\n\nexport const CONTENT_SAVE = 'CONTENT_SAVE';\nexport const contentSave = content => ({\n  type: CONTENT_SAVE,\n  payload: {\n    content,\n  },\n});\n\nexport const CONTENT_ADD = 'CONTENT_ADD';\nexport const contentAdd = (content, bundle) => ({\n  type: CONTENT_ADD,\n  payload: {\n    content,\n    bundle,\n  },\n});\n\nexport const CONTENT_DELETE = 'CONTENT_DELETE';\nexport const contentDelete = content => ({\n  type: CONTENT_DELETE,\n  payload: {\n    content,\n  },\n});\n\nexport const ACTION_EXECUTE = 'ACTION_EXECUTE';\nexport const actionExecute = (action, nids) => ({\n  type: ACTION_EXECUTE,\n  payload: {\n    action,\n    nids,\n  },\n});\n\nexport const SUPPORTED_ACTIONS = [\n  'entity:delete_action:node',\n  'node_make_sticky_action',\n  'node_make_unsticky_action',\n  'node_promote_action',\n  'entity:publish_action:node',\n  'node_unpromote_action',\n  'entity:unpublish_action:node',\n];\n\n// @todo How do we update the store with the new values of the nodes\n//    or the deleted nodes, see https://github.com/jsdrupal/drupal-admin-ui/issues/131\n// @todo Once jsonapi supports bulk operations, leverage it.\nexport function* executeAction({ payload: { action, nids } }) {\n  try {\n    const contentList = yield select(state => state.content.contentList);\n    const actions = nids\n      .map(nid => {\n        const node = contentList.filter(\n          contentItem => String(contentItem.attributes.nid) === nid,\n        )[0];\n\n        let saveAction;\n        switch (action.attributes.plugin) {\n          case 'entity:delete_action:node':\n            saveAction = put(contentDelete(node));\n            break;\n          case 'node_make_sticky_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  sticky: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_make_unsticky_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  sticky: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_promote_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  promote: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_unpromote_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  promote: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'entity:publish_action:node':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  status: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'entity:unpublish_action:node':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  status: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          default:\n            break;\n        }\n        return saveAction;\n      })\n      .filter(x => x);\n    yield all(actions);\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* saveContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const [\n      {\n        data: {\n          attributes: { title, nid },\n        },\n      },\n    ] = yield all([\n      api('node:save', { parameters: { node: content } }),\n      put(requestContentTypes()),\n    ]);\n\n    // Get the content types from the redux state\n    const contentTypes = yield select(contentTypesSelector);\n    // Extract the content type from the content data\n    const contentType = extractContentType(content);\n\n    // Map the content type to the human-readable name\n    const contentTypeName =\n      mapContentTypeToName(contentTypes, contentType) || 'unknown';\n\n    yield put(\n      setSuccessMessage(\n        <MessageSave bundle={contentTypeName} title={title} nid={nid} />,\n      ),\n    );\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* addContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    yield all([\n      call(api, 'node:add', { parameters: { node: content } }),\n      put(requestContentTypes()),\n    ]);\n\n    // Get the content types from the redux state\n    const contentTypes = yield select(contentTypesSelector);\n    // Extract the content type from the content data\n    const contentType = extractContentType(content);\n    // Map the content type to the human-readable name\n    const contentName =\n      mapContentTypeToName(contentTypes, contentType) || 'unknown';\n\n    yield put(push('/admin/content'));\n    yield put(setSuccessMessage(`New ${contentName} added successfully`));\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* deleteContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    yield call(api, 'node:delete', { parameters: { node: content } });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const USER_REQUESTED = 'USER_REQUESTED';\nexport const requestUser = uid => ({\n  type: USER_REQUESTED,\n  payload: { uid },\n});\n\nexport const USER_LOADED = 'USER_LOADED';\nfunction* loadUser(action) {\n  const {\n    payload: { uid },\n  } = action;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const {\n      data: [user],\n    } = yield call(api, 'user', {\n      queryString: {\n        filter: { condition: { path: 'uid', value: uid } },\n      },\n    });\n\n    yield put({\n      type: USER_LOADED,\n      payload: {\n        user,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(CONTENT_REQUESTED, loadContent);\n  yield takeEvery(CONTENT_SAVE, saveContent);\n  yield takeLatest(CONTENT_SINGLE_REQUESTED, loadSingleContent);\n  yield takeEvery(ACTION_EXECUTE, executeAction);\n  yield takeLatest(CONTENT_ADD, addContent);\n  yield takeEvery(CONTENT_DELETE, deleteContent);\n  yield takeLatest(USER_REQUESTED, loadUser);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\nimport { connect } from 'react-redux';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport OpsModalButton from '../../02_atoms/OpsModalButton/OpsModalButton';\n\nimport { contentDelete } from '../../../actions/content';\n\nconst styles = {\n  noContentMessage: css`\n    padding: 0 1.5rem 1.5rem;\n  `,\n};\n\nclass ContentTable extends React.Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    contentList: PropTypes.arrayOf(PropTypes.object).isRequired,\n    contentDelete: PropTypes.func.isRequired,\n    pageChangeHandler: PropTypes.func.isRequired,\n    tableSortHandler: PropTypes.func.isRequired,\n    setChecked: PropTypes.func.isRequired,\n    includes: PropTypes.shape({\n      'user--user': PropTypes.object,\n    }).isRequired,\n    links: PropTypes.shape({\n      next: PropTypes.string,\n    }).isRequired,\n    page: PropTypes.shape({\n      offset: PropTypes.number.isRequired,\n      limit: PropTypes.number.isRequired,\n    }).isRequired,\n    sort: PropTypes.shape({\n      path: PropTypes.string.isRequired,\n      direction: PropTypes.oneOf(['DESC', 'ASC']).isRequired,\n    }).isRequired,\n    checked: PropTypes.objectOf(PropTypes.bool).isRequired,\n  };\n\n  selectAll(checked) {\n    this.props.setChecked(\n      (checked &&\n        this.props.contentList\n          .map(({ attributes: { nid } }) => nid)\n          .reduce(\n            (acc, cur) => ({\n              ...acc,\n              [cur]: true,\n            }),\n            {},\n          )) ||\n        {},\n    );\n  }\n\n  render() {\n    const {\n      links,\n      contentList,\n      page: { offset, limit },\n    } = this.props;\n    // Calculate the highest known count.\n    const count = offset + contentList.length + (links.next ? 1 : 0);\n\n    return (\n      <div\n        ref={node => {\n          this.table = node;\n        }}\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    id=\"selectAll\"\n                    onChange={(event, checked) => this.selectAll(checked)}\n                    inputProps={{ 'aria-label': 'select all content' }}\n                  />\n                </TableCell>\n              }\n              {[\n                { key: 'title', label: 'Title', sortable: true },\n                {\n                  key: 'type',\n                  label: 'Content Type',\n                  sortable: true,\n                },\n                this.props.includes['user--user']\n                  ? {\n                      key: 'author',\n                      label: 'Author',\n                      sortable: false,\n                    }\n                  : undefined,\n                { key: 'status', label: 'Status', sortable: true },\n                { key: 'changed', label: 'Updated', sortable: true },\n                {\n                  key: 'operations',\n                  label: 'Operations',\n                  sortable: false,\n                },\n              ]\n                .filter(x => x)\n                .map(({ key, label, sortable }) =>\n                  sortable ? (\n                    <TableCell key={key}>\n                      <TableSortLabel\n                        direction={\n                          this.props.sort.path === key\n                            ? this.props.sort.direction.toLowerCase()\n                            : undefined\n                        }\n                        active={this.props.sort.path === key}\n                        onClick={this.props.tableSortHandler(\n                          key,\n                          (this.props.sort.path !== key && 'DESC') ||\n                            ((this.props.sort.direction === 'DESC' && 'ASC') ||\n                              'DESC'),\n                        )}\n                      >\n                        {label}\n                      </TableSortLabel>\n                    </TableCell>\n                  ) : (\n                    <TableCell key={key}>{label}</TableCell>\n                  ),\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.contentList.map(node => {\n              const {\n                type,\n                attributes: { changed, nid, status, title },\n                relationships,\n              } = node;\n              const rowSelectId = `row-select-for-${String(nid)}`;\n              return (\n                <TableRow key={nid}>\n                  {\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={rowSelectId}\n                        value={String(nid)}\n                        onChange={(event, checked) => {\n                          this.props.setChecked(\n                            (() => {\n                              // Clone the object to not change the props directly.\n                              const nextChecked = JSON.parse(\n                                JSON.stringify(this.props.checked),\n                              );\n                              nextChecked[nid] = checked;\n                              return nextChecked;\n                            })(),\n                          );\n                        }}\n                        checked={this.props.checked[nid] || false}\n                      />\n                    </TableCell>\n                  }\n                  <TableCell>\n                    <Link to={`/node/${nid}`}>\n                      <label htmlFor={rowSelectId}>{title}</label>\n                    </Link>\n                  </TableCell>\n                  <TableCell>{this.props.contentTypes[type].name}</TableCell>\n                  {this.props.includes['user--user'] && (\n                    <TableCell>\n                      {this.props.includes['user--user'][\n                        relationships.uid.data.id\n                      ] ? (\n                        <Link\n                          to={`/user/${\n                            this.props.includes['user--user'][\n                              relationships.uid.data.id\n                            ].attributes.uid\n                          }`}\n                        >\n                          {\n                            this.props.includes['user--user'][\n                              relationships.uid.data.id\n                            ].attributes.name\n                          }\n                        </Link>\n                      ) : (\n                        'Anonymous (not verified)'\n                      )}\n                    </TableCell>\n                  )}\n                  <TableCell>\n                    {(status && 'Published') || 'Unpublished'}\n                  </TableCell>\n                  <TableCell>\n                    {new Intl.DateTimeFormat(navigator.language, {\n                      weekday: 'long',\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric',\n                      hour: 'numeric',\n                      minute: 'numeric',\n                    }).format(new Date(changed * 1000))}\n                  </TableCell>\n                  <TableCell style={{ whiteSpace: 'nowrap' }}>\n                    <IconButton\n                      aria-label=\"edit\"\n                      className={styles.button}\n                      component={Link}\n                      data-nightwatch={`Edit ${title}`}\n                      to={`/node/${nid}/edit`}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <OpsModalButton\n                      aria-label=\"delete\"\n                      className={styles.button}\n                      title={`Are you sure that you want to delete this content ${title}?`}\n                      text=\"This action cannot be undone.\"\n                      cancelText=\"Cancel\"\n                      confirmText=\"Delete\"\n                      enterAction={() => {\n                        this.props.contentDelete(node);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </OpsModalButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={count}\n          rowsPerPage={limit}\n          page={offset / limit}\n          onChangePage={this.props.pageChangeHandler}\n          rowsPerPageOptions={[limit]}\n          labelDisplayedRows={({ page }) => `Page: ${page + 1}`}\n          nextIconButtonProps={{ 'aria-label': 'Next content page.' }}\n          backIconButtonProps={{\n            'aria-label': 'Previous content page.',\n          }}\n        />\n        {!this.props.contentList.length && (\n          <Typography className={styles.noContentMessage}>\n            There is no content yet. {<Link to=\"/node/add\">Add one</Link>}.\n          </Typography>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { contentDelete },\n)(ContentTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  dialogActionName: css`\n    text-transform: lowercase;\n  `,\n  listItemText: css`\n    list-style-type: disc;\n    display: list-item;\n  `,\n};\n\nconst ConfirmationDialog = ({\n  action,\n  actions,\n  checked,\n  contentList,\n  dialogVisibility,\n  handleClose,\n  executeAction,\n}) => {\n  const actionLabel = actions\n    .filter(({ attributes: { id } }) => id === action)\n    .map(({ attributes: { label } }) => label)\n    .shift();\n  return (\n    <Dialog\n      open={dialogVisibility}\n      TransitionComponent={props => <Slide direction=\"up\" {...props} />}\n      onClose={handleClose}\n    >\n      <DialogTitle>\n        Are you sure you want to apply the &quot;\n        <span className={styles.dialogActionName}>{actionLabel}</span>\n        &quot; action to these content items?\n      </DialogTitle>\n      <DialogContent>\n        <List>\n          {contentList\n            .filter(({ attributes: { nid } }) =>\n              Object.keys(checked).includes(`${nid}`),\n            )\n            .map(({ attributes: { title, nid } }) => (\n              <ListItem key={nid}>\n                <ListItemText className={styles.listItemText}>\n                  {`${title}`}\n                </ListItemText>\n              </ListItem>\n            ))}\n        </List>\n        <Typography>This action cannot be undone.</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            executeAction();\n            handleClose();\n          }}\n          color=\"primary\"\n        >\n          {actionLabel}\n        </Button>\n        <Button onClick={handleClose} color=\"primary\">\n          <p>Cancel</p>\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nConfirmationDialog.propTypes = {\n  action: PropTypes.string.isRequired,\n  actions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  checked: PropTypes.objectOf(PropTypes.bool).isRequired,\n  contentList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  dialogVisibility: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  executeAction: PropTypes.func.isRequired,\n};\n\nexport default ConfirmationDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport PageTitle from '../../02_atoms/PageTitle';\nimport ContentTable from '../../04_templates/ContentTable/ContentTable';\n\nimport ConfirmationDialog from './ConfirmationDialog';\n\nimport {\n  requestContentTypes,\n  requestActions,\n} from '../../../actions/application';\nimport {\n  requestContent,\n  SUPPORTED_ACTIONS,\n  actionExecute,\n} from '../../../actions/content';\n\nconst styles = {\n  root: css`\n    margin-bottom: 50px;\n  `,\n  addButton: css`\n    margin: 0.5rem;\n    position: fixed;\n    right: 0;\n    bottom: 0;\n  `,\n  action: css`\n    margin: 0.5rem;\n    margin-left: 0rem;\n    min-width: 8rem;\n    max-width: 19rem;\n  `,\n  formControl: css`\n    margin: 0.5rem;\n    min-width: 8rem;\n    max-width: 19rem;\n  `,\n  chips: css`\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  chip: css`\n    margin: 0.5rem;\n  `,\n  selectEmpty: css`\n    margin-top: 0.5rem;\n  `,\n  button: css`\n    margin: 0.5rem;\n  `,\n  filters: css`\n    padding: 0 1.5rem;\n  `,\n  noContentMessage: css`\n    padding: 0 1.5rem 1.5rem;\n  `,\n  textField: css`\n    width: 300px;\n  `,\n};\n\nclass Content extends Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    requestContent: PropTypes.func.isRequired,\n    requestContentTypes: PropTypes.func.isRequired,\n    contentList: PropTypes.arrayOf(PropTypes.object),\n    requestActions: PropTypes.func.isRequired,\n    actionExecute: PropTypes.func.isRequired,\n    actions: PropTypes.arrayOf(PropTypes.object),\n    includes: PropTypes.shape({\n      'user--user': PropTypes.object,\n    }),\n    links: PropTypes.shape({\n      next: PropTypes.string,\n    }),\n  };\n\n  static defaultProps = {\n    contentList: [],\n    includes: {},\n    actions: [],\n    links: {},\n  };\n\n  state = {\n    contentTypes: [],\n    status: null,\n    sort: { path: 'changed', direction: 'DESC' },\n    page: {\n      offset: 0,\n      limit: 50,\n    },\n    action: null,\n    checked: {},\n    dialogVisibility: false,\n  };\n\n  componentDidMount() {\n    this.props.requestContentTypes();\n    this.props.requestContent(this.state);\n    this.props.requestActions();\n  }\n\n  dialogOpen = () => this.setState({ dialogVisibility: true });\n\n  dialogClose = () =>\n    this.setState({ dialogVisibility: false, action: null, checked: {} });\n\n  executeAction = () => {\n    const matchingAction = this.props.actions.filter(\n      action => action.attributes.id === this.state.action,\n    )[0];\n    this.props.actionExecute(matchingAction, Object.keys(this.state.checked));\n    this.setState({ checked: {}, action: null });\n  };\n\n  tableSortHandler = (path, direction) => () => {\n    this.setState(\n      prevState => ({\n        sort: { path, direction },\n        page: { offset: 0, limit: prevState.page.limit },\n      }),\n      () => {\n        this.props.requestContent(this.state);\n      },\n    );\n  };\n\n  pageChangeHandler = (event, page) => {\n    this.setState(\n      ({ page: { limit } }) => ({\n        page: { offset: page * limit, limit },\n      }),\n      () => {\n        this.props.requestContent(this.state);\n      },\n    );\n  };\n\n  render = () => (\n    <div className={styles.root}>\n      <PageTitle>Content</PageTitle>\n      <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n      <Paper>\n        {this.props.contentTypes && this.props.actions && (\n          <Fragment>\n            <div className={styles.filters}>\n              {this.props.contentTypes && this.props.actions && (\n                <Fragment>\n                  <TextField\n                    inputProps={{ 'aria-label': 'Title' }}\n                    label=\"Title\"\n                    placeholder=\"Title\"\n                    className={styles.textField}\n                    onChange={e => {\n                      this.setState({ title: e.target.value }, () => {\n                        this.props.requestContent(this.state);\n                      });\n                    }}\n                    margin=\"normal\"\n                  />\n\n                  <FormControl className={styles.formControl}>\n                    <InputLabel htmlFor=\"select-multiple-checkbox\">\n                      Content Type\n                    </InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.contentTypes}\n                      data-nightwatch=\"content-type-select\"\n                      onChange={e => {\n                        this.setState({ contentTypes: e.target.value }, () => {\n                          this.props.requestContent(this.state);\n                        });\n                      }}\n                      input={\n                        <Input\n                          name=\"content-type\"\n                          id=\"select-multiple-checkbox\"\n                        />\n                      }\n                      renderValue={selected => (\n                        <div className={styles.chips}>\n                          {selected.map(value => (\n                            <Chip\n                              key={value}\n                              label={this.props.contentTypes[value].name}\n                              className={styles.chip}\n                            />\n                          ))}\n                        </div>\n                      )}\n                    >\n                      {Object.keys(this.props.contentTypes).map(type => (\n                        <MenuItem key={type} value={type}>\n                          <Checkbox\n                            checked={this.state.contentTypes.indexOf(type) > -1}\n                          />\n                          <ListItemText\n                            primary={this.props.contentTypes[type].name}\n                          />\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl className={styles.formControl}>\n                    <InputLabel htmlFor=\"status\">Status</InputLabel>\n                    <Select\n                      value={this.state.status || ''}\n                      onChange={e => {\n                        this.setState({ status: e.target.value }, () => {\n                          this.props.requestContent(this.state);\n                        });\n                      }}\n                      input={<Input name=\"status\" id=\"status\" />}\n                      autoWidth\n                    >\n                      <MenuItem value=\"\">\n                        <em>Any</em>\n                      </MenuItem>\n                      <MenuItem value=\"published\">Published</MenuItem>\n                      <MenuItem value=\"unpublished\">Unpublished</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                  <div>\n                    <FormControl\n                      className={styles.action}\n                      disabled={\n                        Object.values(this.state.checked).filter(Boolean)\n                          .length === 0 || false\n                      }\n                    >\n                      <InputLabel htmlFor=\"action\">Actions</InputLabel>\n                      <Select\n                        value={this.state.action || ''}\n                        onChange={e => {\n                          this.setState({ action: e.target.value });\n                        }}\n                        input={<Input name=\"action\" id=\"action\" />}\n                        autoWidth\n                      >\n                        <MenuItem value=\"\">\n                          <em>None</em>\n                        </MenuItem>\n                        {this.props.actions.map(action => (\n                          <MenuItem\n                            key={action.id}\n                            value={action.attributes.id}\n                          >\n                            {action.attributes.label}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n\n                    {this.state.action &&\n                      Object.values(this.state.checked).filter(Boolean)\n                        .length !== 0 && (\n                        <Fragment>\n                          <Button\n                            // onClick={this.executeAction}\n                            onClick={this.dialogOpen}\n                            color=\"primary\"\n                            variant=\"contained\"\n                          >\n                            Apply\n                          </Button>\n                          <ConfirmationDialog\n                            action={this.state.action}\n                            actions={this.props.actions}\n                            checked={this.state.checked}\n                            contentList={this.props.contentList}\n                            dialogVisibility={this.state.dialogVisibility}\n                            handleClose={this.dialogClose}\n                            executeAction={this.executeAction}\n                          />\n                        </Fragment>\n                      )}\n                  </div>\n                </Fragment>\n              )}\n\n              <Button\n                variant=\"fab\"\n                color=\"primary\"\n                aria-label=\"add\"\n                className={styles.addButton}\n                component={Link}\n                to=\"/node/add\"\n              >\n                <AddIcon />\n              </Button>\n            </div>\n            <ContentTable\n              pageChangeHandler={this.pageChangeHandler}\n              tableSortHandler={this.tableSortHandler}\n              links={this.props.links}\n              contentList={this.props.contentList}\n              page={this.state.page}\n              includes={this.props.includes}\n              sort={this.state.sort}\n              contentTypes={this.props.contentTypes}\n              checked={this.state.checked}\n              setChecked={values => {\n                this.setState({ checked: values });\n              }}\n            />\n          </Fragment>\n        )}\n      </Paper>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contentTypes: state.application.contentTypes,\n  contentList: state.content.contentList,\n  includes: state.content.includes,\n  links: state.content.links,\n  actions: state.application.actions.filter(action =>\n    SUPPORTED_ACTIONS.includes(action.attributes.plugin),\n  ),\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    requestActions,\n    requestContentTypes,\n    requestContent,\n    actionExecute,\n  },\n)(Content);\n","import React from 'react';\nimport { css, keyframes } from 'emotion';\n\nlet rotate = null;\nlet styles;\n\nconst Loading = () => (\n  <div className={styles.wrap}>\n    <span className={styles.peace} role=\"img\" aria-label=\"Peace Sign\">\n      ✌\n    </span>\n  </div>\n);\n\nrotate = keyframes`\n  from {\n    transform: rotate(-10deg);\n  }\n  to {\n    transform: rotate(10deg);\n  }\n`;\n\nstyles = {\n  wrap: css`\n    margin: 100px auto 0;\n  `,\n  peace: css`\n    display: inline-block;\n    vertical-align: middle;\n    animation-direction: alternate;\n    animation-iteration-count: infinite;\n    animation-duration: 0.5s;\n    animation-timing-function: cubic-bezier(0, 0, 1, 1);\n    transform-origin: bottom;\n    font-size: 50px;\n    animation-name: ${rotate};\n  `,\n};\n\nexport default Loading;\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport PropTypes from 'prop-types';\n\nlet styles;\n\nconst TABLE = ({ children, ...props }) => (\n  <table className={styles.table} {...props}>\n    {children}\n  </table>\n);\nTABLE.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst TR = ({ children, ...props }) => <tr {...props}>{children}</tr>;\nTR.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst TD = ({ children, ...props }) => <td {...props}>{children}</td>;\nTD.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst THEAD = ({ data }) => (\n  <thead>\n    <TR className={styles.tr}>\n      {data.map(label => (\n        <TD className={styles.td} key={`column-${label}`}>\n          {label}\n        </TD>\n      ))}\n    </TR>\n  </thead>\n);\nTHEAD.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst TBODY = ({ rows }) => (\n  <tbody className={styles.tbody}>\n    {rows.map(({ colspan, tds, key }) => (\n      <TR key={key} className={styles.tr}>\n        {tds.map(([tdKey, tdValue, tdClassName]) => (\n          <TD\n            className={cx(styles.td, tdClassName || '')}\n            key={tdKey}\n            colSpan={colspan || undefined}\n          >\n            {tdValue}\n          </TD>\n        ))}\n      </TR>\n    ))}\n  </tbody>\n);\nTBODY.propTypes = {\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      colspan: PropTypes.number,\n      key: PropTypes.string,\n      tds: PropTypes.arrayOf(PropTypes.node).isRequired,\n    }),\n  ).isRequired,\n};\n\nstyles = {\n  thead: css``,\n  tbody: css`\n    tr:hover,\n    tr:focus {\n      background: #f7fcff;\n    }\n  `,\n  tr: css`\n    border-bottom: 1px solid #c7c7c7;\n  `,\n  td: css`\n    padding: 10px 12px;\n    text-align: left;\n  `,\n};\n\nexport { TR, TD, TABLE as Table, TBODY as TBody, THEAD as THead };\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport makeCancelable from 'makecancelable';\nimport { Markup } from 'interweave';\nimport { css } from 'emotion';\nimport { StickyContainer, Sticky } from 'react-sticky';\n\nimport Loading from '../../02_atoms/Loading/Loading';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nimport api from '../../../utils/api/api';\nimport { MESSAGE_SEVERITY_SUCCESS } from '../../../constants/messages';\nimport { setMessage, clearMessage } from '../../../actions/application';\n\nexport const filterPermissions = (input, permissions) =>\n  permissions.filter(\n    ({ title, description, provider, provider_label: providerLabel }) =>\n      `${title}${description}${provider}${providerLabel}`\n        .toLowerCase()\n        .includes(input.toLowerCase()),\n  );\n\nlet styles;\n\nconst Permissions = class Permissions extends Component {\n  static propTypes = {\n    setMessage: PropTypes.func.isRequired,\n    clearMessage: PropTypes.func.isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        role: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    loaded: false,\n    rawPermissions: [],\n    renderablePermissions: [],\n    working: false,\n  };\n\n  componentDidMount() {\n    this.cancelFetch = this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.cancelFetch();\n  }\n\n  onPermissionCheck = (roleName, permission) => {\n    this.setState(prevState => ({\n      changedRoles: [...new Set(prevState.changedRoles).add(roleName).values()],\n      roles: this.togglePermission(permission, roleName, prevState.roles),\n    }));\n    this.props.clearMessage();\n  };\n\n  fetchData = () =>\n    makeCancelable(\n      Promise.all([api('permissions'), api('roles')])\n        .then(([permissions, { data: roles }]) =>\n          this.setState({\n            rawPermissions: permissions,\n            renderablePermissions: permissions,\n            changedRoles: [],\n            working: false,\n            // Move admin roles to the right.\n            roles:\n              this.props.match.params.role &&\n              roles\n                .map(role => role.attributes.id)\n                .includes(this.props.match.params.role)\n                ? roles.filter(\n                    role => role.attributes.id === this.props.match.params.role,\n                  )\n                : roles.sort((a, b) => {\n                    if (a.attributes.is_admin && b.attributes.is_admin) {\n                      return a.attributes.id - b.attributes.id;\n                    }\n                    if (a.attributes.is_admin) {\n                      return 1;\n                    }\n                    if (b.attributes.is_admin) {\n                      return -1;\n                    }\n                    return a.attributes.id - b.attributes.id;\n                  }),\n            loaded: true,\n          }),\n        )\n        .catch(err => this.setState({ loaded: false, err })),\n    );\n\n  togglePermission = (permission, roleName, roles) => {\n    const roleIndex = roles.map(role => role.attributes.id).indexOf(roleName);\n    const role = roles[roleIndex];\n    const index = role.attributes.permissions.indexOf(permission);\n    if (index !== -1) {\n      role.attributes.permissions.splice(index, 1);\n    } else {\n      role.attributes.permissions.push(permission);\n    }\n    roles[roleIndex] = role;\n    return roles;\n  };\n\n  groupPermissions = permissions =>\n    Object.entries(\n      permissions.reduce((acc, cur) => {\n        acc[cur.provider] = acc[cur.provider] || {\n          providerLabel: cur.provider_label,\n          permissions: [],\n        };\n        acc[cur.provider].permissions.push(cur);\n        return acc;\n      }, {}),\n    );\n\n  createTableRows = (groupedPermissions, roles) =>\n    [].concat(\n      ...groupedPermissions.map(\n        ([providerMachineName, { providerLabel, permissions }]) => [\n          {\n            key: `permissionGroup-${providerMachineName}`,\n            colspan: roles.length + 1,\n            tds: [[`td-${providerMachineName}`, <b>{providerLabel}</b>]],\n          },\n          ...permissions.map(permission => ({\n            key: `permissionGroup-${providerMachineName}-${permission.title}`,\n            tds: [\n              [\n                `td-${providerMachineName}-${permission.title}`,\n                <Fragment>\n                  <Markup content={permission.title} />\n                  {permission['restrict access'] && (\n                    <span>\n                      <em>\n                        {' '}\n                        Warning: Give to trusted roles only; this permission has\n                        security implications.{' '}\n                      </em>\n                    </span>\n                  )}\n                  {permission.description && (\n                    <Markup content={` ${permission.description}`} />\n                  )}\n                </Fragment>,\n                css`\n                  padding: 0 0 0 30px;\n                `,\n              ],\n              ...roles.map(({ attributes }, index) => [\n                `td-${providerMachineName}-${permission.title}-${index}-cb`,\n                attributes.is_admin && attributes.id === 'administrator' ? (\n                  <input type=\"checkbox\" checked disabled />\n                ) : (\n                  <input\n                    type=\"checkbox\"\n                    onChange={() =>\n                      this.onPermissionCheck(attributes.id, permission.id)\n                    }\n                    checked={attributes.permissions.includes(permission.id)}\n                  />\n                ),\n              ]),\n            ],\n          })),\n        ],\n      ),\n    );\n\n  handleKeyPress = event => {\n    const input = event.target.value;\n    this.setState(prevState => ({\n      ...prevState,\n      renderablePermissions: filterPermissions(input, prevState.rawPermissions),\n    }));\n  };\n\n  saveRoles = () => {\n    this.setState(\n      prevState => ({ ...prevState, working: true }),\n      () =>\n        Promise.all(\n          this.state.roles\n            .filter(role =>\n              this.state.changedRoles.includes(role.attributes.id),\n            )\n            .map(role =>\n              api('role:patch', {\n                parameters: {\n                  role,\n                },\n              }).then(() => {\n                this.props.setMessage(\n                  'Changes have been saved',\n                  MESSAGE_SEVERITY_SUCCESS,\n                );\n              }),\n            ),\n        ).then(() => {\n          this.cancelFetch = this.fetchData();\n        }),\n    );\n  };\n\n  render() {\n    if (this.state.err) {\n      throw new Error('Error while loading page');\n    } else if (!this.state.loaded) {\n      return <Loading />;\n    }\n    return (\n      <StickyContainer>\n        <Sticky>\n          {({ style }) => (\n            <div style={style} className={styles.stickyBar}>\n              <input\n                type=\"text\"\n                className={styles.searchInput}\n                placeholder=\"Filter by name, description or module\"\n                onChange={this.handleKeyPress}\n                onKeyDown={this.handleKeyPress}\n              />\n              <button\n                type=\"submit\"\n                key=\"button-save-roles\"\n                onClick={this.saveRoles}\n                className={styles.saveButton}\n                disabled={\n                  !this.state.changedRoles.length ||\n                  (this.state.working && this.state.changedRoles.length)\n                }\n              >\n                Save\n              </button>\n            </div>\n          )}\n        </Sticky>\n        <Table>\n          <THead\n            data={[\n              'Permission',\n              ...this.state.roles.map(({ attributes: { label } }) => label),\n            ]}\n          />\n          <TBody\n            rows={this.createTableRows(\n              this.groupPermissions(this.state.renderablePermissions),\n              this.state.roles,\n            )}\n          />\n        </Table>\n      </StickyContainer>\n    );\n  }\n};\n\nstyles = {\n  stickyBar: css`\n    padding: 1.5rem 0;\n    background: #fff;\n    border-bottom: 1px solid #e6e6e6;\n  `,\n  saveButton: css`\n    float: right;\n    color: #333;\n    background-color: #fff;\n    display: inline-block;\n    padding: 6px 12px;\n    margin-bottom: 0;\n    text-align: center;\n    vertical-align: middle;\n    touch-action: manipulation;\n    cursor: pointer;\n    user-select: none;\n    background-image: none;\n    border: 1px solid #ccc;\n  `,\n  searchInput: css`\n    color: #555;\n    width: 400px;\n    padding: 6px 12px;\n    border: 1px solid #ccc;\n    background-color: #fff;\n  `,\n};\n\nexport default connect(\n  null,\n  { setMessage, clearMessage },\n)(Permissions);\n","import {\n  put,\n  call,\n  takeLatest,\n  race,\n  take,\n  cancelled,\n} from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport api from '../utils/api/api';\n\nimport { setErrorMessage } from './application';\nimport { ApiError } from '../utils/api/errors';\n\nexport const ROLES_REQUESTED = 'ROLES_REQUESTED';\nexport const requestRoles = () => ({\n  type: ROLES_REQUESTED,\n  payload: {},\n});\n\nexport const ROLES_LOADED = 'ROLES_LOADED';\nfunction* loadRoles() {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const roles = yield call(api, 'roles');\n    yield put({\n      type: ROLES_LOADED,\n      payload: {\n        roles,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n    if (yield cancelled()) {\n      // do a thing\n    }\n  }\n}\n\nexport const watchRequestedRolesWithCancel = function* watchRequestedRoles() {\n  const { cancel } = yield race({\n    task: takeLatest(ROLES_REQUESTED, loadRoles),\n    cancel: take('CANCEL_TASK'),\n  });\n  if (cancel) {\n    // do a thing.\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport { requestRoles } from '../../../actions/roles';\nimport { cancelTask } from '../../../actions/helpers';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nexport const Roles = class Roles extends Component {\n  componentDidMount() {\n    this.props.requestRoles();\n  }\n\n  componentWillUnmount() {\n    this.props.cancelTask();\n  }\n\n  createTableRows = roles =>\n    roles.map(({ attributes: { label, id } }) => ({\n      key: `row-${label}`,\n      tds: [\n        [`td-${label}`, label],\n        [\n          `td-${label}-actions`,\n          <Link to={`/admin/people/permissions/${id}`}>Edit Permissions</Link>,\n        ],\n      ],\n    }));\n\n  render = () => {\n    if (!this.props.roles) {\n      return <LoadingBar />;\n    }\n    return (\n      <Table>\n        <THead data={['NAME', 'OPERATIONS']} />\n        <TBody rows={this.createTableRows(this.props.roles)} />\n      </Table>\n    );\n  };\n};\n\nRoles.propTypes = {\n  requestRoles: PropTypes.func.isRequired,\n  cancelTask: PropTypes.func.isRequired,\n  roles: PropTypes.arrayOf(PropTypes.object),\n};\n\nRoles.defaultProps = {\n  roles: [],\n};\n\nconst mapStateToProps = ({ application: { roles } }) => ({\n  roles,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestRoles, cancelTask },\n)(Roles);\n","import ConnectedRoles from './Roles';\n\nexport default ConnectedRoles;\n","export const CANCEL_TASK = 'CANCEL_TASK';\nexport const cancelTask = () => ({\n  type: CANCEL_TASK,\n  payload: {},\n});\n","import { put, call, takeLatest } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport api from '../utils/api/api';\nimport { setErrorMessage } from './application';\nimport { ApiError } from '../utils/api/errors';\n\nexport const DBLOG_COLLECTION_REQUEST = 'DBLOG_COLLECTION_REQUEST';\nexport const requestDblogCollection = options => ({\n  type: DBLOG_COLLECTION_REQUEST,\n  payload: { options },\n});\n\nexport const DBLOG_FILTER_UPDATED = 'DBLOG_FILTER_UPDATED';\n\nexport const DBLOG_COLLECTION_LOADED = 'DBLOG_COLLECTION_LOADED';\nexport function* loadDblog({ payload: { options } }) {\n  try {\n    const queryString = {\n      sort: options.sort || '',\n      page: {\n        limit: 50,\n        ...(options.offset\n          ? {\n              offset: options.offset,\n            }\n          : {}),\n      },\n      filter: {\n        ...(options.types && Object.keys(options.types).length\n          ? options.types.reduce(\n              (acc, cur) => ({\n                ...acc,\n                [`type${cur}`]: {\n                  condition: {\n                    value: cur,\n                    path: 'type',\n                    memberOf: 'typeGroup',\n                  },\n                },\n              }),\n              { typeGroup: { group: { conjunction: 'OR' } } },\n            )\n          : {}),\n        ...(options.severities && Object.keys(options.severities).length\n          ? options.severities.reduce(\n              (acc, cur) => ({\n                ...acc,\n                [`severity${cur}`]: {\n                  condition: {\n                    value: cur,\n                    path: 'severity',\n                    memberOf: 'severityGroup',\n                  },\n                },\n              }),\n              {\n                severityGroup: {\n                  group: {\n                    conjunction: 'OR',\n                  },\n                },\n              },\n            )\n          : {}),\n      },\n    };\n    yield put(resetLoading());\n    yield put(showLoading());\n    yield put({\n      type: DBLOG_FILTER_UPDATED,\n      payload: {\n        options,\n      },\n    });\n    const dbLogEntriesTypes = yield call(api, 'dblog:types');\n    const dbLogEntries = yield call(api, 'dblog', { queryString });\n    yield put({\n      type: DBLOG_COLLECTION_LOADED,\n      payload: {\n        dbLogEntries,\n        dbLogEntriesTypes,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield call(ApiError.errorToHumanString, error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const watchDblogRequests = function* watchDblogRequests() {\n  yield takeLatest(DBLOG_COLLECTION_REQUEST, loadDblog);\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { Markup } from 'interweave';\n\nimport { requestDblogCollection } from '../../../actions/reports';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nclass Dblog extends Component {\n  static propTypes = {\n    requestDblogCollection: PropTypes.func.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        wid: PropTypes.number.isRequired,\n        messageFormattedPlain: PropTypes.string.isRequired,\n        timestamp: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      }),\n    ),\n    availableTypes: PropTypes.arrayOf(PropTypes.string),\n    filterOptions: PropTypes.shape({\n      sort: PropTypes.string,\n      severities: PropTypes.arrayOf(PropTypes.string),\n      offset: PropTypes.number,\n      types: PropTypes.arrayOf(PropTypes.string),\n    }),\n    next: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    entries: null,\n    availableTypes: null,\n    filterOptions: {\n      sort: '',\n      severities: [],\n    },\n    next: true,\n  };\n\n  componentDidMount() {\n    this.props.requestDblogCollection({\n      ...this.props.filterOptions,\n      sort: '-timestamp',\n    });\n  }\n\n  generateTableRows = entries =>\n    entries.map(({ wid, type, messageFormattedPlain, timestamp }) => ({\n      key: String(wid),\n      tds: [\n        [`type-${wid}`, type],\n        [`timestamp-${wid}`, timestamp],\n        [\n          `markup-${wid}`,\n          <Markup\n            content={`${\n              messageFormattedPlain.length > 48\n                ? `${messageFormattedPlain.substring(0, 48)}…`\n                : messageFormattedPlain\n            }`}\n          />,\n        ],\n        [`user-${wid}`, ''],\n      ],\n    }));\n\n  severityFilterHandler = e =>\n    this.props.requestDblogCollection({\n      types: null,\n      offset: 0,\n      ...this.props.filterOptions,\n      severities: Array.from(e.target.options)\n        .filter(option => option.selected)\n        .map(option => option.value),\n    });\n\n  typeFilterHandler = e =>\n    this.props.requestDblogCollection({\n      severities: null,\n      offset: 0,\n      ...this.props.filterOptions,\n      types: Array.from(e.target.options)\n        .filter(option => option.selected)\n        .map(option => option.value),\n    });\n\n  nextPage = () =>\n    this.props.requestDblogCollection({\n      severities: null,\n      ...this.props.filterOptions,\n      offset: (this.props.filterOptions.offset || 0) + 50,\n    });\n\n  previousPage = () =>\n    this.props.requestDblogCollection({\n      severities: null,\n      ...this.props.filterOptions,\n      offset: (this.props.filterOptions.offset || 0) - 50,\n    });\n\n  render() {\n    if (!this.props.entries) {\n      return <LoadingBar />;\n    }\n    return (\n      <Fragment>\n        <select\n          key=\"select-type\"\n          label=\"Type\"\n          multiple\n          size={this.props.availableTypes.length}\n          onBlur={this.typeFilterHandler}\n          selected={this.props.filterOptions.types}\n        >\n          {this.props.availableTypes.map(type => (\n            <option value={type} key={type}>\n              {type}\n            </option>\n          ))}\n        </select>\n        <select\n          key=\"select-severity\"\n          label=\"Severity\"\n          multiple\n          size={8}\n          onBlur={this.severityFilterHandler}\n          selected={this.props.filterOptions.severities}\n        >\n          {[\n            'Emergency',\n            'Alert',\n            'Critical',\n            'Error',\n            'Warning',\n            'Notice',\n            'Info',\n            'Debug',\n          ].map((value, index) => (\n            <option value={index} key={value}>\n              {value}\n            </option>\n          ))}\n        </select>\n        <button\n          type=\"button\"\n          onClick={this.previousPage}\n          disabled={this.props.filterOptions.offset <= 0}\n        >\n          prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.nextPage}\n          disabled={!this.props.next}\n        >\n          next\n        </button>\n        <Table>\n          <THead data={['Type', 'Date', 'Message', 'User']} />\n          <TBody rows={this.generateTableRows(this.props.entries)} />\n        </Table>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ application: { dblog } }) => ({\n  filterOptions: {\n    offset: 0,\n  },\n  ...dblog,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestDblogCollection },\n)(Dblog);\n","const createEntity = schema => {\n  if (typeof schema.default !== 'undefined') {\n    return schema.default;\n  }\n  switch (schema.type) {\n    case 'object':\n      return Object.entries(schema.properties).reduce(\n        (agg, [key, value]) => ({\n          ...agg,\n          [key]: createEntity(value),\n        }),\n        {},\n      );\n    case 'array':\n      return [];\n    case 'string':\n      return '';\n    case 'number':\n      return 0.0;\n    case 'integer':\n      return 0;\n    case 'boolean':\n      return true;\n    case 'language_reference':\n      return null;\n    default:\n      throw new Error('Unhandled case');\n  }\n};\n\nconst createUISchema = (\n  fieldSchema,\n  formDisplaySchema,\n  fieldStorageConfig,\n  widgets,\n) =>\n  Array.from(\n    new Set([...Object.keys(fieldSchema), ...Object.keys(formDisplaySchema)]),\n  )\n    .filter(\n      fieldName =>\n        Object.keys(widgets).filter(name =>\n          formDisplaySchema[fieldName].type.startsWith(name),\n        ).length,\n    )\n    .sort((a, b) => formDisplaySchema[a].weight - formDisplaySchema[b].weight)\n    .reduce((acc, currentFieldName) => {\n      const widgetName = Object.keys(widgets)\n        .filter(name =>\n          formDisplaySchema[currentFieldName].type.startsWith(name),\n        )\n        .shift();\n\n      const widget = {\n        ...widgets[widgetName],\n        name: widgetName,\n      };\n      const fieldStorageSettings = fieldStorageConfig\n        .filter(\n          ({ attributes: { field_name: fieldName } }) =>\n            fieldName === currentFieldName,\n        )\n        .shift();\n      const inputProps = {\n        ...(Object.prototype.hasOwnProperty.call(fieldSchema, currentFieldName)\n          ? fieldSchema[currentFieldName].attributes.settings\n          : {}),\n        ...(Object.prototype.hasOwnProperty.call(\n          formDisplaySchema,\n          currentFieldName,\n        )\n          ? formDisplaySchema[currentFieldName].settings\n          : {}),\n        ...(fieldStorageSettings\n          ? fieldStorageSettings.attributes.settings\n          : {}),\n      };\n      acc.push({\n        fieldName: currentFieldName,\n        constraints: [],\n        widget,\n        inputProps,\n      });\n      return acc;\n    }, []);\n\nconst sortUISchemaFields = (schema, secondaryColumnFields) =>\n  schema.reduce(\n    (acc, curr) => {\n      acc[\n        (secondaryColumnFields.includes(curr.fieldName) && 'right') || 'left'\n      ].push(curr);\n      return acc;\n    },\n    { right: [], left: [] },\n  );\n\nexport { createEntity, createUISchema, sortUISchemaFields };\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport List from '@material-ui/core/List';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { createEntity } from '../../../utils/api/schema';\nimport SchemaPropType from '../../05_pages/NodeForm/SchemaPropType';\n\nconst Add = styled('div')`\n  .icon {\n    margin-left: 10px;\n  }\n`;\n\nconst style = {\n  ListItemStyles: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  ListItemIconStyles: {\n    cursor: 'move',\n    margin: '0 0 0 16px',\n  },\n};\n\nclass MultipleFields extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    component: PropTypes.func.isRequired,\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    schema: SchemaPropType.isRequired,\n  };\n\n  /**\n   * Initial state\n   */\n  state = {\n    handle: null,\n    currentIndex: -1,\n    newItemAdded: false,\n  };\n\n  /**\n   * Sets the state handle with the handle target.\n   * @param {Event} event\n   */\n  onMouseDown = event => {\n    this.setState({\n      handle: event.currentTarget,\n    });\n  };\n\n  /**\n   * Sets the state value with the selected element.\n   * @param {Event} event\n   */\n  onDragStart = event => {\n    const {\n      props: { value },\n      state: { handle },\n    } = this;\n\n    // Don't allow dragging if not handle or only one item in props.value\n    if (!event.target.contains(handle) || value.length === 1) {\n      event.preventDefault();\n      return;\n    }\n    // setData needed for FireFox, needs to setData to work\n    event.dataTransfer.setData('text', '');\n    event.dataTransfer.effectAllowed = 'move';\n    const currentIndex = parseInt(event.currentTarget.dataset.key, 10);\n\n    this.setState({\n      currentIndex,\n    });\n  };\n\n  /**\n   * Changes the current value with the value that is under the\n   * current value, and replace the over value with the current\n   * value.\n   * @param {Event} event\n   */\n  onDragOver = event => {\n    event.preventDefault();\n    const {\n      props: { value },\n      state: { currentIndex },\n    } = this;\n\n    const overIndex = parseInt(event.currentTarget.dataset.key, 10);\n    if (currentIndex !== overIndex) {\n      const selectedValue = value[currentIndex];\n      // Changes the two values with one another\n      value[currentIndex] = value[overIndex];\n      value[overIndex] = selectedValue;\n\n      this.setState({\n        currentIndex: overIndex,\n      });\n    }\n  };\n\n  /**\n   * Will update the state and call the onChange method\n   * once the element has been reordered.\n   */\n  onDragEnd = () => {\n    const { value, onChange } = this.props;\n    this.setState(\n      {\n        handle: null,\n        currentIndex: -1,\n      },\n      () => {\n        onChange(value);\n      },\n    );\n  };\n\n  /**\n   * Updated the current value of the input.\n   * @param {Event} event\n   * @param {String} value\n   */\n  changeItem = index => value => {\n    const { value: propsValue, onChange } = this.props;\n    const newValue = [...propsValue];\n    newValue[index] = value;\n    onChange(newValue);\n  };\n\n  /**\n   * Adds another empty string to the current set of values.\n   */\n  addAnotherItem = () => {\n    const { value, onChange } = this.props;\n    const newValue = [...value, ''];\n    this.setState(\n      {\n        newItemAdded: true,\n      },\n      () => {\n        onChange(newValue);\n      },\n    );\n  };\n\n  createEmptyItem() {\n    return createEntity(this.props.schema.items);\n  }\n\n  render = () => {\n    const {\n      onDragEnd,\n      changeItem,\n      onDragOver,\n      onDragLeave,\n      onDragStart,\n      onMouseDown,\n      addAnotherItem,\n      state: { newItemAdded },\n      props: { label, value: values, component, onChange },\n    } = this;\n\n    // values && values.length is to validate the object is not null and not an empty array, respectively\n    // the last `&& values` is to make sure after validation, it always return `values`  instead of `values.length`\n    const usedValues = (values && values.length && values) || [\n      this.createEmptyItem(),\n    ];\n    return (\n      <FormControl margin=\"normal\" fullWidth>\n        <FormLabel component=\"legend\">{label}</FormLabel>\n        <List>\n          {usedValues &&\n            usedValues.map((value, index) => (\n              <ListItem\n                draggable\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                data-key={index}\n                onDragEnd={onDragEnd}\n                onDragOver={onDragOver}\n                onDragLeave={onDragLeave}\n                onDragStart={onDragStart}\n                style={style.ListItemStyles}\n              >\n                <ListItemIcon\n                  onMouseDown={onMouseDown}\n                  style={style.ListItemIconStyles}\n                >\n                  <ReorderIcon />\n                </ListItemIcon>\n                <ListItemText>\n                  {React.createElement(component, {\n                    ...this.props,\n                    value,\n                    label: '', // Enforce a hidden label\n                    onChange: changeItem(index),\n                    autoFocus: newItemAdded && index + 1 === values.length,\n                  })}\n                </ListItemText>\n                <Fragment>\n                  <Button\n                    mini\n                    variant=\"fab\"\n                    color=\"secondary\"\n                    className=\"remove\"\n                    aria-label=\"Remove Image\"\n                    onClick={() => {\n                      if (values.length > 1) {\n                        values.splice(index, 1);\n                        onChange(values);\n                      }\n                    }}\n                  >\n                    <DeleteIcon />\n                  </Button>\n                </Fragment>\n              </ListItem>\n            ))}\n        </List>\n        <Add>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={addAnotherItem}\n            aria-label=\"Add another item\"\n          >\n            Add another item\n            <AddIcon />\n          </Button>\n        </Add>\n      </FormControl>\n    );\n  };\n}\n\nexport default MultipleFields;\n","import { put, call, takeLatest, all } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\n\nimport api from '../utils/api/api';\nimport { setErrorMessage } from './application';\nimport { ApiError } from '../utils/api/errors';\n\nexport const UI_SCHEMA_REQUESTED = 'UI_SCHEMA_REQUESTED';\nexport const requestUiSchema = ({ entityTypeId, bundle }) => ({\n  type: UI_SCHEMA_REQUESTED,\n  payload: { entityTypeId, bundle },\n});\n\nexport const UI_SCHEMA_LOADED = 'UI_SCHEMA_LOADED';\nfunction* loadUiSchema(action) {\n  const { entityTypeId, bundle } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const [\n      { data: fieldSchema },\n      { data: formDisplaySchema },\n      { data: fieldStorageConfig },\n    ] = yield all([\n      api('field_schema', {\n        queryString: {\n          filter: { entity_type: entityTypeId, bundle },\n        },\n      }),\n      api('form_display', {\n        queryString: {\n          filter: { targetEntityType: entityTypeId, bundle, mode: 'default' },\n        },\n      }),\n      api('field_storage_config', {\n        queryString: {\n          filter: { condition: { path: 'entity_type', value: entityTypeId } },\n        },\n      }),\n    ]);\n\n    yield put({\n      type: UI_SCHEMA_LOADED,\n      payload: {\n        entityTypeId,\n        bundle,\n        fieldSchema,\n        formDisplaySchema,\n        fieldStorageConfig,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const SCHEMA_REQUESTED = 'SCHEMA_REQUESTED';\nexport const requestSchema = ({ entityTypeId, bundle }) => ({\n  type: SCHEMA_REQUESTED,\n  payload: { entityTypeId, bundle },\n});\n\nexport const SCHEMA_LOADED = 'SCHEMA_LOADED';\nfunction* loadSchema(action) {\n  const { entityTypeId, bundle } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const entitySchema = yield call(api, 'schema', {\n      parameters: { entityTypeId, bundle },\n      queryString: { _describes: 'api_json', _format: 'schema_json' },\n    });\n\n    yield put({\n      type: SCHEMA_LOADED,\n      payload: {\n        entityTypeId,\n        bundle,\n        entitySchema,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const SCHEMA_BY_ENTITY_ID_REQUESTED = 'SCHEMA_BY_ENTITY_ID_REQUESTED';\nexport const requestSchemaByEntityId = ({ entityTypeId, entityId }) => ({\n  type: SCHEMA_BY_ENTITY_ID_REQUESTED,\n  payload: { entityTypeId, entityId },\n});\n\nexport const SCHEMA_BY_ENTITY_ID_LOADED = 'SCHEMA_BY_ENTITY_ID_LOADED';\nfunction* loadSchemaByEntityId(action) {\n  const { entityTypeId, entityId } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const entitySchema = yield call(api, 'schema_by_id', {\n      parameters: { entityTypeId, entityId },\n    });\n\n    yield put({\n      type: SCHEMA_BY_ENTITY_ID_LOADED,\n      payload: {\n        entityTypeId,\n        entityId,\n        entitySchema,\n      },\n    });\n  } catch (error) {\n    yield put(setErrorMessage(error.toString()));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(SCHEMA_REQUESTED, loadSchema);\n  yield takeLatest(SCHEMA_BY_ENTITY_ID_REQUESTED, loadSchemaByEntityId);\n  yield takeLatest(UI_SCHEMA_REQUESTED, loadUiSchema);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport SchemaPropType from './SchemaPropType';\n\nimport MultipleFields from '../../02_atoms/MultipleFields/MultipleFields';\n\nimport { contentAdd } from '../../../actions/content';\nimport { requestUiSchema } from '../../../actions/schema';\nimport {\n  requestComponentList,\n  setErrorMessage,\n} from '../../../actions/application';\n\nimport { createUISchema, sortUISchemaFields } from '../../../utils/api/schema';\nimport EnsureComponent from '../../02_atoms/EnsureComponent/EnsureComponent';\n\nlet styles;\n\nclass NodeForm extends React.Component {\n  static propTypes = {\n    schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n    onSave: PropTypes.func.isRequired,\n    entityTypeId: PropTypes.string.isRequired,\n    bundle: PropTypes.string.isRequired,\n    requestUiSchema: PropTypes.func.isRequired,\n    uiSchema: PropTypes.oneOfType([\n      PropTypes.shape({\n        fieldSchema: PropTypes.shape({}),\n        formDisplaySchema: PropTypes.shape({}),\n      }),\n      PropTypes.bool,\n    ]),\n    restorableEntity: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      attributes: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }).isRequired,\n    }),\n    setErrorMessage: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n    requestComponentList: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    schema: false,\n    uiSchema: false,\n    restorableEntity: null,\n    onChange: () => {},\n  };\n\n  state = {\n    restored: false,\n  };\n\n  componentDidMount() {\n    this.props.requestUiSchema({\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n    });\n\n    this.calculateState(this.props, this.state, state => this.setState(state));\n    this.props.requestComponentList();\n  }\n\n  componentDidUpdate() {\n    this.calculateState(this.props, this.state, state => this.setState(state));\n  }\n\n  onAttributeChange = fieldName => data => {\n    this.setState(\n      prevState => ({\n        entity: {\n          ...prevState.entity,\n          attributes: {\n            ...prevState.entity.attributes,\n            [fieldName]: data,\n          },\n        },\n      }),\n      () => this.props.onChange(this.props.bundle, this.state.entity),\n    );\n  };\n\n  onSave = () => {\n    const missingFields = this.resolveMissingRequiredFields();\n    if (missingFields.length) {\n      this.props.setErrorMessage(\n        missingFields.length > 1\n          ? `The following fields are missing, ${missingFields.join(', ')}.`\n          : `The following field is missing, ${missingFields.join('')}.`,\n      );\n    } else {\n      this.props.onSave(this.state.entity);\n    }\n  };\n\n  onRelationshipChange = fieldName => data => {\n    // Support widgets with multiple cardinality.\n    const fieldData = Object.values(data);\n    this.setState(\n      prevState => ({\n        entity: {\n          ...prevState.entity,\n          relationships: {\n            ...prevState.entity.relationships,\n            [fieldName]: fieldData,\n          },\n        },\n      }),\n      () => this.props.onChange(this.props.bundle, this.state.entity),\n    );\n  };\n\n  getSchemaInfo = (schema, fieldName) =>\n    schema.properties.attributes.properties[fieldName] ||\n    schema.properties.relationships.properties[fieldName];\n\n  resolveMissingRequiredFields = () => {\n    const unavailableFields = ['nid', 'uuid', 'vid', 'path'];\n    const requiredFields = this.props.schema.properties.attributes.required.filter(\n      field => !unavailableFields.includes(field),\n    );\n    return Object.entries(this.state.entity.attributes)\n      .filter(([fieldName]) => requiredFields.includes(fieldName))\n      .filter(([fieldName, value]) => {\n        // @todo Ideally the schema would identify the main property for us.\n        if (\n          typeof value === 'object' &&\n          Object.keys(value).length &&\n          value.value === ''\n        ) {\n          return fieldName;\n        }\n        if (typeof value === 'string' && value.length === 0) {\n          return fieldName;\n        }\n        return false;\n      })\n      .map(([fieldName]) => fieldName);\n  };\n\n  calculateState = (prevProps, prevState, setState) => {\n    if (!prevProps.schema) {\n      return;\n    }\n\n    if (!prevProps.uiSchema) {\n      return;\n    }\n\n    if (prevState.entity) {\n      return;\n    }\n\n    const state = {\n      ...prevState,\n      // Mark the entity as restored when we don't have a restoreable entity,\n      // as we don't want to ask the user.\n      restored: prevState.restored || !prevProps.restorableEntity,\n      restorableEntity: !prevState.restored && prevProps.restorableEntity,\n      entity: prevProps.entity,\n    };\n\n    // Just contain values which are in the ui metadata.\n    state.entity.attributes = Object.entries(state.entity.attributes)\n      .filter(([key]) =>\n        Object.keys(prevProps.uiSchema.formDisplaySchema)\n          .concat(['type'])\n          .includes(key),\n      )\n      .reduce((agg, [key, value]) => ({ ...agg, [key]: value }), {});\n\n    setState(state);\n  };\n\n  createField = ({ fieldName, widget, inputProps }) => {\n    // @todo We need to pass along props.\n    // @todo How do we handle cardinality together with jsonapi\n    // making a distinction between single value fields and multi value fields.\n    const fieldSchema = this.getSchemaInfo(this.props.schema, fieldName);\n\n    const { attributes, relationships } = this.props.schema.properties;\n\n    const propType =\n      (attributes.properties[fieldName] && 'attributes') ||\n      (relationships.properties[fieldName] && 'relationships');\n\n    const widgetProps = {\n      key: fieldName,\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n      fieldName,\n      classes: {\n        root: styles.widgetRoot,\n      },\n      value: this.state.entity[propType][fieldName],\n      label: fieldSchema && fieldSchema.title,\n      schema: fieldSchema,\n      onChange: (propType === 'attributes'\n        ? this.onAttributeChange\n        : this.onRelationshipChange)(fieldName),\n      required: this.props.schema.properties.attributes.required.includes(\n        fieldName,\n      ),\n      inputProps,\n    };\n\n    const widgetIsMultiple = widget.multiple || false;\n    const hasMultipleDeltas =\n      (fieldSchema.type && fieldSchema.type === 'array') ||\n      (fieldSchema.properties && fieldSchema.properties.type === 'array');\n\n    return (\n      <EnsureComponent\n        name={widget.name}\n        component={widget.component}\n        render={widgetComponent =>\n          hasMultipleDeltas && !widgetIsMultiple ? (\n            <MultipleFields component={widgetComponent} {...widgetProps} />\n          ) : (\n            React.createElement(widgetComponent, widgetProps)\n          )\n        }\n      />\n    );\n  };\n\n  renderRestoreSnackbar() {\n    return (\n      // Ensure that there was some previously stored entity\n      this.props.restorableEntity &&\n      // Hide thie restore form once the content got restored.\n      !this.state.restored && (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          autoHideDuration={10000}\n          open\n          data-nightwatch=\"restore-content-snackbar\"\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Unsaved content found</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() =>\n                this.setState({\n                  entity: this.props.restorableEntity,\n                  restored: true,\n                })\n              }\n            >\n              Restore\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={() =>\n                this.setState({\n                  restored: true,\n                })\n              }\n            >\n              <CloseIcon className={styles.icon} />\n            </IconButton>,\n          ]}\n        />\n      )\n    );\n  }\n\n  render() {\n    let result = null;\n    if (\n      this.props.schema &&\n      this.props.uiSchema &&\n      this.state.entity &&\n      this.props.components.widgets\n    ) {\n      const { right, left } = sortUISchemaFields(\n        createUISchema(\n          this.props.uiSchema.fieldSchema,\n          this.props.uiSchema.formDisplaySchema,\n          this.props.uiSchema.fieldStorageConfig,\n          this.props.components.widgets,\n        ),\n        ['promote', 'status', 'sticky', 'uid', 'created'],\n      );\n      result = (\n        <div className={styles.gridRoot}>\n          {this.renderRestoreSnackbar()}\n          <Paper classes={{ root: styles.fieldContainer }}>\n            {left.map(this.createField)}\n            <Divider classes={{ root: styles.divider }} />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.onSave}>\n              Save\n            </Button>\n          </Paper>\n          <Paper classes={{ root: styles.fieldContainer }}>\n            {right.map(this.createField)}\n          </Paper>\n        </div>\n      );\n    }\n    return result;\n  }\n}\n\nstyles = {\n  fieldContainer: css`\n    padding: 50px 90px 40px;\n  `,\n  divider: css`\n    margin: 40px 0;\n  `,\n  gridRoot: css`\n    display: grid;\n    width: 100%;\n    grid-gap: 20px;\n    grid-template-columns: 75% 25%;\n    padding-right: 50px;\n  `,\n  widgetRoot: css`\n    display: flex;\n    align-items: start;\n  `,\n  icon: css`\n    font-size: 20px;\n  `,\n};\n\nconst mapStateToProps = (state, { bundle, entityTypeId }) => ({\n  uiSchema: state.schema.uiSchema[`${entityTypeId}--${bundle}`],\n  components: state.application.components,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    requestUiSchema,\n    contentAdd,\n    setErrorMessage,\n    requestComponentList,\n  },\n)(NodeForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as MaterialUI from '@material-ui/core';\n\nclass EnsureComponent extends React.Component {\n  state = {\n    component: null,\n  };\n\n  static propTypes = {\n    component: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n      .isRequired,\n    render: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    if (typeof this.props.component === 'string') {\n      // Cheat and load \"React\"\n      window.define('react', () => React);\n      Object.keys(MaterialUI).forEach(key =>\n        window.define(`@material-ui/core/${key}`, () => MaterialUI[key]),\n      );\n      window.require([this.props.component], ({ default: component }) => {\n        this.setState({ component });\n      });\n    } else {\n      this.setState({\n        component: this.props.component,\n      });\n    }\n  }\n\n  render() {\n    if (this.state.component) {\n      return this.props.render(this.state.component);\n    }\n    return null;\n  }\n}\n\nexport default EnsureComponent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport NodeForm from '../NodeForm';\nimport {\n  contentEditChange,\n  contentSave,\n  requestSingleContent,\n} from '../../../actions/content';\nimport PageTitle from '../../02_atoms/PageTitle/PageTitle';\nimport { cleanupRelationships } from '../../../utils/api/content';\nimport { requestSchemaByEntityId } from '../../../actions/schema';\nimport SchemaPropType from '../NodeForm/SchemaPropType';\n\nlet styles;\n\nclass NodeEditForm extends React.Component {\n  componentDidMount() {\n    this.props.requestSchemaByEntityId({\n      entityTypeId: this.props.entityTypeId,\n      entityId: this.props.nid,\n    });\n    this.props.requestSingleContent(this.props.nid);\n  }\n\n  onSave = bundle => entity => {\n    this.props.contentSave(\n      cleanupRelationships({\n        ...entity,\n        type: `${this.props.entityTypeId}--${bundle}`,\n      }),\n    );\n  };\n\n  render() {\n    const { entity, schema } = this.props;\n    let result = null;\n    if (entity && schema) {\n      const bundle = entity.type.replace('node--', '');\n      result = (\n        <Fragment>\n          {entity && (\n            <PageTitle>\n              <em>\n                Edit <span className={styles.bundle}>{bundle}</span>\n              </em>{' '}\n              {entity.attributes.title}\n            </PageTitle>\n          )}\n          <LoadingBar />\n          {entity && (\n            <NodeForm\n              {...this.props}\n              bundle={bundle}\n              entity={entity}\n              onSave={this.onSave(bundle)}\n            />\n          )}\n        </Fragment>\n      );\n    }\n    return result;\n  }\n}\n\nNodeEditForm.defaultProps = {\n  entity: null,\n  schema: null,\n};\n\nNodeEditForm.propTypes = {\n  nid: PropTypes.string.isRequired,\n  requestSingleContent: PropTypes.func.isRequired,\n  contentSave: PropTypes.func.isRequired,\n  entityTypeId: PropTypes.string.isRequired,\n  entity: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    attributes: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  }),\n  requestSchemaByEntityId: PropTypes.func.isRequired,\n  schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n};\n\nstyles = {\n  bundle: css`\n    text-transform: capitalize;\n  `,\n};\n\nconst extractRestorableEntity = (state, entity) => {\n  const restorableEntity = state.content.restorableContentEditById[entity.id];\n  if (\n    restorableEntity &&\n    restorableEntity.attributes &&\n    entity &&\n    entity.attributes &&\n    // Restoring content is only offered when the loaded entity wasn't changed in the meantime.\n    restorableEntity.attributes.changed === entity.attributes.change\n  ) {\n    return restorableEntity;\n  }\n  return null;\n};\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { nid },\n      },\n    },\n  ) => {\n    const entity = state.content.contentByNid[nid];\n    return {\n      schema: state.schema.schema[`node--${nid}`],\n      entity,\n      restorableEntity: entity && extractRestorableEntity(state, entity),\n      entityTypeId: 'node',\n      nid,\n    };\n  },\n  {\n    requestSingleContent,\n    contentSave,\n    onChange: contentEditChange,\n    requestSchemaByEntityId,\n  },\n)(NodeEditForm);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoadingBar from 'react-redux-loading-bar';\nimport NodeForm from '../NodeForm';\nimport {\n  contentAddChange,\n  contentAdd,\n  requestUser,\n} from '../../../actions/content';\nimport PageTitle from '../../02_atoms/PageTitle/PageTitle';\nimport { createEntity } from '../../../utils/api/schema';\nimport { requestSchema } from '../../../actions/schema';\nimport SchemaPropType from '../NodeForm/SchemaPropType';\nimport { cleanupRelationships } from '../../../utils/api/content';\n\nclass NodeAddForm extends React.Component {\n  static propTypes = {\n    bundle: PropTypes.string.isRequired,\n    contentAdd: PropTypes.func.isRequired,\n    entityTypeId: PropTypes.string.isRequired,\n    schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n    requestSchema: PropTypes.func.isRequired,\n    requestUser: PropTypes.func.isRequired,\n    user: PropTypes.shape({}),\n  };\n\n  static defaultProps = {\n    schema: false,\n    user: false,\n  };\n\n  componentDidMount() {\n    this.props.requestUser(1);\n    this.props.requestSchema({\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n    });\n  }\n\n  onSave = entity => {\n    this.props.contentAdd(\n      cleanupRelationships({\n        ...entity,\n        type: `${this.props.entityTypeId}--${this.props.bundle}`,\n      }),\n      this.props.bundle,\n    );\n  };\n\n  forgeEntity = schema => {\n    const entity = createEntity(schema);\n    // Set default `Created On` attribute.\n    const local = new Date();\n    local.setMinutes(local.getMinutes() - local.getTimezoneOffset());\n    entity.attributes.created = Math.round(+local / 1000);\n\n    // Set default `Authored By` relationship.\n    entity.relationships.uid.data = { ...this.props.user };\n\n    return entity;\n  };\n\n  render() {\n    return (\n      this.props.schema &&\n      this.props.user && (\n        <Fragment>\n          <PageTitle>\n            Create\n            {this.props.bundle}\n          </PageTitle>\n          <LoadingBar />\n          <NodeForm\n            {...this.props}\n            entity={this.forgeEntity(this.props.schema)}\n            onSave={this.onSave}\n          />\n        </Fragment>\n      )\n    );\n  }\n}\n\nconst extractRestorableEntity = (state, bundle) =>\n  state.content.restorableContentAddByBundle[bundle];\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { bundle },\n      },\n    },\n  ) => ({\n    schema: state.schema.schema[`node--${bundle}`],\n    restorableEntity: extractRestorableEntity(state, bundle),\n    user: state.content.user,\n    entityTypeId: 'node',\n    bundle,\n  }),\n  {\n    contentAdd,\n    requestSchema,\n    onChange: contentAddChange,\n    requestUser,\n  },\n)(NodeAddForm);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport { Redirect } from 'react-router';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\n\nimport PageTitle from '../../02_atoms/PageTitle';\n\nconst styles = {\n  action: css`\n    margin-left: 0rem;\n    margin-bottom: 0.5rem;\n    min-width: 5rem;\n    max-width: 15rem;\n  `,\n};\n\nexport default class TaxonomyVocabulary extends React.Component {\n  static propTypes = {\n    requestTaxonomyVocabulary: PropTypes.func.isRequired,\n    taxonomyVocabulary: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          attributes: PropTypes.shape({\n            name: PropTypes.string,\n            description: PropTypes.string,\n            vid: PropTypes.string,\n          }),\n        }),\n      ),\n    ]),\n  };\n\n  static defaultProps = {\n    taxonomyVocabulary: null,\n  };\n\n  state = {\n    activeLink: null,\n  };\n\n  componentDidMount() {\n    this.props.requestTaxonomyVocabulary();\n  }\n\n  vocabularyOperations = vid => (\n    <FormControl className={styles.action}>\n      {/* @todo Extract the select element with links out into a component */}\n      <InputLabel htmlFor=\"action\">Actions</InputLabel>\n      <Select\n        value={this.state.activeLink || ''}\n        autoWidth\n        onChange={e => this.setState({ activeLink: e.target.value })}\n      >\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}/overview`}>\n          List Terms\n        </MenuItem>\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}`}>\n          Edit Vocabulary\n        </MenuItem>\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}/add`}>\n          Add Terms\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/fields`}\n        >\n          Manage Fields\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/form-display`}\n        >\n          Manage Form Display\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/display`}\n        >\n          Manage Display\n        </MenuItem>\n      </Select>\n      {this.state.activeLink && <Redirect to={this.state.activeLink} />}\n    </FormControl>\n  );\n\n  render() {\n    const { taxonomyVocabulary } = this.props;\n    return (\n      <Fragment>\n        <PageTitle>Taxonomy</PageTitle>\n        <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Vocabulary name</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell>Operations</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {taxonomyVocabulary &&\n                taxonomyVocabulary.map(vocabulary => (\n                  <TableRow key={vocabulary.id}>\n                    <TableCell>{vocabulary.attributes.name}</TableCell>\n                    <TableCell>{vocabulary.attributes.description}</TableCell>\n                    <TableCell>\n                      {this.vocabularyOperations(vocabulary.attributes.vid)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Fragment>\n    );\n  }\n}\n","import { put, takeLatest, call, select } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\n\nimport api from '../utils/api/api';\nimport { ApiError } from '../utils/api/errors';\nimport { setErrorMessage } from './application';\n\nexport const TAXONOMY_VOCABULARY_REQUESTED = 'TAXONOMY_VOCABULARY_REQUESTED';\nexport const requestTaxonomyVocabulary = () => ({\n  type: TAXONOMY_VOCABULARY_REQUESTED,\n  payload: {},\n});\n\nexport const requestTaxonomyVocabularyById = vocabulary => ({\n  type: TAXONOMY_VOCABULARY_REQUESTED,\n  payload: { vocabulary },\n});\n\nexport const TAXONOMY_VOCABULARY_LOADED = 'TAXONOMY_VOCABULARY_LOADED';\nfunction* loadTaxonomyVocabulary(action) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const { data: taxonomyVocabulary } = yield call(\n      api,\n      'taxonomy_vocabulary',\n      {\n        ...((action.payload.vocabulary && {\n          queryString: {\n            filter: {\n              condition: { path: 'vid', value: action.payload.vocabulary },\n            },\n          },\n        }) ||\n          {}),\n      },\n    );\n\n    yield put({\n      type: TAXONOMY_VOCABULARY_LOADED,\n      payload: {\n        taxonomyVocabulary,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const TAXONOMY_TERMS_REQUESTED = 'TAXONOMY_TERMS_REQUESTED';\nexport const requestTaxonomyTerms = vocabulary => ({\n  type: TAXONOMY_TERMS_REQUESTED,\n  payload: { vocabulary },\n});\n\nexport const getTaxonomyVocabularyById = (taxonomyVocabularyList, vocabulary) =>\n  taxonomyVocabularyList\n    .filter(({ attributes: { vid } }) => vid === vocabulary)\n    .shift();\n\nexport const TAXONOMY_TERMS_LOADED = 'TAXONOMY_TERMS_LOADED';\nfunction* loadTaxonomyTerms(action) {\n  try {\n    const {\n      payload: { vocabulary },\n    } = action;\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const { data: taxonomyTerms } = yield call(api, 'taxonomy_term', {\n      parameters: { type: vocabulary },\n    });\n\n    const {\n      taxonomy: { taxonomyVocabulary },\n    } = yield select();\n    if (\n      !(\n        taxonomyVocabulary.length &&\n        getTaxonomyVocabularyById(taxonomyVocabulary, vocabulary)\n      )\n    ) {\n      yield put({\n        type: TAXONOMY_VOCABULARY_REQUESTED,\n        payload: {\n          vocabulary,\n        },\n      });\n    }\n\n    yield put({\n      type: TAXONOMY_TERMS_LOADED,\n      payload: {\n        vocabulary,\n        taxonomyTerms,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(TAXONOMY_VOCABULARY_REQUESTED, loadTaxonomyVocabulary);\n  yield takeLatest(TAXONOMY_TERMS_REQUESTED, loadTaxonomyTerms);\n}\n","import { connect } from 'react-redux';\n\nimport TaxonomyVocabulary from './TaxonomyVocabulary';\nimport { requestTaxonomyVocabulary } from '../../../actions/taxonomy';\n\nexport default connect(\n  state => ({ taxonomyVocabulary: state.taxonomy.taxonomyVocabulary }),\n  { requestTaxonomyVocabulary },\n)(TaxonomyVocabulary);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\n\nimport { Redirect } from 'react-router';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\n\nimport PageTitle from '../../02_atoms/PageTitle';\n\nconst styles = {\n  action: css`\n    margin-left: 0rem;\n    margin-bottom: 0.5rem;\n    min-width: 5rem;\n    max-width: 15rem;\n  `,\n};\n\nexport default class TaxonomyTermsOverview extends React.Component {\n  static propTypes = {\n    requestTaxonomyTerms: PropTypes.func.isRequired,\n    vocabulary: PropTypes.string.isRequired,\n    taxonomyTerms: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          attributes: PropTypes.shape({\n            name: PropTypes.string,\n            description: PropTypes.string,\n            vid: PropTypes.string,\n          }),\n        }),\n      ),\n    ]),\n    taxonomyVocabulary: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        attributes: PropTypes.shape({\n          name: PropTypes.string,\n          description: PropTypes.string,\n          vid: PropTypes.string,\n        }),\n      }),\n    ]),\n  };\n\n  static defaultProps = {\n    taxonomyTerms: null,\n    taxonomyVocabulary: null,\n  };\n\n  state = {\n    activeLink: null,\n  };\n\n  componentDidMount() {\n    this.props.requestTaxonomyTerms(this.props.vocabulary);\n  }\n\n  termOperations = tid => (\n    <FormControl className={styles.action}>\n      {/* @todo Extract the select element with links out into a component */}\n      <InputLabel htmlFor=\"action\">Actions</InputLabel>\n      <Select\n        autoWidth\n        onChange={e => this.setState({ activeLink: e.target.value })}\n        value={this.state.activeLink || ''}\n      >\n        <MenuItem value={`/taxonomy/term/${tid}/edit`}>Edit</MenuItem>\n        <MenuItem value={`/taxonomy/term/${tid}/delete`}>Delete</MenuItem>\n      </Select>\n      {this.state.activeLink && <Redirect to={this.state.activeLink} />}\n    </FormControl>\n  );\n\n  render() {\n    const { taxonomyTerms, taxonomyVocabulary } = this.props;\n    return (\n      <Fragment>\n        {taxonomyVocabulary && (\n          <PageTitle>{taxonomyVocabulary.attributes.name}</PageTitle>\n        )}\n        <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Operations</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {taxonomyTerms &&\n                taxonomyTerms.map(term => (\n                  <TableRow key={term.attributes.uuid}>\n                    <TableCell>{term.attributes.name}</TableCell>\n                    <TableCell>\n                      {this.termOperations(term.attributes.tid)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Button\n          variant=\"fab\"\n          color=\"primary\"\n          aria-label=\"add\"\n          className={styles.addButton}\n          component={Link}\n          to={`/admin/structure/taxonomy/manage/${this.props.vocabulary}/add`}\n        >\n          <AddIcon />\n        </Button>\n      </Fragment>\n    );\n  }\n}\n","import { connect } from 'react-redux';\n\nimport TaxonomyTermsOverview from './TaxonomyTermsOverview';\nimport {\n  requestTaxonomyTerms,\n  getTaxonomyVocabularyById,\n} from '../../../actions/taxonomy';\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { vocabulary },\n      },\n    },\n  ) => ({\n    taxonomyTerms: state.taxonomy.taxonomyTerms[vocabulary],\n    taxonomyVocabulary: getTaxonomyVocabularyById(\n      state.taxonomy.taxonomyVocabulary,\n      vocabulary,\n    ),\n    vocabulary,\n  }),\n  { requestTaxonomyTerms },\n)(TaxonomyTermsOverview);\n","import AddContent from './components/05_pages/AddContent';\nimport Content from './components/05_pages/Content/Content';\nimport Permissions from './components/05_pages/Permissions/Permissions';\nimport Roles from './components/05_pages/Roles';\nimport Dblog from './components/05_pages/Reports/Dblog';\nimport NodeEditForm from './components/05_pages/NodeEditForm';\nimport NodeAddForm from './components/05_pages/NodeAddForm';\nimport Taxonomy from './components/05_pages/TaxonomyVocabulary';\nimport TaxonomyTermsOverview from './components/05_pages/TaxonomyTermsOverview';\n\n// @todo Share this with Drupal\nconst routes = {\n  '/admin/content': Content,\n  '/admin/people/permissions/:role?': Permissions,\n  '/admin/people/roles': Roles,\n  '/admin/reports/dblog': Dblog,\n  '/node/add': AddContent,\n  '/node/:nid/edit': NodeEditForm,\n  '/node/add/:bundle': NodeAddForm,\n  '/admin/structure/taxonomy/manage/:vocabulary/overview': TaxonomyTermsOverview,\n  '/admin/structure/taxonomy': Taxonomy,\n};\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_WARNING,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_SUCCESS,\n} from '../../../constants/messages';\n\nconst variantIcon = {\n  MESSAGE_SEVERITY_SUCCESS: CheckCircleIcon,\n  MESSAGE_SEVERITY_WARNING: WarningIcon,\n  MESSAGE_SEVERITY_ERROR: ErrorIcon,\n  MESSAGE_SEVERITY_INFO: InfoIcon,\n};\n\nconst styles = {\n  success: css`\n    background-color: #43a047;\n  `,\n  error: css`\n    background-color: #d32f2f;\n  `,\n  info: css`\n    background-color: #1976d2;\n  `,\n  warning: css`\n    background-color: #ffa000;\n  `,\n  icon: css`\n    font-size: 20px;\n  `,\n  iconVariant: css`\n    margin-right: 10px;\n    opacity 0.9;\n  `,\n  message: css`\n    display: flex;\n    align-items: center;\n\n    a {\n      color: #fff;\n    }\n  `,\n};\n\nconst SnackbarMessage = props => {\n  const Icon = variantIcon[props.messageSeverity];\n  return (\n    <Snackbar\n      open={props.open}\n      autoHideDuration={props.duration}\n      onClose={props.onClose}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n    >\n      <SnackbarContent\n        className={(severity => {\n          switch (severity) {\n            case MESSAGE_SEVERITY_ERROR:\n              return styles.error;\n            case MESSAGE_SEVERITY_WARNING:\n              return styles.warning;\n            case MESSAGE_SEVERITY_INFO:\n              return styles.info;\n            case MESSAGE_SEVERITY_SUCCESS:\n              return styles.success;\n            default:\n              return styles.error;\n          }\n        })(props.messageSeverity)}\n        message={\n          <span className={styles.message}>\n            <Icon className={`${styles.icon} ${styles.iconVariant}`} />\n            {props.message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={props.onClose}\n          >\n            <CloseIcon className={styles.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nSnackbarMessage.defaultProps = {\n  duration: 5000,\n};\n\nSnackbarMessage.propTypes = {\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.node.isRequired,\n  messageSeverity: PropTypes.oneOf([\n    MESSAGE_SEVERITY_ERROR,\n    MESSAGE_SEVERITY_SUCCESS,\n    MESSAGE_SEVERITY_INFO,\n    MESSAGE_SEVERITY_WARNING,\n  ]).isRequired,\n  onClose: PropTypes.func.isRequired,\n  duration: PropTypes.number,\n};\n\nexport default SnackbarMessage;\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_SUCCESS,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_WARNING,\n} from '../../../constants/messages';\n\nlet styles;\nlet modifierClassMap;\n\nconst Message = ({ message, messageSeverity }) => (\n  <div className={`${styles.message} ${modifierClassMap[messageSeverity]}`}>\n    {message}\n  </div>\n);\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  messageSeverity: PropTypes.oneOf([\n    MESSAGE_SEVERITY_ERROR,\n    MESSAGE_SEVERITY_SUCCESS,\n    MESSAGE_SEVERITY_INFO,\n    MESSAGE_SEVERITY_WARNING,\n  ]).isRequired,\n};\n\nstyles = {\n  message: css`\n    padding: 20px 25px;\n    margin-bottom: 30px;\n    color: #fff;\n  `,\n  success: css`\n    background-color: #43a047;\n  `,\n  error: css`\n    background-color: #d32f2f;\n  `,\n  info: css`\n    background-color: #1976d2;\n  `,\n  warning: css`\n    background-color: #ffa000;\n  `,\n};\n\nmodifierClassMap = {\n  [MESSAGE_SEVERITY_ERROR]: styles.error,\n  [MESSAGE_SEVERITY_SUCCESS]: styles.success,\n  [MESSAGE_SEVERITY_WARNING]: styles.warning,\n  [MESSAGE_SEVERITY_INFO]: styles.info,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport BuildIcon from '@material-ui/icons/Build';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AssesmentIcon from '@material-ui/icons/Assessment';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport Snackbar from '../../02_atoms/SnackbarMessage/SnackbarMessage';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nimport {\n  requestMenu,\n  closeDrawer,\n  openDrawer,\n  setMessage,\n  clearMessage,\n} from '../../../actions/application';\n\nlet styles;\n\nconst iconMap = {\n  '/admin/content': <ViewListIcon />,\n  '/admin/structure': <BuildIcon />,\n  '/admin/appearance': <ColorLensIcon />,\n  '/admin/modules': <ExtensionIcon />,\n  '/admin/config': <SettingsIcon />,\n  '/admin/people': <PeopleIcon />,\n  '/admin/reports': <AssesmentIcon />,\n  '/admin/help': <HelpIcon />,\n};\n\nclass Default extends React.Component {\n  componentDidMount() {\n    this.props.requestMenu();\n  }\n\n  render = () => (\n    <div className={styles.outerWrapper}>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: `${styles.drawerPaper} ${!this.props.drawerOpen &&\n            styles.drawerPaperClose}`,\n        }}\n        open={this.props.drawerOpen}\n      >\n        <div className={styles.menuButtonWrapper}>\n          {this.props.drawerOpen ? (\n            <IconButton\n              aria-label=\"close drawer\"\n              onClick={this.props.closeDrawer}\n              className={styles.menuButton}\n            >\n              <ChevronLeftIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.props.openDrawer}\n              className={styles.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n        </div>\n        <Divider />\n        <List data-nightwatch=\"menu\">\n          {this.props.menuLinks.map(({ link: menuLink }) => (\n            <ListItem\n              key={menuLink.url.replace(/\\//g, '-')}\n              component=\"li\"\n              button\n            >\n              <Link to={menuLink.url} className={styles.menuLink} role=\"button\">\n                {iconMap[menuLink.url] ? (\n                  <ListItemIcon>{iconMap[menuLink.url]}</ListItemIcon>\n                ) : (\n                  ''\n                )}\n                <ListItemText primary={menuLink.title} />\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n        {this.props.menuLinks.length ? <Divider /> : ''}\n      </Drawer>\n\n      <main className={styles.main} id={styles.main}>\n        <ErrorBoundary>\n          {this.props.children}\n          {this.props.message && (\n            <Snackbar\n              {...this.props.message}\n              onClose={() => this.props.clearMessage(this.props.message.key)}\n            />\n          )}\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nstyles = {\n  menuLink: css`\n    display: inherit;\n    text-decoration: inherit;\n  `,\n  menuButton: css`\n    margin: 8px 12px;\n  `,\n  menuButtonWrapper: css`\n    display: flex;\n    justify-content: flex-end;\n  `,\n  outerWrapper: css`\n    height: 100%;\n    display: flex;\n  `,\n  main: css`\n    flex-grow: 1;\n    padding: 2rem;\n    height: 100%;\n  `,\n  drawerPaper: css`\n    position: relative;\n    width: 250px;\n    transition: width 225ms cubic-bezier(0.4, 0, 0.6, 1) 0ms;\n  `,\n  drawerPaperClose: css`\n    overflow-x: hidden;\n    transition: none;\n    width: 72px;\n    transition: width 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms;\n  `,\n};\n\nDefault.propTypes = {\n  children: PropTypes.node.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    type: PropTypes.string,\n    key: PropTypes.number,\n    open: PropTypes.bool,\n  }),\n  menuLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      link: PropTypes.shape({\n        url: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    }),\n  ).isRequired,\n  requestMenu: PropTypes.func.isRequired,\n  openDrawer: PropTypes.func.isRequired,\n  closeDrawer: PropTypes.func.isRequired,\n  setMessage: PropTypes.func.isRequired,\n  clearMessage: PropTypes.func.isRequired,\n  drawerOpen: PropTypes.bool,\n};\n\nDefault.defaultProps = {\n  message: null,\n  drawerOpen: false,\n};\n\nconst mapStateToProps = state => ({\n  message: state.application.messages[0] || null,\n  menuLinks: state.application.menuLinks || [],\n  drawerOpen: state.application.drawerOpen,\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      requestMenu,\n      openDrawer,\n      closeDrawer,\n      setMessage,\n      clearMessage,\n    },\n  )(Default),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InlineMessage from '../../02_atoms/InlineMessage/InlineMessage';\n\nimport { MESSAGE_SEVERITY_ERROR } from '../../../constants/messages';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n    };\n  }\n\n  componentDidCatch(error) {\n    this.setState({\n      error,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <InlineMessage\n          message={this.state.error.toString()}\n          messageSeverity={MESSAGE_SEVERITY_ERROR}\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ErrorBoundary;\n","import { Component } from 'react';\n\nimport routes from './routes';\n\nexport interface Props {\n  location: {\n    [pathname: string]: string;\n  };\n}\n\nclass NoMatch extends Component<Props> {\n  componentDidMount() {\n    // We want to redirect everything without a match back to Drupal.\n    if (!Object.keys(routes).includes(this.props.location.pathname)) {\n      window.location.href =\n        process.env.REACT_APP_DRUPAL_BASE_URL + this.props.location.pathname;\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default NoMatch;\n","import { all } from 'redux-saga/effects';\nimport applicationSaga from './application';\nimport contentSaga from './content';\nimport schemaSaga from './schema';\nimport { watchDblogRequests } from './reports';\nimport { watchRequestedRolesWithCancel } from './roles';\nimport taxonomySaga from './taxonomy';\n\nexport default function* rootSaga() {\n  yield all([\n    applicationSaga(),\n    contentSaga(),\n    watchDblogRequests(),\n    watchRequestedRolesWithCancel(),\n    schemaSaga(),\n    taxonomySaga(),\n  ]);\n}\n","import { LOCATION_CHANGE } from 'react-router-redux';\nimport { ROLES_LOADED } from '../actions/roles';\nimport {\n  DBLOG_COLLECTION_LOADED,\n  DBLOG_FILTER_UPDATED,\n} from '../actions/reports';\nimport {\n  CLOSE_DRAWER,\n  OPEN_DRAWER,\n  SET_MESSAGE,\n  CLEAR_MESSAGE,\n  CLEAR_ALL_MESSAGES,\n  MENU_LOADED,\n  CONTENT_TYPES_LOADED,\n  ACTIONS_LOADED,\n  COMPONENT_LIST_LOADED,\n} from '../actions/application';\n\nexport const initialState = {\n  messages: [],\n  menuLinks: [],\n  filterString: '',\n  contentTypes: {},\n  actions: [],\n  drawerOpen: false,\n  components: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CLOSE_DRAWER: {\n      return {\n        ...state,\n        drawerOpen: false,\n      };\n    }\n    case OPEN_DRAWER: {\n      return {\n        ...state,\n        drawerOpen: true,\n      };\n    }\n    case SET_MESSAGE: {\n      // This causes a new messages object to be created, instead of\n      // maintaining a reference to the old data structure.\n      const messages = [...state.messages];\n      messages.push({\n        message: action.payload.message,\n        messageSeverity: action.payload.messageSeverity,\n        key: Date.now() + Math.random(),\n        open: true,\n      });\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case CLEAR_MESSAGE: {\n      const messages = [...state.messages];\n      messages.splice(\n        messages.findIndex(message => message.key === action.payload.key),\n        1,\n      );\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case CLEAR_ALL_MESSAGES: {\n      const messages = [];\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case LOCATION_CHANGE: {\n      // Clear messages on every location change.\n      return {\n        ...state,\n        messages: [],\n      };\n    }\n    case MENU_LOADED: {\n      return {\n        ...state,\n        menuLinks: Array.isArray(action.payload.menuLinks)\n          ? action.payload.menuLinks\n          : [],\n      };\n    }\n    case DBLOG_COLLECTION_LOADED: {\n      const { dblog, ...rest } = state;\n      return {\n        ...rest,\n        dblog: {\n          ...dblog,\n          next:\n            Object.prototype.hasOwnProperty.call(\n              action.payload.dbLogEntries.links,\n              'next',\n            ) || false,\n          entries: action.payload.dbLogEntries.data.map(\n            ({\n              attributes: {\n                wid,\n                message_formatted_plain: messageFormattedPlain,\n                timestamp,\n                type,\n              },\n            }) => ({ wid, messageFormattedPlain, timestamp, type }),\n          ),\n          availableTypes: action.payload.dbLogEntriesTypes,\n        },\n      };\n    }\n    case DBLOG_FILTER_UPDATED: {\n      const { dblog, ...rest } = state;\n      return {\n        ...rest,\n        dblog: {\n          ...dblog,\n          filterOptions: action.payload.options,\n        },\n      };\n    }\n    case ROLES_LOADED: {\n      const roles = action.payload.roles.data;\n      return {\n        ...state,\n        roles,\n      };\n    }\n    case CONTENT_TYPES_LOADED: {\n      return {\n        ...state,\n        contentTypes: action.payload.contentTypes.data.reduce(\n          (accumulator, contentType) => ({\n            ...accumulator,\n            [contentType.attributes.type]: {\n              name: contentType.attributes.name,\n              description: contentType.attributes.description,\n            },\n          }),\n          {},\n        ),\n      };\n    }\n    case ACTIONS_LOADED: {\n      return {\n        ...state,\n        actions: action.payload.actions.data,\n      };\n    }\n    case COMPONENT_LIST_LOADED: {\n      return {\n        ...state,\n        components: action.payload.components,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  CONTENT_LOADED,\n  CONTENT_SINGLE_LOADED,\n  CONTENT_DELETE,\n  CONTENT_ADD,\n  CONTENT_ADD_CHANGE,\n  USER_LOADED,\n  CONTENT_EDIT_CHANGE,\n} from '../actions/content';\n\nexport const initialState = {\n  contentList: [],\n  contentByNid: {},\n  links: {},\n  restorableContentAddByBundle: {},\n  restorableContentEditById: {},\n  user: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CONTENT_SINGLE_LOADED:\n      return {\n        ...state,\n        contentByNid: {\n          [action.payload.content.attributes.nid]: action.payload.content,\n        },\n      };\n    case CONTENT_ADD_CHANGE:\n      return {\n        ...state,\n        restorableContentAddByBundle: {\n          ...state.restorableContentAddByBundle,\n          [action.payload.bundle]: action.payload.entity,\n        },\n      };\n    case CONTENT_EDIT_CHANGE:\n      return {\n        ...state,\n        restorableContentEditById: {\n          ...state.restorableContentEditById,\n          [action.payload.entity.id]: action.payload.entity,\n        },\n      };\n    case CONTENT_ADD:\n      return {\n        ...state,\n        restorableContentAddByBundle: {\n          [action.payload.bundle]: null,\n        },\n      };\n    case CONTENT_LOADED: {\n      return {\n        ...state,\n        // Group JSON API includes by their type.\n        includes: action.payload.contentList.included\n          ? action.payload.contentList.included.reduce((accumulator, node) => {\n              accumulator[node.type] = accumulator[node.type] || {};\n              accumulator[node.type][node.id] = node;\n              return accumulator;\n            }, {})\n          : {},\n        contentList: action.payload.contentList.data\n          ? action.payload.contentList.data.map(content => ({\n              ...content,\n              // @fixme Instead of doing that we should get the node type\n              // using the type relationship.\n              type: content.type.substr(6),\n            }))\n          : [],\n        links: action.payload.contentList.links,\n      };\n    }\n\n    case CONTENT_DELETE: {\n      return {\n        ...state,\n        contentList: state.contentList.filter(\n          content => content.id !== action.payload.content.id,\n        ),\n      };\n    }\n\n    case USER_LOADED: {\n      return {\n        ...state,\n        user: action.payload.user,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {\n  SCHEMA_LOADED,\n  UI_SCHEMA_LOADED,\n  SCHEMA_BY_ENTITY_ID_LOADED,\n} from '../actions/schema';\n\nexport const initialState = {\n  uiSchema: {},\n  schema: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SCHEMA_LOADED: {\n      return {\n        ...state,\n        schema: {\n          [`${action.payload.entityTypeId}--${action.payload.bundle}`]: action\n            .payload.entitySchema,\n        },\n      };\n    }\n    case SCHEMA_BY_ENTITY_ID_LOADED: {\n      return {\n        ...state,\n        schema: {\n          [`${action.payload.entityTypeId}--${action.payload.entityId}`]: action\n            .payload.entitySchema,\n        },\n      };\n    }\n    case UI_SCHEMA_LOADED: {\n      const [\n        {\n          attributes: { content: formDisplaySchema },\n        },\n      ] = action.payload.formDisplaySchema;\n      const fieldSchema = action.payload.fieldSchema.reduce((acc, cur) => {\n        acc[cur.attributes.field_name] = cur;\n        return acc;\n      }, {});\n      return {\n        ...state,\n        uiSchema: {\n          ...state.uiSchema,\n          [`${action.payload.entityTypeId}--${action.payload.bundle}`]: {\n            fieldSchema,\n            formDisplaySchema,\n            fieldStorageConfig: action.payload.fieldStorageConfig,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  TAXONOMY_VOCABULARY_LOADED,\n  TAXONOMY_TERMS_LOADED,\n} from '../actions/taxonomy';\n\nexport const initialState = {\n  taxonomyVocabulary: [],\n  taxonomyTerms: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TAXONOMY_VOCABULARY_LOADED: {\n      return {\n        ...state,\n        taxonomyVocabulary: action.payload.taxonomyVocabulary,\n      };\n    }\n    case TAXONOMY_TERMS_LOADED: {\n      const { vocabulary, taxonomyTerms } = action.payload;\n      return {\n        ...state,\n        taxonomyTerms: {\n          ...state.taxonomyTerms,\n          [vocabulary]: taxonomyTerms,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport application, {\n  initialState as applicationInitialState,\n} from './application';\nimport content, { initialState as contentInitialState } from './content';\nimport schema, { initialState as schemaInitialState } from './schema';\nimport taxonomy, { initialState as taxonomyInitialState } from './taxonomy';\n\nconst reducers = { application, content, schema, taxonomy };\nexport const initialState = {\n  application: applicationInitialState,\n  content: contentInitialState,\n  schema: schemaInitialState,\n  taxonomy: taxonomyInitialState,\n};\nexport default { ...reducers, loadingBar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst InitialRedirect = ({ location: { search } }) => {\n  // Allow Drupal redirects to determine the initial path.\n  const searchString = search\n    .replace('?q=', '')\n    // trim slashes on the left.\n    .replace(/^\\//, '');\n  if (searchString) {\n    return <Redirect to={searchString} />;\n  }\n  return <Redirect to=\"/\" />;\n};\n\nInitialRedirect.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default InitialRedirect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport deepMerge from 'deepmerge';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport {\n  ConnectedRouter,\n  routerReducer,\n  routerMiddleware,\n} from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport { create } from 'jss';\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  createGenerateClassName,\n  jssPreset,\n} from '@material-ui/core/styles';\n\nimport routes from './routes';\n\nimport Content from './components/05_pages/Content/Content';\nimport Default from './components/06_wrappers/Default/Default';\nimport NoMatch from './NoMatch';\n\nimport actions from './actions/index';\nimport reducers, { initialState } from './reducers/index';\nimport ErrorBoundary from './components/06_wrappers/ErrorBoundary/ErrorBoundary';\nimport InitialRedirect from './InitialRedirect';\n\nimport EnsureComponent from './components/02_atoms/EnsureComponent/EnsureComponent';\n\nconst history = createBrowserHistory();\nconst middleware = routerMiddleware(history);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const localStorageName = 'drupalAdminUiReduxState';\n\n/**\n * Restore from local storage.\n */\nconst restoreState = () => {\n  let storedState;\n  let stringifiedState;\n  if (typeof window === 'object') {\n    try {\n      // Test for Safari private browsing mode. This will throw an error if it can't set an item.\n      localStorage.setItem('localStorageTest', true);\n      stringifiedState = localStorage.getItem(localStorageName) || '';\n    } catch (e) {\n      // In case like Safari private browing mode we don't support any restoring.\n      // Also note: enzyme has window but no Cookie set.\n      stringifiedState =\n        (window.Cookie &&\n          decodeURIComponent(window.Cookie.get(localStorageName))) ||\n        '';\n    }\n  }\n\n  try {\n    storedState = JSON.parse(stringifiedState);\n  } catch (e) {\n    storedState = {};\n  }\n  return storedState;\n};\n\nexport const localStorageStore = state => ({\n  content: {\n    restorableContentAddByBundle: state.content.restorableContentAddByBundle,\n    restorableContentEditById: state.content.restorableContentEditById,\n  },\n});\n\nconst storeState = store => {\n  // Persist state.\n  const state = store.getState();\n\n  // Save to local storage\n  const stringifiedState = JSON.stringify(localStorageStore(state));\n  try {\n    localStorage.setItem(localStorageName, stringifiedState);\n  } catch (e) {\n    // This will happen with Safari in private browsing mode.\n  }\n};\n\nconst store = createStore(\n  combineReducers({ ...reducers, router: routerReducer }),\n  deepMerge(initialState, restoreState()),\n  composeWithDevTools(applyMiddleware(sagaMiddleware, middleware)),\n);\nsagaMiddleware.run(actions);\n\nif (typeof window === 'object') {\n  store.subscribe(() => storeState(store));\n}\n\nconst generateClassName = createGenerateClassName();\nconst jss = create(jssPreset());\n// We define a custom insertion point that JSS will look for injecting the styles in the DOM.\njss.options.insertionPoint = document.getElementById('jss-insertion-point');\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = ({ serverRoutes }) => (\n  <JssProvider jss={jss} generateClassName={generateClassName}>\n    <MuiThemeProvider theme={theme}>\n      <ErrorBoundary>\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <Default>\n              <Switch>\n                <Route exact path=\"/\" component={withRouter(Content)} />\n                {Object.entries({\n                  ...routes,\n                  ...Object.values(serverRoutes).reduce(\n                    (acc, { route, component, moduleName: routePrefix }) => ({\n                      ...acc,\n                      ...{ [`/${routePrefix}${route}`]: component },\n                    }),\n                    {},\n                  ),\n                }).map(([route, component]) => (\n                  <Route\n                    exact\n                    path={route}\n                    component={() => (\n                      <EnsureComponent\n                        component={component}\n                        render={widgetComponent =>\n                          React.createElement(withRouter(widgetComponent))\n                        }\n                      />\n                    )}\n                    key={route}\n                  />\n                ))}\n                <Route\n                  path=\"/(vfancy/?)\"\n                  component={withRouter(InitialRedirect)}\n                />\n                <Route component={NoMatch} />\n              </Switch>\n            </Default>\n          </ConnectedRouter>\n        </Provider>\n      </ErrorBoundary>\n    </MuiThemeProvider>\n  </JssProvider>\n);\n\nApp.propTypes = {\n  serverRoutes: PropTypes.arrayOf(\n    PropTypes.shape({\n      route: PropTypes.string.isRequired,\n      component: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nApp.defaultProps = {\n  serverRoutes: {},\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n            }\n          }\n        };\n      };\n    })\n    .catch(() => {});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {});\n}\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {});\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport api from './utils/api/api';\n\n// Disable react-axe without an additional cli flag.\n// See README.md for more information.\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_AXE) {\n  // eslint-disable-next-line import/no-extraneous-dependencies, global-require\n  const axe = require('react-axe');\n  axe(React, ReactDOM);\n}\n\n// Fetch routes provided by Drupal modules.\n// This happens outsite of React and before the application starts.\napi('admin_ui_routes').then(({ routes }) => {\n  ReactDOM.render(\n    <App serverRoutes={routes} />,\n    document.getElementById('root'),\n  );\n});\nregisterServiceWorker();\n"],"sourceRoot":""}
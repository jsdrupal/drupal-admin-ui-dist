{"version":3,"sources":["utils/api/api.js","constants/messages.js","components/05_pages/NodeForm/WidgetPropTypes.js","components/02_atoms/Widgets/OptionsSelect.js","components/02_atoms/Widgets/NumberTextfield.js","components/02_atoms/Widgets/StringTextfield.js","components/02_atoms/Widgets/BooleanCheckbox.js","components/02_atoms/Widgets/DatetimeTimestamp.js","components/02_atoms/FileUpload/FileUpload.js","utils/api/fieldItem.ts","components/02_atoms/Widgets/FileUploadWidget.js","components/05_pages/NodeForm/SchemaPropType.js","components/02_atoms/Widgets/EntityReferenceAutocomplete.js","components/02_atoms/Widgets/TextTextarea.js","components/05_pages/NodeForm/Widgets.js","actions/application.js","components/02_atoms/PageTitle/PageTitle.js","components/02_atoms/PageTitle/index.js","components/05_pages/AddContent/AddContent.js","components/05_pages/AddContent/index.js","components/02_atoms/OpsModalButton/OpsModalButton.js","components/01_subatomics/MessageHelpers/MessageSave.js","utils/api/content.js","actions/content.js","components/04_templates/ContentTable/ContentTable.js","components/05_pages/Content/ConfirmationDialog.js","components/05_pages/Content/Content.js","components/02_atoms/Loading/Loading.js","components/01_subatomics/Table/Table.js","components/05_pages/Permissions/Permissions.js","actions/roles.js","components/05_pages/Roles/Roles.js","components/05_pages/Roles/index.js","actions/helpers.js","actions/reports.js","components/05_pages/Reports/Dblog.js","utils/api/schema.js","components/02_atoms/MultipleFields/MultipleFields.js","actions/schema.js","components/05_pages/NodeForm/index.js","components/02_atoms/EnsureComponent/EnsureComponent.js","components/05_pages/NodeEditForm/index.js","components/05_pages/NodeAddForm/index.js","components/05_pages/TaxonomyVocabulary/TaxonomyVocabulary.js","actions/taxonomy.js","components/05_pages/TaxonomyVocabulary/index.js","components/05_pages/TaxonomyTermsOverview/TaxonomyTermsOverview.js","components/05_pages/TaxonomyTermsOverview/index.js","routes.js","components/02_atoms/SnackbarMessage/SnackbarMessage.js","components/02_atoms/InlineMessage/InlineMessage.js","components/06_wrappers/Default/Default.js","components/06_wrappers/ErrorBoundary/ErrorBoundary.js","NoMatch.ts","actions/index.js","reducers/application.js","reducers/content.js","reducers/schema.js","reducers/taxonomy.js","reducers/index.js","InitialRedirect.js","App.js","registerServiceWorker.js","index.js"],"names":["api","_len","arguments","length","args","Array","_key","apply","process","concat","MESSAGE_SEVERITY_SUCCESS","PropTypes","string","isRequired","func","styles","select","css","_templateObject","OptionsSelect","_ref","label","value","onChange","helpText","fieldName","required","defaultValue","schema","default","classes","allowedValues","inputProps","allowed_values","react_default","a","createElement","FormControl_default","margin","InputLabel_default","htmlFor","NativeSelect_default","fullWidth","event","target","name","id","className","Object","entries","map","_ref2","_ref3","slicedToArray","machineName","humanName","key","FormHelperText_default","defaultProps","NumberTextfield","TextField_default","Number","InputProps","objectSpread","unsigned","toString","endAdornment","suffix","InputAdornment_default","position","startAdornment","prefix","type","min","StringTextfield","props","isArray","autoFocus","BooleanCheckbox","FormControlLabel_default","control","Checkbox_default","checked","String","root","BooleanCheckbox_templateObject","DatetimeTimestamp","Date","toJSON","slice","InputLabelProps","shrink","Container","styled","FileUpload_templateObject","Element","_templateObject2","Text","_templateObject3","marginTopDense","marginTop","error","color","paddingLeft","FileUpload","state","total","files","errors","filesLength","isDisabled","onDragOver","stopPropagation","preventDefault","_this","setElementStyles","dataTransfer","dropEffect","onDragLeave","onDrop","readFile","onClick","input","click","undefined","_assertThisInitialize","assertThisInitialized","element","style","border","opacity","getFiles","uploadFile","file","reader","window","FileReader","onloadend","asyncToGenerator","regenerator_default","mark","_callee","_ref$target","readyState","result","_assertThisInitialize2","resetState","_assertThisInitialize3","entityTypeId","bundle","onFileUpload","buffer","token","fileName","createdFile","wrap","_context","prev","next","DONE","Uint8Array","sent","replace","parameters","body","options","headers","X-CSRF-Token","setState","prevState","toConsumableArray","stop","this","_x","readAsArrayBuffer","checkFile","_ref4","size","lastModified","extension","split","_assertThisInitialize4","_assertThisInitialize5","max_filesize","file_extensions","includes","keys","_assertThisInitialize6","_assertThisInitialize7","_assertThisInitialize8","_assertThisInitialize9","multiple","remainingUploads","slicedFiles","reduce","obj","forEach","isEnabled","fn","render","_assertThisInitialize10","_assertThisInitialize11","_assertThisInitialize12","innerRef","Typography_default","variant","Button_default","disabled","aria-label","CloudUpload_default","display","ref","LinearProgress_default","component","_ref5","Component","setItemById","item","items","index","findIndex","i","getItemsAsArray","values","CardWrapper","FileUploadWidget_templateObject","FileUploadWidget_templateObject2","Image","FileUploadWidget_templateObject3","_templateObject4","FileUploadWidget","selectedItems","setSelectedItems","data","recalculateSelectedItems","properties","ids","fetchEntitites","then","entities","attributes","defineProperty","meta","agg","queryString","filter","condition","operator","path","prevProps","_this2","_this$props","_this$props$schema","maxItems","maxItemsCount","FileUploadWidget_Element","FormLabel_default","_02_atoms_FileUpload_FileUpload","newItems","itemsAgg","url","uuid","filename","alt","Card_default","CardContent_default","List_default","_item$file","last","react","ListItem_default","src","mini","deleteItemById","currentTarget","Delete_default","Divider_default","React","lazyFunction","f","propName","componentName","rest","lazySchemaType","shape","title","description","objectOf","results","EntityReferenceAutocomplete_templateObject","EntityReferenceAutocomplete_templateObject2","EntityReferenceAutocomplete","inputValue","suggestions","Map","getMaxItems","_this$determineEntity","determineEntityTypeAndBundlesFromSchema","_this$determineEntity2","enum","handleChange","handleInputChange","_this$determineEntity4","_this$determineEntity5","fetchSuggestedEntities","_ref6","_ref7","handleKeyDown","_this$state","keycode","handleDelete","_ref8","_ref9","_ref10$","bundles","_ref11","renderSuggestion","_ref12","suggestion","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","MenuItem_default","assign","selected","fontWeight","renderInput","_ref13","other","objectWithoutProperties","inputRef","autoComplete","_this$state2","downshift_esm","itemToString","_ref14","getInputProps","getItemProps","isOpen","_ref15","_ref16","Chip_default","tabIndex","onDelete","onKeyDown","placeholder","Paper_default","square","from","TextTextarea","createValueFromString","RichTextEditor","extractValueString","valueString","componentDidUpdate","format","react_rte_default","container","TextTextarea_templateObject","TextTextarea_templateObject2","widgets","options_select","number","boolean_checkbox","datetime_timestamp","image_image","entity_reference_autocomplete","text_textarea","loadMenu","loadContentTypes","loadActions","loadComponentList","watchApplication","setMessage","message","messageSeverity","payload","setErrorMessage","setSuccessMessage","clearMessage","MENU_REQUESTED","MENU_LOADED","menuLinks","errorMessage","put","resetLoading","showLoading","call","t0","ApiError","errorToHumanString","hideLoading","finish","_marked","CONTENT_TYPES_REQUESTED","requestContentTypes","contentTypesSelector","application","contentTypes","CONTENT_TYPES_LOADED","_context2","_marked2","ACTIONS_REQUESTED","getActionsCache","actions","ACTIONS_LOADED","_context3","t1","_marked3","COMPONENT_LIST_REQUESTED","COMPONENT_LIST_LOADED","components","_context4","_marked4","_context5","takeLatest","takeEvery","_marked5","PageTitle_templateObject","withSideEffect","propsList","innermostProps","children","document","e","trim","join","PageTitle","menuLink","AddContent_templateObject","AddContent_templateObject2","_02_atoms_PageTitle","data-nightwatch","contentType","Link","to","ListItemText_default","primary","secondary","interweave_lib","content","connect","AddContent","Transition","Slide_default","direction","OpsModalButton","open","handleClickOpen","handleClose","text","cancelText","confirmText","enterAction","buttonProps","IconButton_default","Dialog_default","TransitionComponent","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","MessageSave","nid","extractContentType","substring","mapContentTypeToName","cleanupRelationships","relationships","acc","cur","_cur","relationshipData","loadContent","loadSingleContent","executeAction","saveContent","addContent","deleteContent","loadUser","rootSaga","CONTENT_REQUESTED","CONTENT_LOADED","action","status","sort","page","offset","limit","contentList","typeGroup","group","conjunction","typearticle","typepage","accumulator","memberOf","include","content_marked","CONTENT_SINGLE_REQUESTED","CONTENT_SINGLE_LOADED","_ref$data","content_marked2","CONTENT_SAVE","contentSave","CONTENT_ADD","contentAdd","CONTENT_DELETE","contentDelete","ACTION_EXECUTE","SUPPORTED_ACTIONS","_ref2$payload","nids","saveAction","node","contentItem","plugin","sticky","links","promote","x","all","content_marked3","_ref5$0$data$attribut","contentTypeName","MessageHelpers_MessageSave","content_marked4","contentName","push","content_marked5","_context6","_marked6","USER_REQUESTED","USER_LOADED","uid","_ref8$data","user","_context7","_marked7","_context8","_marked8","noContentMessage","ContentTable_templateObject","ContentTable","setChecked","_this$props$page","count","table","Table_default","TableHead_default","TableRow_default","TableCell_default","padding","selectAll","sortable","TableSortLabel_default","toLowerCase","active","tableSortHandler","TableBody_default","_node$attributes","changed","rowSelectId","nextChecked","JSON","parse","stringify","Intl","DateTimeFormat","navigator","language","weekday","year","month","day","hour","minute","whiteSpace","button","Edit_default","_02_atoms_OpsModalButton_OpsModalButton","TablePagination_default","rowsPerPage","onChangePage","pageChangeHandler","rowsPerPageOptions","labelDisplayedRows","nextIconButtonProps","backIconButtonProps","dialogActionName","ConfirmationDialog_templateObject","listItemText","ConfirmationDialog_templateObject2","ConfirmationDialog","dialogVisibility","actionLabel","shift","_ref5$attributes","Content_templateObject","addButton","Content_templateObject2","Content_templateObject3","formControl","Content_templateObject4","chips","_templateObject5","chip","_templateObject6","selectEmpty","_templateObject7","_templateObject8","filters","_templateObject9","_templateObject10","textField","_templateObject11","Content","dialogOpen","dialogClose","matchingAction","actionExecute","requestContent","build_default","marginBottom","Select_default","Input_default","renderValue","indexOf","autoWidth","Boolean","Content_ConfirmationDialog","Add_default","_04_templates_ContentTable_ContentTable","requestActions","rotate","keyframes","Loading_templateObject","Loading_templateObject2","peace","Loading_templateObject3","Loading","role","TABLE","TR","TD","THEAD","Table_TR","tr","Table_TD","td","TBODY","rows","tbody","colspan","tds","tdKey","tdValue","tdClassName","cx","colSpan","thead","Table_templateObject","Table_templateObject2","Table_templateObject3","Table_templateObject4","filterPermissions","permissions","provider","providerLabel","provider_label","Permissions","_Component","_getPrototypeOf2","classCallCheck","possibleConstructorReturn","getPrototypeOf","loaded","rawPermissions","renderablePermissions","working","onPermissionCheck","roleName","permission","changedRoles","Set","add","roles","togglePermission","fetchData","makeCancelable","Promise","match","params","b","is_admin","catch","err","roleIndex","splice","groupPermissions","createTableRows","groupedPermissions","providerMachineName","_ref6$","Permissions_templateObject","handleKeyPress","saveRoles","cancelFetch","inherits","createClass","Error","react_sticky_lib","stickyBar","searchInput","saveButton","Table_TABLE","Table_THEAD","Table_TBODY","_02_atoms_Loading_Loading","Permissions_templateObject2","Permissions_templateObject3","Permissions_templateObject4","loadRoles","ROLES_LOADED","cancelled","roles_marked","watchRequestedRolesWithCancel","watchRequestedRoles","race","task","cancel","take","Roles","_ref$attributes","requestRoles","cancelTask","ConnectedRoles","loadDblog","DBLOG_FILTER_UPDATED","DBLOG_COLLECTION_LOADED","dbLogEntriesTypes","dbLogEntries","types","severities","severityGroup","reports_marked","watchDblogRequests","Dblog","generateTableRows","wid","messageFormattedPlain","timestamp","severityFilterHandler","requestDblogCollection","filterOptions","option","typeFilterHandler","nextPage","previousPage","availableTypes","onBlur","dblog","createEntity","Add","MultipleFields_templateObject","ListItemStyles","paddingRight","ListItemIconStyles","cursor","MultipleFields","handle","currentIndex","newItemAdded","onMouseDown","onDragStart","contains","setData","effectAllowed","parseInt","dataset","overIndex","selectedValue","onDragEnd","changeItem","_this$props2","propsValue","newValue","addAnotherItem","_this$props3","usedValues","createEmptyItem","draggable","data-key","ListItemIcon_default","Reorder_default","MultipleFields_Add","loadUiSchema","loadSchema","loadSchemaByEntityId","UI_SCHEMA_REQUESTED","UI_SCHEMA_LOADED","_action$payload","fieldSchema","formDisplaySchema","fieldStorageConfig","entity_type","targetEntityType","mode","schema_marked","SCHEMA_REQUESTED","SCHEMA_LOADED","_action$payload2","entitySchema","_describes","_format","schema_marked2","SCHEMA_BY_ENTITY_ID_REQUESTED","SCHEMA_BY_ENTITY_ID_LOADED","_action$payload3","entityId","schema_marked3","schema_marked4","EnsureComponent","define","MaterialUI","require","NodeForm","restored","onAttributeChange","entity","onSave","missingFields","resolveMissingRequiredFields","onRelationshipChange","fieldData","getSchemaInfo","unavailableFields","requiredFields","field","calculateState","uiSchema","restorableEntity","_ref10","createField","widget","_this$props$schema$pr","propType","widgetProps","widgetRoot","widgetIsMultiple","hasMultipleDeltas","_02_atoms_EnsureComponent_EnsureComponent","widgetComponent","_02_atoms_MultipleFields_MultipleFields","requestUiSchema","requestComponentList","_this3","_this4","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","Close_default","icon","secondaryColumnFields","_sortUISchemaFields","startsWith","weight","currentFieldName","widgetName","fieldStorageSettings","field_name","prototype","hasOwnProperty","settings","constraints","curr","right","left","gridRoot","renderRestoreSnackbar","fieldContainer","divider","NodeForm_templateObject","NodeForm_templateObject2","NodeForm_templateObject3","NodeForm_templateObject4","NodeForm_templateObject5","NodeEditForm","requestSchemaByEntityId","requestSingleContent","_02_atoms_PageTitle_PageTitle","_05_pages_NodeForm","NodeEditForm_templateObject","contentByNid","restorableContentEditById","change","extractRestorableEntity","NodeAddForm","forgeEntity","local","setMinutes","getMinutes","getTimezoneOffset","created","Math","round","requestUser","requestSchema","restorableContentAddByBundle","TaxonomyVocabulary_templateObject","TaxonomyVocabulary","activeLink","vocabularyOperations","vid","MenuItem_MenuItem_default","Redirect","requestTaxonomyVocabulary","taxonomyVocabulary","vocabulary","loadTaxonomyVocabulary","loadTaxonomyTerms","TAXONOMY_VOCABULARY_REQUESTED","TAXONOMY_VOCABULARY_LOADED","taxonomy_marked","TAXONOMY_TERMS_REQUESTED","getTaxonomyVocabularyById","taxonomyVocabularyList","TAXONOMY_TERMS_LOADED","taxonomyTerms","taxonomy","taxonomy_marked2","taxonomy_marked3","TaxonomyTermsOverview_templateObject","TaxonomyTermsOverview","termOperations","tid","requestTaxonomyTerms","term","routes","/admin/content","/admin/people/permissions/:role?","/admin/people/roles","/admin/reports/dblog","/node/add","/node/:nid/edit","/node/add/:bundle","/admin/structure/taxonomy/manage/:vocabulary/overview","/admin/structure/taxonomy","Taxonomy","variantIcon","CheckCircleIcon","MESSAGE_SEVERITY_WARNING","WarningIcon","MESSAGE_SEVERITY_ERROR","ErrorIcon","MESSAGE_SEVERITY_INFO","InfoIcon","success","SnackbarMessage_templateObject","SnackbarMessage_templateObject2","info","SnackbarMessage_templateObject3","warning","SnackbarMessage_templateObject4","SnackbarMessage_templateObject5","iconVariant","SnackbarMessage_templateObject6","SnackbarMessage_templateObject7","SnackbarMessage","Icon","duration","SnackbarContent_default","severity","modifierClassMap","InlineMessage_templateObject","InlineMessage_templateObject2","InlineMessage_templateObject3","InlineMessage_templateObject4","InlineMessage_templateObject5","_modifierClassMap","Message","ErrorBoundary","InlineMessage","iconMap","ViewList_default","/admin/structure","Build_default","/admin/appearance","ColorLens_default","/admin/modules","Extension_default","/admin/config","Settings_default","/admin/people","People_default","/admin/reports","Assessment_default","/admin/help","Help_default","Default","outerWrapper","CssBaseline_default","Drawer_default","paper","drawerPaper","drawerOpen","drawerPaperClose","menuButtonWrapper","closeDrawer","menuButton","ChevronLeft_default","openDrawer","Menu_default","link","main","_06_wrappers_ErrorBoundary_ErrorBoundary","_02_atoms_SnackbarMessage_SnackbarMessage","requestMenu","Default_templateObject","Default_templateObject2","Default_templateObject3","Default_templateObject4","Default_templateObject5","Default_templateObject6","Default_templateObject7","withRouter","messages","NoMatch","location","pathname","href","applicationSaga","contentSaga","schemaSaga","taxonomySaga","actions_marked","initialState","filterString","reducers","now","random","LOCATION_CHANGE","message_formatted_plain","included","substr","applicationInitialState","contentInitialState","schemaInitialState","taxonomyInitialState","src_reducers","loadingBar","InitialRedirect","searchString","search","es_Redirect","history","createBrowserHistory","middleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","router","routerReducer","deepMerge","storedState","stringifiedState","localStorage","setItem","getItem","Cookie","decodeURIComponent","get","restoreState","composeWithDevTools","applyMiddleware","run","subscribe","getState","localStorageStore","storeState","generateClassName","createGenerateClassName","jss","create","jssPreset","insertionPoint","getElementById","theme","createMuiTheme","typography","useNextVariants","App","serverRoutes","JssProvider_default","react_redux_es","es","_06_wrappers_Default_Default","Switch","Route","exact","route","routePrefix","moduleName","isLocalhost","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","URL","origin","addEventListener","fetch","response","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.da3031f6.chunk.js","sourcesContent":["import { api } from '@drupal/admin-ui-utilities';\n\nexport default (...args) => api(process.env.REACT_APP_DRUPAL_BASE_URL, ...args);\n","// messageSeverity – used to determine render traits based on message severity.\nexport const MESSAGE_SEVERITY_ERROR = 'MESSAGE_SEVERITY_ERROR';\nexport const MESSAGE_SEVERITY_SUCCESS = 'MESSAGE_SEVERITY_SUCCESS';\nexport const MESSAGE_SEVERITY_INFO = 'MESSAGE_SEVERITY_INFO';\nexport const MESSAGE_SEVERITY_WARNING = 'MESSAGE_SEVERITY_WARNING';\n","import PropTypes from 'prop-types';\n\nexport default {\n  fieldName: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst styles = {\n  select: css`\n    min-width: 182px;\n  `,\n};\n\nconst OptionsSelect = ({\n  label,\n  value,\n  onChange,\n  helpText,\n  fieldName,\n  required,\n  schema: { default: defaultValue },\n  classes,\n  inputProps: { allowed_values: allowedValues },\n}) => (\n  <FormControl margin=\"normal\" classes={classes}>\n    <InputLabel htmlFor={fieldName} required={required}>\n      {label}\n    </InputLabel>\n    <NativeSelect\n      value={value || defaultValue}\n      fullWidth\n      onChange={event => onChange(event.target.value)}\n      inputProps={{\n        name: fieldName,\n        id: fieldName,\n      }}\n      className={styles.select}\n    >\n      {Object.entries(allowedValues).map(([machineName, humanName]) => (\n        <option key={machineName} value={machineName}>\n          {humanName}\n        </option>\n      ))}\n    </NativeSelect>\n    {helpText && <FormHelperText>{helpText}</FormHelperText>}\n  </FormControl>\n);\n\nOptionsSelect.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.string,\n  helpText: PropTypes.string,\n  schema: PropTypes.shape({\n    default: PropTypes.string.isRequired,\n  }).isRequired,\n  inputProps: PropTypes.shape({\n    allowed_values: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nOptionsSelect.defaultProps = {\n  value: '',\n  helpText: '',\n};\n\nexport default OptionsSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst NumberTextfield = ({\n  classes,\n  label,\n  value,\n  onChange,\n  fieldName,\n  required,\n  inputProps,\n}) => (\n  <TextField\n    id={fieldName}\n    value={value}\n    fullWidth\n    onChange={event => onChange(Number(event.target.value))}\n    InputProps={{\n      ...inputProps,\n      unsigned: inputProps.unsigned && inputProps.unsigned.toString(),\n      endAdornment: inputProps.suffix && (\n        <InputAdornment position=\"end\">{inputProps.suffix}</InputAdornment>\n      ),\n      startAdornment: inputProps.prefix && (\n        <InputAdornment position=\"start\">{inputProps.prefix}</InputAdornment>\n      ),\n    }}\n    type=\"number\"\n    margin=\"normal\"\n    label={label}\n    classes={classes}\n    required={required}\n  />\n);\n\nNumberTextfield.propTypes = {\n  ...WidgetPropTypes,\n  inputProps: PropTypes.shape({\n    max: PropTypes.number,\n    min: PropTypes.number,\n    step: PropTypes.number,\n    suffix: PropTypes.string,\n    prefix: PropTypes.string,\n  }),\n  value: PropTypes.number,\n};\n\nNumberTextfield.defaultProps = {\n  inputProps: {\n    min: 0,\n  },\n  value: '',\n};\n\nexport default NumberTextfield;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst StringTextfield = props => (\n  <TextField\n    id={props.fieldName}\n    value={\n      (Array.isArray(props.value) && props.value.length && props.value[0]) ||\n      props.value\n    }\n    onChange={event => props.onChange(event.target.value)}\n    margin=\"normal\"\n    label={props.label}\n    classes={props.classes}\n    required={props.required}\n    autoFocus={props.autoFocus}\n    fullWidth\n  />\n);\n\nStringTextfield.propTypes = {\n  ...WidgetPropTypes,\n  // @todo This should not be needed after https://github.com/jsdrupal/drupal-admin-ui/issues/195\n  value: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  autoFocus: PropTypes.bool,\n};\n\nStringTextfield.defaultProps = {\n  value: '',\n  autoFocus: false,\n};\n\nexport default StringTextfield;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckBox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { css } from 'emotion';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nlet styles;\n\nconst BooleanCheckbox = props => {\n  const { onChange, label, value } = props;\n\n  return (\n    <FormControlLabel\n      id={`${props.fieldName}-label`}\n      control={\n        <CheckBox\n          id={`${props.fieldName}-cb`}\n          onChange={event => onChange(event.target.checked)}\n          margin=\"normal\"\n          value={String(value)}\n          checked={value}\n        />\n      }\n      label={label}\n      classes={styles}\n      required={props.required}\n    />\n  );\n};\n\nBooleanCheckbox.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.bool,\n};\n\nBooleanCheckbox.defaultProps = {\n  value: false,\n};\n\nstyles = {\n  root: css`\n    align-items: center;\n  `,\n};\n\nexport default BooleanCheckbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst DatetimeTimestamp = ({\n  classes,\n  fieldName,\n  label,\n  value,\n  onChange,\n  required,\n}) => (\n  <TextField\n    id={fieldName}\n    fullWidth\n    label={label}\n    type=\"datetime-local\"\n    defaultValue={value ? new Date(value * 1000).toJSON().slice(0, 19) : null}\n    margin=\"normal\"\n    onChange={event => onChange(+new Date(event.target.value) / 1000)}\n    InputLabelProps={{\n      shrink: true,\n    }}\n    classes={classes}\n    required={required}\n  />\n);\n\nDatetimeTimestamp.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.number,\n  required: PropTypes.bool.isRequired,\n};\n\nDatetimeTimestamp.defaultProps = {\n  value: 0,\n};\n\nexport default DatetimeTimestamp;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport api from '../../../utils/api/api';\n\nconst Container = styled('div')`\n  width: 100%;\n`;\n\nconst Element = styled('div')`\n  border: 2px dashed grey;\n  border-radius: 3px;\n  display: flex;\n  padding: 25px;\n  width: 100%;\n\n  > div {\n    width: 100%;\n  }\n`;\n\nconst Text = styled('div')`\n  margin: 0;\n  text-align: center;\n  .icon {\n    margin-left: 10px;\n  }\n`;\n\nconst marginTopDense = {\n  marginTop: '10px',\n};\n\nconst marginTop = {\n  marginTop: '20px',\n};\n\nconst error = {\n  color: 'red',\n  paddingLeft: 0,\n};\n\nclass FileUpload extends Component {\n  static propTypes = {\n    entityTypeId: PropTypes.string.isRequired,\n    bundle: PropTypes.string.isRequired,\n    fieldName: PropTypes.string.isRequired,\n    onFileUpload: PropTypes.func.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    remainingUploads: PropTypes.number.isRequired,\n    inputProps: PropTypes.shape({\n      file_extensions: PropTypes.string,\n      max_filesize: PropTypes.string,\n    }).isRequired,\n  };\n\n  /**\n   * Initial state\n   */\n  state = {\n    total: 0,\n    files: [],\n    errors: [],\n    filesLength: 0,\n    isDisabled: false,\n  };\n\n  /**\n   * Will set the border of the element to red and\n   * drop effect on drag over.\n   * @param {Event} event\n   */\n  onDragOver = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setElementStyles('red');\n    event.dataTransfer.dropEffect = 'dragend';\n  };\n\n  /**\n   * Resets the border on drag leave.\n   * @param {Event} event\n   */\n  onDragLeave = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setElementStyles();\n  };\n\n  /**\n   * Will read the file/s that are dropped in the drop area.\n   * @param {Event} event\n   */\n  onDrop = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.readFile(event.dataTransfer.files);\n  };\n\n  /**\n   * Will call the click event on the input to open the file explorer\n   * to allow file/s to be selected.\n   */\n  onClick = () => {\n    this.input.click();\n  };\n\n  /**\n   * Sets the styles of the drop zone element.\n   * Set the border and opacity.\n   * @param {String} [color=\"grey\"] Color of the border.\n   */\n  setElementStyles = (color = 'grey') => {\n    const {\n      element,\n      state: { isDisabled },\n    } = this;\n\n    if (element) {\n      element.style.border = `2px dashed ${color}`;\n      element.style.opacity = `${isDisabled ? '0.3' : '1'}`;\n    }\n  };\n\n  /**\n   * Will get the selected file/s from the file explorer.\n   * @param {Event} event\n   */\n  getFiles = event => {\n    this.readFile(event.target.files);\n  };\n\n  /**\n   * Uploads the file to the server, updates the total and files state.\n   * @param {Object} file File to be uploaded.\n   */\n  uploadFile = file => {\n    const reader = new window.FileReader();\n\n    reader.onloadend = async ({ target: { readyState, result } }) => {\n      if (readyState === window.FileReader.DONE) {\n        const {\n          resetState,\n          props: { entityTypeId, bundle, fieldName, onFileUpload },\n        } = this;\n        const { buffer } = new Uint8Array(result);\n        const token = await api('csrf_token');\n        // Replace file name, some reason any space doesn't work\n        // TODO: Find a way to fix this without changing the name\n        const fileName = file.name.replace(/[,#!$^&*;{}=\\-+`~()[\\] ]/g, '_');\n\n        // Upload the file to server\n        const createdFile = await api('file:upload', {\n          parameters: {\n            bundle,\n            fileName,\n            fieldName,\n            entityTypeId,\n            body: buffer,\n          },\n          options: {\n            headers: {\n              'X-CSRF-Token': token,\n            },\n          },\n        });\n\n        this.setState(\n          prevState => ({\n            total: prevState.total + 1,\n            files: [...prevState.files, createdFile],\n          }),\n          () => {\n            onFileUpload(this.state.files);\n            resetState();\n          },\n        );\n      }\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  /**\n   * Checks the current file has met all the criteria before\n   * being uploaded to the server. If not then will set the\n   * error state and update the total.\n   * Will check file size and extension.\n   * @param {String} type file type.\n   * @param {Number} size file size.\n   * @param {String} name file name.\n   */\n  checkFile = ({ type, size, name, lastModified }) => {\n    /* eslint-disable camelcase */\n    const errors = {};\n    const extension = type.split('/')[1]; // <MIME_subtype>\n    const {\n      resetState,\n      props: {\n        inputProps: { max_filesize, file_extensions },\n      },\n    } = this;\n\n    // Check file size\n    if (max_filesize && size > Number(max_filesize)) {\n      // TODO: Convert max_filesize to MB\n      errors.size =\n        'The file could not be saved because it exceeds 2 MB, the maximum allowed size for uploads.';\n    }\n\n    // Check file extension\n    if (!file_extensions.includes(extension)) {\n      errors.type = `The image file is invalid or the image type is not allowed. Allowed types: ${file_extensions}.`;\n    }\n\n    // Check if there are errors\n    if (Object.keys(errors).length > 0) {\n      errors.name = `The specified file ${name} could not be uploaded.`;\n      errors.id = lastModified;\n\n      // Set the state with error and update total\n      this.setState(\n        prevState => ({\n          total: prevState.total + 1,\n          errors: [...prevState.errors, errors],\n        }),\n        resetState,\n      );\n      return false;\n    }\n\n    return true;\n    /* eslint-enable camelcase */\n  };\n\n  /**\n   * Resets the state if all file/s have been uploaded.\n   */\n  resetState = () => {\n    const {\n      setElementStyles,\n      state: { total, filesLength },\n    } = this;\n\n    if (total === filesLength) {\n      this.setState(\n        { files: [], filesLength: 0, total: 0, isDisabled: false },\n        setElementStyles,\n      );\n    }\n  };\n\n  /**\n   * Will read the file/s, check if multiple files can be uploaded,\n   * check for errors, if no errors then upload the file.\n   * @param {Object} files Selected files.\n   */\n  readFile = files => {\n    const {\n      setElementStyles,\n      checkFile,\n      uploadFile,\n      props: { multiple, remainingUploads },\n    } = this;\n\n    // Slice the files if more than the remaining uploads length\n    const slicedFiles = Object.keys(files)\n      .slice(0, remainingUploads)\n      .reduce((obj, value) => {\n        obj[value] = files[value];\n        return obj;\n      }, {});\n\n    this.setState(\n      {\n        errors: [],\n        isDisabled: true,\n        filesLength: Object.keys(slicedFiles).length,\n      },\n      setElementStyles,\n    );\n\n    if (multiple) {\n      Object.keys(slicedFiles).forEach(key => {\n        const file = slicedFiles[key];\n        if (checkFile(file)) {\n          uploadFile(file);\n        }\n      });\n    }\n\n    // If single file upload, upload the first file from the dropped files\n    if (!multiple && checkFile(slicedFiles[0])) {\n      uploadFile(slicedFiles[0]);\n    }\n  };\n\n  /**\n   * If disabled, then prevent all file upload events.\n   * @param {Function} fn Event function.\n   */\n  isEnabled = fn => {\n    if (this.state.isDisabled) {\n      return null;\n    }\n\n    return fn;\n  };\n\n  render = () => {\n    const {\n      onDrop,\n      onClick,\n      getFiles,\n      isEnabled,\n      onDragOver,\n      onDragLeave,\n      state: { total, errors, isDisabled, filesLength },\n      props: { multiple, remainingUploads },\n    } = this;\n\n    return (\n      <Container>\n        <Element\n          onDrop={isEnabled(onDrop)}\n          onClick={isEnabled(onClick)}\n          onDragOver={isEnabled(onDragOver)}\n          onDragLeave={isEnabled(onDragLeave)}\n          innerRef={element => {\n            this.element = element;\n          }}\n        >\n          <Text>\n            <Typography variant=\"subtitle1\">\n              {multiple\n                ? 'Drop files or click here to upload.'\n                : 'Drop a file or click here to upload.'}\n            </Typography>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={isDisabled}\n              aria-label=\"Upload Image/s\"\n              style={marginTop}\n            >\n              Upload <CloudUploadIcon className=\"icon\" />\n            </Button>\n          </Text>\n\n          <input\n            type=\"file\"\n            onChange={getFiles}\n            multiple={multiple}\n            style={{ display: 'none' }}\n            ref={element => {\n              this.input = element;\n            }}\n          />\n        </Element>\n\n        {filesLength > 0 && (\n          <LinearProgress\n            style={marginTop}\n            variant=\"determinate\"\n            value={(total / filesLength) * 100}\n          />\n        )}\n\n        {remainingUploads <= 15 && (\n          <Typography component=\"p\" style={marginTopDense}>\n            Remaining uploads: {remainingUploads}\n          </Typography>\n        )}\n\n        {errors.length > 0 && (\n          <div>\n            <Typography style={error} component=\"p\">\n              One or more files could not be uploaded.\n            </Typography>\n\n            <Typography style={error} component=\"ul\">\n              {errors.map(({ name, size, type, id }) => (\n                <Typography style={error} component=\"li\" key={id}>\n                  {name}\n                  <Typography style={error} component=\"ul\">\n                    {size && (\n                      <Typography style={error} component=\"li\">\n                        {size}\n                      </Typography>\n                    )}\n                    {type && (\n                      <Typography style={error} component=\"li\">\n                        {type}\n                      </Typography>\n                    )}\n                  </Typography>\n                </Typography>\n              ))}\n            </Typography>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default FileUpload;\n","interface FieldItem {\n  id: string;\n}\n\nexport const setItemById = (\n  multiple: boolean,\n  item: FieldItem,\n  items: Array<FieldItem>,\n): Array<FieldItem> | FieldItem => {\n  if (multiple) {\n    const index = items.findIndex(i => i.id === item.id);\n    if (index === -1) {\n      return [...items, item];\n    }\n    items[index] = item;\n    return items;\n  }\n  return item;\n};\n\nexport const getItemsAsArray = (\n  multiple: boolean,\n  items: Array<FieldItem>,\n): Array<FieldItem> => {\n  if (Array.isArray(items)) {\n    return items;\n  }\n  if (multiple) {\n    return Object.values(items);\n  }\n  return [items];\n};\n\nexport const deleteItemById = (\n  multiple: boolean,\n  id: string,\n  items: Array<FieldItem>,\n): Array<FieldItem> => {\n  if (!multiple) {\n    return [];\n  }\n\n  return items.filter(i => i.id !== id);\n};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport { css } from 'emotion';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\nimport FileUpload from '../FileUpload/FileUpload';\nimport {\n  deleteItemById,\n  getItemsAsArray,\n  setItemById,\n} from '../../../utils/api/fieldItem';\nimport api from '../../../utils/api/api';\n\nconst CardWrapper = styled('div')`\n  margin-top: 15px;\n`;\n\nconst Element = styled('div')`\n  width: 100%;\n\n  legend {\n    margin-bottom: 10px;\n  }\n\n  .remove {\n    margin-left: auto;\n  }\n`;\n\nconst Image = styled('div')`\n  > img {\n    max-width: 100px;\n    margin-right: 20px;\n  }\n`;\n\nconst styles = {\n  fullWidth: css`\n    width: 100%;\n  `,\n};\n\nclass FileUploadWidget extends React.Component {\n  state = {\n    selectedItems: null,\n  };\n\n  componentDidMount() {\n    if (\n      !this.state.selectedItems &&\n      this.props.value &&\n      this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.value &&\n      this.props.value.data &&\n      prevProps.value.data !== this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  setSelectedItems = items => {\n    this.setState(\n      {\n        selectedItems: items,\n      },\n      () => {\n        this.props.onChange({\n          data: this.state.selectedItems,\n        });\n      },\n    );\n  };\n\n  recalculateSelectedItems = () => {\n    const entityTypeId = 'file';\n    const bundle = 'file';\n\n    const multiple = this.props.schema.properties.data.type === 'array';\n    const items = getItemsAsArray(multiple, this.props.value.data);\n    const ids = items.map(({ id }) => id);\n    this.fetchEntitites(entityTypeId, bundle, ids).then(\n      ({ data: entities }) => {\n        this.setState({\n          selectedItems: entities\n            .map(({ id, attributes }, index) => ({\n              id,\n              type: 'file--file',\n              [entityTypeId]: attributes,\n              meta: items[index].meta,\n            }))\n            .reduce(\n              (agg, item) => setItemById(multiple, item, agg),\n              multiple ? [] : {},\n            ),\n        });\n      },\n    );\n  };\n\n  fetchEntitites = (entityTypeId, bundle, ids) =>\n    api(entityTypeId, {\n      queryString: {\n        filter: {\n          id: {\n            condition: {\n              operator: 'IN',\n              path: 'uuid',\n              value: ids,\n            },\n          },\n        },\n      },\n      parameters: {\n        bundle,\n      },\n    });\n\n  render() {\n    const {\n      value,\n      label,\n      bundle,\n      fieldName,\n      inputProps,\n      entityTypeId,\n      required,\n      schema: { properties, maxItems },\n      classes,\n    } = this.props;\n\n    if (this.state.selectedItems === null) {\n      return null;\n    }\n\n    // If array then allow for multiple uploads.\n    const multiple = properties.data.type === 'array';\n\n    const items = getItemsAsArray(multiple, this.state.selectedItems)\n      // Default schema creates stub entries, which we don't need here.\n      .filter(item => item.id);\n    const length = (items && items.length) || 0;\n    // maxItems is only set if array, so set to 1 as default.\n    const maxItemsCount = multiple ? maxItems || 100000000000 : 1;\n\n    return (\n      <FormControl\n        margin=\"normal\"\n        required={required}\n        classes={classes}\n        fullWidth\n      >\n        <Element>\n          <FormLabel component=\"legend\">{label}</FormLabel>\n          <div\n            className={styles.fullWidth}\n            style={{\n              display:\n                (!multiple && length) || length === maxItemsCount\n                  ? 'none'\n                  : 'block',\n            }}\n          >\n            <FileUpload\n              bundle={bundle}\n              multiple={multiple}\n              fieldName={fieldName}\n              inputProps={inputProps}\n              entityTypeId={entityTypeId}\n              remainingUploads={maxItemsCount - length}\n              onFileUpload={files => {\n                const newItems = files.reduce((itemsAgg, file) => {\n                  const item = {\n                    file: {\n                      type: 'file--file',\n                      url: file.url[0].value,\n                      id: file.uuid[0].value,\n                      filename: file.filename[0].value,\n                    },\n                    meta: { alt: '' },\n                    id: file.uuid[0].value,\n                    type: 'file--file',\n                  };\n                  return setItemById(multiple, item, itemsAgg);\n                }, items);\n\n                this.setSelectedItems(newItems);\n              }}\n            />\n          </div>\n\n          {length > 0 && (\n            <CardWrapper>\n              <Card>\n                <CardContent>\n                  <List>\n                    {items.map((item, index) => {\n                      const {\n                        id,\n                        meta: { alt },\n                        file: { url, filename },\n                      } = item;\n                      const last = items.length - 1 === index;\n\n                      return (\n                        <Fragment key={id}>\n                          <ListItem>\n                            <Image>\n                              <img\n                                alt={alt || filename}\n                                src={`${\n                                  process.env.REACT_APP_DRUPAL_BASE_URL\n                                }${url}`}\n                              />\n                            </Image>\n                            <TextField\n                              required\n                              value={alt}\n                              margin=\"normal\"\n                              label=\"Alternative text\"\n                              onChange={event =>\n                                this.setSelectedItems(\n                                  setItemById(\n                                    multiple,\n                                    {\n                                      ...item,\n                                      meta: {\n                                        alt: event.target.value,\n                                      },\n                                    },\n                                    value.data,\n                                  ),\n                                )\n                              }\n                            />\n                            <Button\n                              mini\n                              id={id}\n                              variant=\"fab\"\n                              color=\"secondary\"\n                              className=\"remove\"\n                              aria-label=\"Remove Image\"\n                              onClick={event => {\n                                this.setSelectedItems(\n                                  deleteItemById(\n                                    multiple,\n                                    event.currentTarget.id,\n                                    items,\n                                  ),\n                                );\n                              }}\n                            >\n                              <DeleteIcon />\n                            </Button>\n                          </ListItem>\n                          {!last && <Divider />}\n                        </Fragment>\n                      );\n                    })}\n                  </List>\n                </CardContent>\n              </Card>\n            </CardWrapper>\n          )}\n        </Element>\n      </FormControl>\n    );\n  }\n}\n\nconst filePropType = PropTypes.shape({\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  filename: PropTypes.string.isRequired,\n});\n\nconst fileItemMultiplePropType = PropTypes.shape({\n  id: PropTypes.toString.isRequired,\n  file: filePropType.isRequired,\n});\n\nconst fileItemSinglePropType = PropTypes.shape({\n  file: filePropType.isRequired,\n});\n\nFileUploadWidget.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.shape({\n    data: PropTypes.shape({\n      file: PropTypes.oneOfType([\n        PropTypes.arrayOf(fileItemMultiplePropType),\n        fileItemSinglePropType,\n      ]),\n      meta: PropTypes.shape({\n        alt: PropTypes.string,\n      }),\n    }),\n  }),\n  inputProps: PropTypes.shape({\n    file_extensions: PropTypes.string,\n    max_filesize: PropTypes.string,\n  }),\n  schema: PropTypes.shape({\n    maxItems: PropTypes.number,\n    properties: PropTypes.shape({\n      data: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n      }),\n    }),\n  }).isRequired,\n};\n\nFileUploadWidget.defaultProps = {\n  value: { data: { file: {}, meta: {} } },\n  inputProps: {\n    file_extensions: 'png gif jpg jpeg',\n    max_filesize: '2000000',\n  },\n};\n\nexport default FileUploadWidget;\n","import PropTypes from 'prop-types';\n\nconst lazyFunction = f => (props, propName, componentName, ...rest) =>\n  f(props, propName, componentName, ...rest);\n\nlet schemaType;\nconst lazySchemaType = lazyFunction(() => schemaType);\n\nexport default PropTypes.shape({\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  properties: PropTypes.objectOf(lazyFunction(lazySchemaType)),\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\nimport SchemaPropType from '../../05_pages/NodeForm/SchemaPropType';\n\nimport api from '../../../utils/api/api';\nimport { getItemsAsArray } from '../../../utils/api/fieldItem';\n\nconst styles = {\n  results: css`\n    position: absolute;\n    z-index: 900;\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n};\n\nclass EntityReferenceAutocomplete extends React.Component {\n  static propTypes = {\n    ...WidgetPropTypes,\n    schema: SchemaPropType.isRequired,\n    required: PropTypes.bool.isRequired,\n    inputProps: PropTypes.shape({\n      bundle: PropTypes.string,\n      type: PropTypes.string,\n    }),\n  };\n\n  static defaultProps = {\n    inputProps: {},\n  };\n\n  state = {\n    inputValue: '',\n    selectedItems: null,\n    suggestions: new Map(),\n  };\n\n  componentDidMount() {\n    if (\n      !this.state.selectedItems &&\n      this.props.value &&\n      this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.value &&\n      this.props.value.data &&\n      prevProps.value.data !== this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  getMaxItems = () => {\n    const {\n      schema: { maxItems, properties },\n    } = this.props;\n    const multiple = properties.data.type === 'array';\n    return multiple ? maxItems || 100000000000 : 1;\n  };\n\n  recalculateSelectedItems = () => {\n    const [\n      entityTypeId,\n      [bundle],\n    ] = this.determineEntityTypeAndBundlesFromSchema(this.props.schema);\n\n    const multiple = this.props.schema.properties.data.type === 'array';\n    const items = getItemsAsArray(multiple, this.props.value.data);\n    const ids = items.map(({ id }) => id);\n    this.fetchEntitites(entityTypeId, bundle, ids).then(\n      ({ data: entities }) => {\n        this.setState({\n          selectedItems: entities.map(\n            ({ id, attributes: { name: label } }) => ({\n              id,\n              label,\n              type: (\n                this.props.schema.properties.data.items ||\n                this.props.schema.properties.data\n              ).properties.type.enum[0],\n            }),\n          ),\n        });\n      },\n    );\n  };\n\n  handleChange = ({ id, label }) =>\n    this.setState(\n      ({ selectedItems }) => ({\n        inputValue: '',\n        selectedItems: {\n          ...selectedItems,\n          ...{\n            [id]: {\n              id,\n              label,\n              // Figure out a better way to handle this.\n              type: (\n                this.props.schema.properties.data.items ||\n                this.props.schema.properties.data\n              ).properties.type.enum[0],\n            },\n          },\n        },\n      }),\n      () => {\n        this.props.onChange(this.state.selectedItems);\n      },\n    );\n\n  handleInputChange = event => {\n    if (\n      this.state.selectedItems &&\n      this.getMaxItems() === Object.keys(this.state.selectedItems).length\n    ) {\n      return;\n    }\n\n    this.setState({ inputValue: event.target.value }, () => {\n      if (!this.state.inputValue.length) {\n        return;\n      }\n\n      // @todo Move this call to the mounting component?\n      const [\n        entityTypeId,\n        [bundle],\n      ] = this.determineEntityTypeAndBundlesFromSchema(this.props.schema);\n      this.fetchSuggestedEntities(\n        entityTypeId,\n        bundle,\n        this.state.inputValue,\n      ).then(({ data: items }) => {\n        this.setState({\n          suggestions: new Map(\n            items.map(({ id, attributes: { name: label } }) => [\n              id,\n              { id, label },\n            ]),\n          ),\n        });\n      });\n    });\n  };\n\n  fetchEntitites = (entityTypeId, bundle, ids) =>\n    api(entityTypeId, {\n      queryString: {\n        filter: {\n          id: {\n            condition: {\n              operator: 'IN',\n              path: 'uuid',\n              value: ids,\n            },\n          },\n        },\n      },\n      parameters: {\n        type: bundle,\n      },\n    });\n\n  fetchSuggestedEntities = (bundle, type, input) =>\n    api(bundle, {\n      queryString: {\n        filter: {\n          // @todo On the longrun fetch the label_key from the entity type\n          //   definition.\n          name: {\n            condition: {\n              path: 'name',\n              operator: 'CONTAINS',\n              value: input,\n            },\n          },\n        },\n      },\n      parameters: {\n        type,\n      },\n    });\n\n  handleKeyDown = event => {\n    const { inputValue, selectedItems } = this.state;\n    if (\n      selectedItems &&\n      selectedItems.length &&\n      !inputValue.length &&\n      keycode(event) === 'backspace'\n    ) {\n      this.setState(\n        {\n          selectedItems: selectedItems.slice(0, selectedItems.length - 1),\n        },\n        () => this.props.onChange(this.state.selectedItems),\n      );\n    }\n  };\n\n  handleDelete = id => () => {\n    this.setState(\n      state => {\n        const { selectedItems } = state;\n        delete selectedItems[id];\n        return { selectedItems };\n      },\n      () => this.props.onChange(this.state.selectedItems),\n    );\n  };\n\n  determineEntityTypeAndBundlesFromSchema = schema => {\n    // For some reason different entity references have different schema.\n    const resourceNames = (\n      schema.properties.data.items || schema.properties.data\n    ).properties.type.enum;\n    return resourceNames\n      .map(name => name.split('--'))\n      .reduce(\n        ([, bundles = []], [entityTypeId, bundle]) => [\n          entityTypeId,\n          [...bundles, entityTypeId === bundle ? undefined : bundle],\n        ],\n        [],\n      );\n  };\n\n  renderSuggestion = ({\n    suggestion,\n    index,\n    itemProps,\n    highlightedIndex,\n    selectedItem: selectedItems,\n  }) => {\n    if (\n      selectedItems &&\n      this.getMaxItems() === Object.keys(selectedItems).length\n    ) {\n      return null;\n    }\n\n    const isHighlighted = highlightedIndex === index;\n    const isSelected =\n      selectedItems && Object.keys(selectedItems).includes(suggestion.id);\n\n    return (\n      <MenuItem\n        {...itemProps}\n        key={suggestion.id}\n        selected={isHighlighted}\n        component=\"div\"\n        style={{\n          fontWeight: isSelected ? 500 : 400,\n        }}\n      >\n        {suggestion.label}\n      </MenuItem>\n    );\n  };\n\n  renderInput = ({ InputProps, ref, label, ...other }) => (\n    <TextField\n      label={label}\n      id={InputProps.id}\n      InputProps={{\n        inputRef: ref,\n        ...InputProps,\n        inputProps: {\n          autoComplete: 'off',\n        },\n      }}\n      {...other}\n    />\n  );\n\n  render() {\n    const { inputValue, selectedItems } = this.state;\n    const { fieldName } = this.props;\n    return (\n      <FormControl\n        margin=\"normal\"\n        required={this.props.required}\n        classes={this.props.classes}\n        fullWidth\n      >\n        <Downshift\n          inputValue={inputValue}\n          onChange={this.handleChange}\n          selectedItem={selectedItems}\n          itemToString={item => (item ? item.label : '')}\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            selectedItem,\n            highlightedIndex,\n          }) => (\n            <div className={styles.fullWidth}>\n              {this.renderInput({\n                fullWidth: true,\n                label: this.props.label,\n                InputProps: getInputProps({\n                  startAdornment: selectedItems\n                    ? /* eslint-disable prettier/prettier */\n                      Object.entries(selectedItems).map(([key, value]) => (\n                        <Chip\n                          key={key}\n                          tabIndex={-1}\n                          label={value.label}\n                          className=\"chip\"\n                          onDelete={this.handleDelete(key)}\n                        />\n                      ))\n                    : [],\n                  /* eslint-enable prettier/prettier */\n                  onChange: this.handleInputChange,\n                  onKeyDown: this.handleKeyDown,\n                  placeholder: '',\n                  id: fieldName,\n                }),\n              })}\n              {isOpen ? (\n                <Paper\n                  className={`${styles.results} ${styles.fullWidth}`}\n                  square\n                >\n                  {!!this.state.inputValue.length &&\n                    Array.from(this.state.suggestions.values()).map(\n                      (suggestion, index) =>\n                        this.renderSuggestion({\n                          suggestion,\n                          index,\n                          itemProps: getItemProps({ item: suggestion }),\n                          highlightedIndex,\n                          selectedItem,\n                        }),\n                    )}\n                </Paper>\n              ) : null}\n            </div>\n          )}\n        </Downshift>\n      </FormControl>\n    );\n  }\n}\n\nexport default EntityReferenceAutocomplete;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport RichTextEditor from 'react-rte';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nlet styles;\n\n/**\n * Some basic wysiwyg editor based upon react-rte which is based upon draft.js.\n * This was designed to be as easiest as possible for the demo.\n *\n * On the longrun we might want to switch back to ckeditor.\n */\nclass TextTextarea extends React.Component {\n  static propTypes = {\n    ...WidgetPropTypes,\n    value: PropTypes.oneOfType([\n      PropTypes.shape({\n        value: PropTypes.string.isRequired,\n      }),\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          value: PropTypes.string.isRequired,\n        }),\n      ),\n    ]),\n  };\n\n  static defaultProps = {\n    value: {\n      value: '',\n      format: 'basic_html',\n    },\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  createValueFromString = props =>\n    RichTextEditor.createValueFromString(\n      // @todo This should not be needed after https://github.com/jsdrupal/drupal-admin-ui/issues/195\n      (Array.isArray(props.value) &&\n        props.value.length &&\n        props.value[0].value) ||\n        props.value.value ||\n        '',\n      'html',\n    );\n\n  extractValueString = props =>\n    (Array.isArray(props.value) &&\n      props.value.length &&\n      props.value[0].value) ||\n    props.value.value ||\n    '';\n\n  state = {\n    value: this.createValueFromString(this.props),\n    valueString: this.extractValueString(this.props),\n  };\n\n  componentDidUpdate = prevProps => {\n    if (\n      this.props.value.value !== prevProps.value.value &&\n      this.extractValueString(this.props) !== this.state.valueString\n    ) {\n      this.setState({\n        value: this.createValueFromString(this.props),\n      });\n    }\n  };\n\n  onChange = value => {\n    const valueString = value.toString('html');\n    this.setState({ value, valueString }, () => {\n      // Send the changes up to the parent component as an HTML string.\n      // This is here to demonstrate using `.toString()` but in a real app it\n      // would be better to avoid generating a string on each change.\n      this.props.onChange({\n        value: valueString,\n        format: 'basic_html',\n      });\n    });\n  };\n\n  render() {\n    return (\n      <FormControl margin=\"normal\" fullWidth required={this.props.required}>\n        <FormLabel classes={{ root: styles.label }}>\n          {this.props.label}\n        </FormLabel>\n        <RichTextEditor\n          className={styles.container}\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n      </FormControl>\n    );\n  }\n}\n\nstyles = {\n  container: css`\n    .public-DraftEditor-content {\n      min-height: 110px;\n    }\n  `,\n  label: css`\n    margin-bottom: 10px;\n  `,\n};\n\nexport default TextTextarea;\n","import OptionsSelect from '../../02_atoms/Widgets/OptionsSelect';\nimport NumberTextfield from '../../02_atoms/Widgets/NumberTextfield';\nimport StringTextfield from '../../02_atoms/Widgets/StringTextfield';\nimport BooleanCheckbox from '../../02_atoms/Widgets/BooleanCheckbox';\nimport DatetimeTimestamp from '../../02_atoms/Widgets/DatetimeTimestamp';\nimport FileUploadWidget from '../../02_atoms/Widgets/FileUploadWidget';\nimport EntityReferenceAutocomplete from '../../02_atoms/Widgets/EntityReferenceAutocomplete';\nimport TextTextarea from '../../02_atoms/Widgets/TextTextarea';\n\n// @todo How do we do extensibility from modules, maybe a build step?\nconst widgets = {\n  options_select: {\n    component: OptionsSelect,\n  },\n  number: {\n    component: NumberTextfield,\n  },\n  string: {\n    component: StringTextfield,\n  },\n  boolean_checkbox: {\n    component: BooleanCheckbox,\n  },\n  datetime_timestamp: {\n    component: DatetimeTimestamp,\n  },\n  image_image: {\n    component: FileUploadWidget,\n    multiple: true,\n  },\n  entity_reference_autocomplete: {\n    component: EntityReferenceAutocomplete,\n    multiple: true,\n  },\n  text_textarea: {\n    component: TextTextarea,\n  },\n};\n\nexport default widgets;\n","import { call, put, select, takeLatest, takeEvery } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport { ApiError } from '@drupal/admin-ui-utilities';\nimport api from '../utils/api/api';\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_SUCCESS,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_WARNING,\n} from '../constants/messages';\nimport widgets from '../components/05_pages/NodeForm/Widgets';\n\nexport const OPEN_DRAWER = 'OPEN_DRAWER';\nexport const openDrawer = () => ({\n  type: OPEN_DRAWER,\n});\n\nexport const CLOSE_DRAWER = 'CLOSE_DRAWER';\nexport const closeDrawer = () => ({\n  type: CLOSE_DRAWER,\n});\n\nexport const SET_MESSAGE = 'SET_MESSAGE';\n\n/**\n *\n * @param {string} message - the message content\n * @param {string} severity - the severity level of the message, one of the levels\n *  listed at constants/messages.js\n * @returns {{type: string, payload: {message: *, messageSeverity: *}}}\n */\nexport const setMessage = (message, messageSeverity) => ({\n  type: SET_MESSAGE,\n  payload: {\n    message,\n    messageSeverity,\n  },\n});\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_ERROR}}}\n */\nexport const setErrorMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_ERROR);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_SUCCESS}}}\n */\nexport const setSuccessMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_SUCCESS);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_INFO}}}\n */\nexport const setInfoMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_INFO);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_WARNING}}}\n */\nexport const setWarningMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_WARNING);\n\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\nexport const clearMessage = key => ({\n  type: CLEAR_MESSAGE,\n  payload: {\n    key,\n  },\n});\n\nexport const CLEAR_ALL_MESSAGES = 'CLEAR_MESSAGES';\nexport const clearAllMessages = () => ({\n  type: CLEAR_ALL_MESSAGES,\n  payload: {},\n});\n\nexport const MENU_REQUESTED = 'MENU_REQUESTED';\nexport const requestMenu = () => ({\n  type: MENU_REQUESTED,\n  payload: {},\n});\n\nexport const MENU_LOADED = 'MENU_LOADED';\nfunction* loadMenu() {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const menuLinks = yield call(api, 'menu');\n\n    yield put({\n      type: MENU_LOADED,\n      payload: {\n        menuLinks,\n      },\n    });\n  } catch (error) {\n    if (process.env.REACT_APP_DRUPAL_BASE_URL.includes('localhost')) {\n      yield put(\n        setErrorMessage(\n          'Unable to access data from Drupal. Did you set REACT_APP_DRUPAL_BASE_URL to localhost instead of 127.0.0.1?',\n        ),\n      );\n    }\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\n/**\n * Gets all available content types.\n */\nexport const CONTENT_TYPES_REQUESTED = 'CONTENT_TYPES_REQUESTED';\nexport const requestContentTypes = () => ({\n  type: CONTENT_TYPES_REQUESTED,\n  payload: {},\n});\n\nexport const contentTypesSelector = state => state.application.contentTypes;\nexport const CONTENT_TYPES_LOADED = 'CONTENT_TYPES_LOADED';\nfunction* loadContentTypes() {\n  try {\n    const contentTypes = yield call(api, 'contentTypes');\n    yield put({\n      type: CONTENT_TYPES_LOADED,\n      payload: {\n        contentTypes,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\n/**\n * Gets all available action types.\n */\nexport const ACTIONS_REQUESTED = 'ACTIONS_REQUESTED';\nexport const requestActions = () => ({\n  type: ACTIONS_REQUESTED,\n  payload: {},\n});\n\nexport const getActionsCache = state => state.application.actions;\nexport const ACTIONS_LOADED = 'ACTIONS_LOADED';\nfunction* loadActions() {\n  try {\n    let actions = { data: yield select(getActionsCache) };\n    if (!Object.keys(actions.data).length) {\n      actions = yield call(api, 'actions');\n    }\n    yield put({\n      type: ACTIONS_LOADED,\n      payload: {\n        actions,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  }\n}\n\nexport const COMPONENT_LIST_REQUESTED = 'COMPONENT_LIST_REQUESTED';\nexport const requestComponentList = () => ({\n  type: COMPONENT_LIST_REQUESTED,\n  payload: {},\n});\n\nexport const COMPONENT_LIST_LOADED = 'COMPONENT_LIST_LOADED';\n\nfunction* loadComponentList() {\n  try {\n    const components = yield call(api, 'admin_ui_components');\n    yield put({\n      type: COMPONENT_LIST_LOADED,\n      payload: {\n        components: {\n          ...components,\n          widgets: {\n            ...components.widgets,\n            ...widgets,\n          },\n        },\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  }\n}\n\nexport default function* watchApplication() {\n  yield takeLatest(MENU_REQUESTED, loadMenu);\n  yield takeLatest(CONTENT_TYPES_REQUESTED, loadContentTypes);\n  yield takeEvery(ACTIONS_REQUESTED, loadActions);\n  yield takeLatest(COMPONENT_LIST_REQUESTED, loadComponentList);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport { css } from 'emotion';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  title: css`\n    margin: 10px 3px 40px;\n  `,\n};\n\nconst PageTitle = ({ children }) => (\n  <Typography variant=\"h4\" classes={{ root: styles.title }}>\n    {children}\n  </Typography>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst reducePropsToState = propsList => {\n  const innermostProps = propsList[propsList.length - 1];\n  if (innermostProps) {\n    return innermostProps.children;\n  }\n\n  return null;\n};\n\n/**\n * Set the title of the page based on the children of PageTitle.\n *\n * @param  {(String|Array)} title\n *   Title may be an array if the number children is > 1\n */\nconst handleStateChangeOnClient = title => {\n  document.title = (Array.isArray(title) ? title : [title])\n    .map(e => (e && typeof e === 'string' ? e.trim() : ''))\n    .join(' ');\n};\n\nexport default withSideEffect(reducePropsToState, handleStateChangeOnClient)(\n  PageTitle,\n);\n","import PageTitle from './PageTitle';\n\nexport default PageTitle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Markup } from 'interweave';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PageTitle from '../../02_atoms/PageTitle';\n\nconst styles = {\n  menuLink: css`\n    text-decoration: inherit;\n  `,\n  root: css`\n    margin-bottom: 50px;\n  `,\n};\n\nexport default class extends Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    requestContentTypes: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.requestContentTypes();\n  }\n\n  render = () => (\n    <div className={styles.root}>\n      <PageTitle>Add content</PageTitle>\n      <Paper>\n        <List data-nightwatch=\"node-type-list\">\n          {Object.keys(this.props.contentTypes).map(contentType => (\n            <ListItem component=\"li\" key={`node-add-${contentType}`}>\n              <Link className={styles.menuLink} to={`/node/add/${contentType}`}>\n                <ListItemText\n                  primary={this.props.contentTypes[contentType].name}\n                  secondary={\n                    <Markup\n                      content={this.props.contentTypes[contentType].description}\n                    />\n                  }\n                />\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport { requestContentTypes } from '../../../actions/application';\n\nimport AddContent from './AddContent';\n\nconst mapStateToProps = state => ({\n  contentTypes: state.application.contentTypes,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestContentTypes },\n)(AddContent);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\n/* A Drupal specific button, for use in the operations column of a table.\n *\n * Typically a Add, Edit or Delete icon can be provided as a child element\n * see for example  '@material-ui/icons/Add'\n *\n * When pressed a modal dialog slides up into view.\n */\nclass OpsModalButton extends React.Component {\n  static propTypes = {\n    /**\n     * The dialog title.\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * The text below the dialog title.\n     */\n    text: PropTypes.string.isRequired,\n    /**\n     * The confirm button label.\n     */\n    confirmText: PropTypes.string.isRequired,\n    /**\n     * The cancel button label.\n     */\n    cancelText: PropTypes.string.isRequired,\n    /**\n     * Children of the button.\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * Called when the confirm button is pressed.\n     */\n    enterAction: PropTypes.func.isRequired,\n  };\n\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    // Pass all props except those consumed here down into the button.\n    const {\n      title,\n      text,\n      cancelText,\n      confirmText,\n      enterAction,\n      ...buttonProps\n    } = this.props;\n\n    return (\n      <Fragment>\n        <IconButton {...buttonProps} onClick={this.handleClickOpen}>\n          {this.props.children}\n        </IconButton>\n        <Dialog\n          open={this.state.open}\n          TransitionComponent={Transition}\n          onClose={this.handleClose}\n        >\n          <DialogTitle>{title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>{text}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                enterAction();\n                this.handleClose();\n              }}\n              color=\"primary\"\n            >\n              {confirmText}\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              {cancelText}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default OpsModalButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MessageSave = ({ bundle, title, nid }) => (\n  <Fragment>\n    <p>\n      {bundle} <Link to={`/node/${nid}`}>{title}</Link> has been updated\n    </p>\n  </Fragment>\n);\n\nMessageSave.propTypes = {\n  bundle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  nid: PropTypes.number.isRequired,\n};\n\nexport default MessageSave;\n","export const extractContentType = content =>\n  content && content.type && content.type.substring('node--'.length);\n\nexport const mapContentTypeToName = (contentTypes, contentType) =>\n  contentTypes &&\n  contentType &&\n  contentTypes[contentType] &&\n  contentTypes[contentType].name;\n\nexport const cleanupRelationships = ({ relationships, ...rest }) => ({\n  ...rest,\n  relationships: Object.entries(relationships).reduce((acc, cur) => {\n    const [key, { data: relationshipData }] = cur;\n    if (\n      typeof relationshipData === 'object' &&\n      relationshipData.id &&\n      relationshipData.type &&\n      relationshipData.id !== '' &&\n      relationshipData.type !== ''\n    ) {\n      acc[key] = { data: relationshipData };\n    }\n    if (Array.isArray(relationshipData) && relationshipData.length) {\n      acc[key] = { data: relationshipData };\n    }\n    return acc;\n  }, {}),\n});\n","import React from 'react';\nimport {\n  put,\n  call,\n  takeLatest,\n  takeEvery,\n  select,\n  all,\n} from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport { push } from 'react-router-redux';\nimport { ApiError } from '@drupal/admin-ui-utilities';\n\nimport api from '../utils/api/api';\nimport {\n  contentTypesSelector,\n  setErrorMessage,\n  setSuccessMessage,\n  requestContentTypes,\n} from './application';\n\nimport MessageSave from '../components/01_subatomics/MessageHelpers/MessageSave';\nimport { extractContentType, mapContentTypeToName } from '../utils/api/content';\n\nexport const CONTENT_REQUESTED = 'CONTENT_REQUESTED';\nexport const requestContent = (\n  options = { contentTypes: [], status: null },\n) => ({\n  type: CONTENT_REQUESTED,\n  payload: { options },\n});\n\nexport const CONTENT_LOADED = 'CONTENT_LOADED';\nfunction* loadContent(action) {\n  const title =\n    (action.payload.options && action.payload.options.title) || null;\n  const contentTypes =\n    (action.payload.options && action.payload.options.contentTypes) || [];\n  const status =\n    (action.payload.options && action.payload.options.status) || null;\n  const sort = (action.payload.options && action.payload.options.sort) || null;\n  const page = (action.payload.options && action.payload.options.page) || null;\n\n  try {\n    yield put(showLoading());\n\n    const queryString = {\n      filter: {},\n    };\n\n    if (page) {\n      const { offset, limit } = page;\n      queryString.page = { offset, limit };\n    }\n\n    if (sort) {\n      const { path, direction } = sort;\n      queryString.sort = `${(direction === 'DESC' && '-') || ''}${path}`;\n    }\n\n    if (title && title.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        title: {\n          path: 'title',\n          operator: 'CONTAINS',\n          value: title,\n        },\n      };\n    }\n    if (contentTypes.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        typeGroup: { group: { conjunction: 'OR' } },\n        typearticle: {},\n        typepage: {},\n        ...contentTypes.reduce(\n          (accumulator, contentType) => ({\n            ...accumulator,\n            [`type${contentType}`]: {\n              condition: {\n                value: contentType,\n                path: 'type',\n                memberOf: 'typeGroup',\n              },\n            },\n          }),\n          {},\n        ),\n      };\n    }\n    if (status && status.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        status: {\n          value: status === 'published' ? 1 : 0,\n        },\n      };\n    }\n\n    queryString.include = 'uid';\n\n    // Unset this, otherwise it'll send 'filter=' to JSON:API and cause an error.\n    if (!Object.keys(queryString.filter).length) {\n      delete queryString.filter;\n    }\n\n    const contentList = yield call(api, 'content', { queryString });\n    yield put({\n      type: CONTENT_LOADED,\n      payload: {\n        contentList,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const CONTENT_SINGLE_REQUESTED = 'CONTENT_SINGLE_REQUESTED';\nexport const requestSingleContent = nid => ({\n  type: CONTENT_SINGLE_REQUESTED,\n  payload: { nid },\n});\n\nexport const CONTENT_SINGLE_LOADED = 'CONTENT_SINGLE_LOADED';\nfunction* loadSingleContent(action) {\n  const {\n    payload: { nid },\n  } = action;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const {\n      data: [content],\n    } = yield call(api, 'content', {\n      queryString: {\n        filter: { condition: { path: 'nid', value: nid } },\n      },\n    });\n\n    yield put({\n      type: CONTENT_SINGLE_LOADED,\n      payload: {\n        content,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const CONTENT_ADD_CHANGE = 'CONTENT_ADD_CHANGE';\nexport const contentAddChange = (bundle, entity) => ({\n  type: CONTENT_ADD_CHANGE,\n  payload: { bundle, entity },\n});\n\nexport const CONTENT_EDIT_CHANGE = 'CONTENT_EDIT_CHANGE';\nexport const contentEditChange = (bundle, entity) => ({\n  type: CONTENT_EDIT_CHANGE,\n  payload: { bundle, entity },\n});\n\nexport const CONTENT_SAVE = 'CONTENT_SAVE';\nexport const contentSave = content => ({\n  type: CONTENT_SAVE,\n  payload: {\n    content,\n  },\n});\n\nexport const CONTENT_ADD = 'CONTENT_ADD';\nexport const contentAdd = (content, bundle) => ({\n  type: CONTENT_ADD,\n  payload: {\n    content,\n    bundle,\n  },\n});\n\nexport const CONTENT_DELETE = 'CONTENT_DELETE';\nexport const contentDelete = content => ({\n  type: CONTENT_DELETE,\n  payload: {\n    content,\n  },\n});\n\nexport const ACTION_EXECUTE = 'ACTION_EXECUTE';\nexport const actionExecute = (action, nids) => ({\n  type: ACTION_EXECUTE,\n  payload: {\n    action,\n    nids,\n  },\n});\n\nexport const SUPPORTED_ACTIONS = [\n  'entity:delete_action:node',\n  'node_make_sticky_action',\n  'node_make_unsticky_action',\n  'node_promote_action',\n  'entity:publish_action:node',\n  'node_unpromote_action',\n  'entity:unpublish_action:node',\n];\n\n// @todo How do we update the store with the new values of the nodes\n//    or the deleted nodes, see https://github.com/jsdrupal/drupal-admin-ui/issues/131\n// @todo Once jsonapi supports bulk operations, leverage it.\nexport function* executeAction({ payload: { action, nids } }) {\n  try {\n    const contentList = yield select(state => state.content.contentList);\n    const actions = nids\n      .map(nid => {\n        const node = contentList.filter(\n          contentItem => String(contentItem.attributes.nid) === nid,\n        )[0];\n\n        let saveAction;\n        switch (action.attributes.plugin) {\n          case 'entity:delete_action:node':\n            saveAction = put(contentDelete(node));\n            break;\n          case 'node_make_sticky_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  sticky: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_make_unsticky_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  sticky: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_promote_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  promote: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_unpromote_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  promote: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'entity:publish_action:node':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  status: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'entity:unpublish_action:node':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  status: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          default:\n            break;\n        }\n        return saveAction;\n      })\n      .filter(x => x);\n    yield all(actions);\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* saveContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const [\n      {\n        data: {\n          attributes: { title, nid },\n        },\n      },\n    ] = yield all([\n      api('node:save', { parameters: { node: content } }),\n      put(requestContentTypes()),\n    ]);\n\n    // Get the content types from the redux state\n    const contentTypes = yield select(contentTypesSelector);\n    // Extract the content type from the content data\n    const contentType = extractContentType(content);\n\n    // Map the content type to the human-readable name\n    const contentTypeName =\n      mapContentTypeToName(contentTypes, contentType) || 'unknown';\n\n    yield put(\n      setSuccessMessage(\n        <MessageSave bundle={contentTypeName} title={title} nid={nid} />,\n      ),\n    );\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* addContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    yield all([\n      call(api, 'node:add', { parameters: { node: content } }),\n      put(requestContentTypes()),\n    ]);\n\n    // Get the content types from the redux state\n    const contentTypes = yield select(contentTypesSelector);\n    // Extract the content type from the content data\n    const contentType = extractContentType(content);\n    // Map the content type to the human-readable name\n    const contentName =\n      mapContentTypeToName(contentTypes, contentType) || 'unknown';\n\n    yield put(push('/admin/content'));\n    yield put(setSuccessMessage(`New ${contentName} added successfully`));\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* deleteContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    yield call(api, 'node:delete', { parameters: { node: content } });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const USER_REQUESTED = 'USER_REQUESTED';\nexport const requestUser = uid => ({\n  type: USER_REQUESTED,\n  payload: { uid },\n});\n\nexport const USER_LOADED = 'USER_LOADED';\nfunction* loadUser(action) {\n  const {\n    payload: { uid },\n  } = action;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const {\n      data: [user],\n    } = yield call(api, 'user', {\n      queryString: {\n        filter: { condition: { path: 'uid', value: uid } },\n      },\n    });\n\n    yield put({\n      type: USER_LOADED,\n      payload: {\n        user,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(CONTENT_REQUESTED, loadContent);\n  yield takeEvery(CONTENT_SAVE, saveContent);\n  yield takeLatest(CONTENT_SINGLE_REQUESTED, loadSingleContent);\n  yield takeEvery(ACTION_EXECUTE, executeAction);\n  yield takeLatest(CONTENT_ADD, addContent);\n  yield takeEvery(CONTENT_DELETE, deleteContent);\n  yield takeLatest(USER_REQUESTED, loadUser);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\nimport { connect } from 'react-redux';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport OpsModalButton from '../../02_atoms/OpsModalButton/OpsModalButton';\n\nimport { contentDelete } from '../../../actions/content';\n\nconst styles = {\n  noContentMessage: css`\n    padding: 0 1.5rem 1.5rem;\n  `,\n};\n\nclass ContentTable extends React.Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    contentList: PropTypes.arrayOf(PropTypes.object).isRequired,\n    contentDelete: PropTypes.func.isRequired,\n    pageChangeHandler: PropTypes.func.isRequired,\n    tableSortHandler: PropTypes.func.isRequired,\n    setChecked: PropTypes.func.isRequired,\n    includes: PropTypes.shape({\n      'user--user': PropTypes.object,\n    }).isRequired,\n    links: PropTypes.shape({\n      next: PropTypes.string,\n    }).isRequired,\n    page: PropTypes.shape({\n      offset: PropTypes.number.isRequired,\n      limit: PropTypes.number.isRequired,\n    }).isRequired,\n    sort: PropTypes.shape({\n      path: PropTypes.string.isRequired,\n      direction: PropTypes.oneOf(['DESC', 'ASC']).isRequired,\n    }).isRequired,\n    checked: PropTypes.objectOf(PropTypes.bool).isRequired,\n  };\n\n  selectAll(checked) {\n    this.props.setChecked(\n      (checked &&\n        this.props.contentList\n          .map(({ attributes: { nid } }) => nid)\n          .reduce(\n            (acc, cur) => ({\n              ...acc,\n              [cur]: true,\n            }),\n            {},\n          )) ||\n        {},\n    );\n  }\n\n  render() {\n    const {\n      links,\n      contentList,\n      page: { offset, limit },\n    } = this.props;\n    // Calculate the highest known count.\n    const count = offset + contentList.length + (links.next ? 1 : 0);\n\n    return (\n      <div\n        ref={node => {\n          this.table = node;\n        }}\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    id=\"selectAll\"\n                    onChange={(event, checked) => this.selectAll(checked)}\n                    inputProps={{ 'aria-label': 'select all content' }}\n                  />\n                </TableCell>\n              }\n              {[\n                { key: 'title', label: 'Title', sortable: true },\n                {\n                  key: 'type',\n                  label: 'Content Type',\n                  sortable: true,\n                },\n                this.props.includes['user--user']\n                  ? {\n                      key: 'author',\n                      label: 'Author',\n                      sortable: false,\n                    }\n                  : undefined,\n                { key: 'status', label: 'Status', sortable: true },\n                { key: 'changed', label: 'Updated', sortable: true },\n                {\n                  key: 'operations',\n                  label: 'Operations',\n                  sortable: false,\n                },\n              ]\n                .filter(x => x)\n                .map(({ key, label, sortable }) =>\n                  sortable ? (\n                    <TableCell key={key}>\n                      <TableSortLabel\n                        direction={\n                          this.props.sort.path === key\n                            ? this.props.sort.direction.toLowerCase()\n                            : undefined\n                        }\n                        active={this.props.sort.path === key}\n                        onClick={this.props.tableSortHandler(\n                          key,\n                          (this.props.sort.path !== key && 'DESC') ||\n                            ((this.props.sort.direction === 'DESC' && 'ASC') ||\n                              'DESC'),\n                        )}\n                      >\n                        {label}\n                      </TableSortLabel>\n                    </TableCell>\n                  ) : (\n                    <TableCell key={key}>{label}</TableCell>\n                  ),\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.contentList.map(node => {\n              const {\n                type,\n                attributes: { changed, nid, status, title },\n                relationships,\n              } = node;\n              const rowSelectId = `row-select-for-${String(nid)}`;\n              return (\n                <TableRow key={nid}>\n                  {\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={rowSelectId}\n                        value={String(nid)}\n                        onChange={(event, checked) => {\n                          this.props.setChecked(\n                            (() => {\n                              // Clone the object to not change the props directly.\n                              const nextChecked = JSON.parse(\n                                JSON.stringify(this.props.checked),\n                              );\n                              nextChecked[nid] = checked;\n                              return nextChecked;\n                            })(),\n                          );\n                        }}\n                        checked={this.props.checked[nid] || false}\n                      />\n                    </TableCell>\n                  }\n                  <TableCell>\n                    <Link to={`/node/${nid}`}>\n                      <label htmlFor={rowSelectId}>{title}</label>\n                    </Link>\n                  </TableCell>\n                  <TableCell>{this.props.contentTypes[type].name}</TableCell>\n                  {this.props.includes['user--user'] && (\n                    <TableCell>\n                      {this.props.includes['user--user'][\n                        relationships.uid.data.id\n                      ] ? (\n                        <Link\n                          to={`/user/${\n                            this.props.includes['user--user'][\n                              relationships.uid.data.id\n                            ].attributes.uid\n                          }`}\n                        >\n                          {\n                            this.props.includes['user--user'][\n                              relationships.uid.data.id\n                            ].attributes.name\n                          }\n                        </Link>\n                      ) : (\n                        'Anonymous (not verified)'\n                      )}\n                    </TableCell>\n                  )}\n                  <TableCell>\n                    {(status && 'Published') || 'Unpublished'}\n                  </TableCell>\n                  <TableCell>\n                    {new Intl.DateTimeFormat(navigator.language, {\n                      weekday: 'long',\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric',\n                      hour: 'numeric',\n                      minute: 'numeric',\n                    }).format(new Date(changed * 1000))}\n                  </TableCell>\n                  <TableCell style={{ whiteSpace: 'nowrap' }}>\n                    <IconButton\n                      aria-label=\"edit\"\n                      className={styles.button}\n                      component={Link}\n                      data-nightwatch={`Edit ${title}`}\n                      to={`/node/${nid}/edit`}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <OpsModalButton\n                      aria-label=\"delete\"\n                      className={styles.button}\n                      title={`Are you sure that you want to delete this content ${title}?`}\n                      text=\"This action cannot be undone.\"\n                      cancelText=\"Cancel\"\n                      confirmText=\"Delete\"\n                      enterAction={() => {\n                        this.props.contentDelete(node);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </OpsModalButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={count}\n          rowsPerPage={limit}\n          page={offset / limit}\n          onChangePage={this.props.pageChangeHandler}\n          rowsPerPageOptions={[limit]}\n          labelDisplayedRows={({ page }) => `Page: ${page + 1}`}\n          nextIconButtonProps={{ 'aria-label': 'Next content page.' }}\n          backIconButtonProps={{\n            'aria-label': 'Previous content page.',\n          }}\n        />\n        {!this.props.contentList.length && (\n          <Typography className={styles.noContentMessage}>\n            There is no content yet. {<Link to=\"/node/add\">Add one</Link>}.\n          </Typography>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { contentDelete },\n)(ContentTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  dialogActionName: css`\n    text-transform: lowercase;\n  `,\n  listItemText: css`\n    list-style-type: disc;\n    display: list-item;\n  `,\n};\n\nconst ConfirmationDialog = ({\n  action,\n  actions,\n  checked,\n  contentList,\n  dialogVisibility,\n  handleClose,\n  executeAction,\n}) => {\n  const actionLabel = actions\n    .filter(({ attributes: { id } }) => id === action)\n    .map(({ attributes: { label } }) => label)\n    .shift();\n  return (\n    <Dialog\n      open={dialogVisibility}\n      TransitionComponent={props => <Slide direction=\"up\" {...props} />}\n      onClose={handleClose}\n    >\n      <DialogTitle>\n        Are you sure you want to apply the &quot;\n        <span className={styles.dialogActionName}>{actionLabel}</span>\n        &quot; action to these content items?\n      </DialogTitle>\n      <DialogContent>\n        <List>\n          {contentList\n            .filter(({ attributes: { nid } }) =>\n              Object.keys(checked).includes(`${nid}`),\n            )\n            .map(({ attributes: { title, nid } }) => (\n              <ListItem key={nid}>\n                <ListItemText className={styles.listItemText}>\n                  {`${title}`}\n                </ListItemText>\n              </ListItem>\n            ))}\n        </List>\n        <Typography>This action cannot be undone.</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            executeAction();\n            handleClose();\n          }}\n          color=\"primary\"\n        >\n          {actionLabel}\n        </Button>\n        <Button onClick={handleClose} color=\"primary\">\n          <p>Cancel</p>\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nConfirmationDialog.propTypes = {\n  action: PropTypes.string.isRequired,\n  actions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  checked: PropTypes.objectOf(PropTypes.bool).isRequired,\n  contentList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  dialogVisibility: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  executeAction: PropTypes.func.isRequired,\n};\n\nexport default ConfirmationDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport PageTitle from '../../02_atoms/PageTitle';\nimport ContentTable from '../../04_templates/ContentTable/ContentTable';\n\nimport ConfirmationDialog from './ConfirmationDialog';\n\nimport {\n  requestContentTypes,\n  requestActions,\n} from '../../../actions/application';\nimport {\n  requestContent,\n  SUPPORTED_ACTIONS,\n  actionExecute,\n} from '../../../actions/content';\n\nconst styles = {\n  root: css`\n    margin-bottom: 50px;\n  `,\n  addButton: css`\n    margin: 0.5rem;\n    position: fixed;\n    right: 0;\n    bottom: 0;\n  `,\n  action: css`\n    margin: 0.5rem;\n    margin-left: 0rem;\n    min-width: 8rem;\n    max-width: 19rem;\n  `,\n  formControl: css`\n    margin: 0.5rem;\n    min-width: 8rem;\n    max-width: 19rem;\n  `,\n  chips: css`\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  chip: css`\n    margin: 0.5rem;\n  `,\n  selectEmpty: css`\n    margin-top: 0.5rem;\n  `,\n  button: css`\n    margin: 0.5rem;\n  `,\n  filters: css`\n    padding: 0 1.5rem;\n  `,\n  noContentMessage: css`\n    padding: 0 1.5rem 1.5rem;\n  `,\n  textField: css`\n    width: 300px;\n  `,\n};\n\nclass Content extends Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    requestContent: PropTypes.func.isRequired,\n    requestContentTypes: PropTypes.func.isRequired,\n    contentList: PropTypes.arrayOf(PropTypes.object),\n    requestActions: PropTypes.func.isRequired,\n    actionExecute: PropTypes.func.isRequired,\n    actions: PropTypes.arrayOf(PropTypes.object),\n    includes: PropTypes.shape({\n      'user--user': PropTypes.object,\n    }),\n    links: PropTypes.shape({\n      next: PropTypes.string,\n    }),\n  };\n\n  static defaultProps = {\n    contentList: [],\n    includes: {},\n    actions: [],\n    links: {},\n  };\n\n  state = {\n    contentTypes: [],\n    status: null,\n    sort: { path: 'changed', direction: 'DESC' },\n    page: {\n      offset: 0,\n      limit: 50,\n    },\n    action: null,\n    checked: {},\n    dialogVisibility: false,\n  };\n\n  componentDidMount() {\n    this.props.requestContentTypes();\n    this.props.requestContent(this.state);\n    this.props.requestActions();\n  }\n\n  dialogOpen = () => this.setState({ dialogVisibility: true });\n\n  dialogClose = () =>\n    this.setState({ dialogVisibility: false, action: null, checked: {} });\n\n  executeAction = () => {\n    const matchingAction = this.props.actions.filter(\n      action => action.attributes.id === this.state.action,\n    )[0];\n    this.props.actionExecute(matchingAction, Object.keys(this.state.checked));\n    this.setState({ checked: {}, action: null });\n  };\n\n  tableSortHandler = (path, direction) => () => {\n    this.setState(\n      prevState => ({\n        sort: { path, direction },\n        page: { offset: 0, limit: prevState.page.limit },\n      }),\n      () => {\n        this.props.requestContent(this.state);\n      },\n    );\n  };\n\n  pageChangeHandler = (event, page) => {\n    this.setState(\n      ({ page: { limit } }) => ({\n        page: { offset: page * limit, limit },\n      }),\n      () => {\n        this.props.requestContent(this.state);\n      },\n    );\n  };\n\n  render = () => (\n    <div className={styles.root}>\n      <PageTitle>Content</PageTitle>\n      <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n      <Paper>\n        {this.props.contentTypes && this.props.actions && (\n          <Fragment>\n            <div className={styles.filters}>\n              {this.props.contentTypes && this.props.actions && (\n                <Fragment>\n                  <TextField\n                    inputProps={{ 'aria-label': 'Title' }}\n                    label=\"Title\"\n                    placeholder=\"Title\"\n                    className={styles.textField}\n                    onChange={e => {\n                      this.setState({ title: e.target.value }, () => {\n                        this.props.requestContent(this.state);\n                      });\n                    }}\n                    margin=\"normal\"\n                  />\n\n                  <FormControl className={styles.formControl}>\n                    <InputLabel htmlFor=\"select-multiple-checkbox\">\n                      Content Type\n                    </InputLabel>\n                    <Select\n                      multiple\n                      value={this.state.contentTypes}\n                      data-nightwatch=\"content-type-select\"\n                      onChange={e => {\n                        this.setState({ contentTypes: e.target.value }, () => {\n                          this.props.requestContent(this.state);\n                        });\n                      }}\n                      input={\n                        <Input\n                          name=\"content-type\"\n                          id=\"select-multiple-checkbox\"\n                        />\n                      }\n                      renderValue={selected => (\n                        <div className={styles.chips}>\n                          {selected.map(value => (\n                            <Chip\n                              key={value}\n                              label={this.props.contentTypes[value].name}\n                              className={styles.chip}\n                            />\n                          ))}\n                        </div>\n                      )}\n                    >\n                      {Object.keys(this.props.contentTypes).map(type => (\n                        <MenuItem key={type} value={type}>\n                          <Checkbox\n                            checked={this.state.contentTypes.indexOf(type) > -1}\n                          />\n                          <ListItemText\n                            primary={this.props.contentTypes[type].name}\n                          />\n                        </MenuItem>\n                      ))}\n                    </Select>\n                  </FormControl>\n\n                  <FormControl className={styles.formControl}>\n                    <InputLabel htmlFor=\"status\">Status</InputLabel>\n                    <Select\n                      value={this.state.status || ''}\n                      onChange={e => {\n                        this.setState({ status: e.target.value }, () => {\n                          this.props.requestContent(this.state);\n                        });\n                      }}\n                      input={<Input name=\"status\" id=\"status\" />}\n                      autoWidth\n                    >\n                      <MenuItem value=\"\">\n                        <em>Any</em>\n                      </MenuItem>\n                      <MenuItem value=\"published\">Published</MenuItem>\n                      <MenuItem value=\"unpublished\">Unpublished</MenuItem>\n                    </Select>\n                  </FormControl>\n\n                  <div>\n                    <FormControl\n                      className={styles.action}\n                      disabled={\n                        Object.values(this.state.checked).filter(Boolean)\n                          .length === 0 || false\n                      }\n                    >\n                      <InputLabel htmlFor=\"action\">Actions</InputLabel>\n                      <Select\n                        value={this.state.action || ''}\n                        onChange={e => {\n                          this.setState({ action: e.target.value });\n                        }}\n                        input={<Input name=\"action\" id=\"action\" />}\n                        autoWidth\n                      >\n                        <MenuItem value=\"\">\n                          <em>None</em>\n                        </MenuItem>\n                        {this.props.actions.map(action => (\n                          <MenuItem\n                            key={action.id}\n                            value={action.attributes.id}\n                          >\n                            {action.attributes.label}\n                          </MenuItem>\n                        ))}\n                      </Select>\n                    </FormControl>\n\n                    {this.state.action &&\n                      Object.values(this.state.checked).filter(Boolean)\n                        .length !== 0 && (\n                        <Fragment>\n                          <Button\n                            // onClick={this.executeAction}\n                            onClick={this.dialogOpen}\n                            color=\"primary\"\n                            variant=\"contained\"\n                          >\n                            Apply\n                          </Button>\n                          <ConfirmationDialog\n                            action={this.state.action}\n                            actions={this.props.actions}\n                            checked={this.state.checked}\n                            contentList={this.props.contentList}\n                            dialogVisibility={this.state.dialogVisibility}\n                            handleClose={this.dialogClose}\n                            executeAction={this.executeAction}\n                          />\n                        </Fragment>\n                      )}\n                  </div>\n                </Fragment>\n              )}\n\n              <Button\n                variant=\"fab\"\n                color=\"primary\"\n                aria-label=\"add\"\n                className={styles.addButton}\n                component={Link}\n                to=\"/node/add\"\n              >\n                <AddIcon />\n              </Button>\n            </div>\n            <ContentTable\n              pageChangeHandler={this.pageChangeHandler}\n              tableSortHandler={this.tableSortHandler}\n              links={this.props.links}\n              contentList={this.props.contentList}\n              page={this.state.page}\n              includes={this.props.includes}\n              sort={this.state.sort}\n              contentTypes={this.props.contentTypes}\n              checked={this.state.checked}\n              setChecked={values => {\n                this.setState({ checked: values });\n              }}\n            />\n          </Fragment>\n        )}\n      </Paper>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contentTypes: state.application.contentTypes,\n  contentList: state.content.contentList,\n  includes: state.content.includes,\n  links: state.content.links,\n  actions: state.application.actions.filter(action =>\n    SUPPORTED_ACTIONS.includes(action.attributes.plugin),\n  ),\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    requestActions,\n    requestContentTypes,\n    requestContent,\n    actionExecute,\n  },\n)(Content);\n","import React from 'react';\nimport { css, keyframes } from 'emotion';\n\nlet rotate = null;\nlet styles;\n\nconst Loading = () => (\n  <div className={styles.wrap}>\n    <span className={styles.peace} role=\"img\" aria-label=\"Peace Sign\">\n      ✌\n    </span>\n  </div>\n);\n\nrotate = keyframes`\n  from {\n    transform: rotate(-10deg);\n  }\n  to {\n    transform: rotate(10deg);\n  }\n`;\n\nstyles = {\n  wrap: css`\n    margin: 100px auto 0;\n  `,\n  peace: css`\n    display: inline-block;\n    vertical-align: middle;\n    animation-direction: alternate;\n    animation-iteration-count: infinite;\n    animation-duration: 0.5s;\n    animation-timing-function: cubic-bezier(0, 0, 1, 1);\n    transform-origin: bottom;\n    font-size: 50px;\n    animation-name: ${rotate};\n  `,\n};\n\nexport default Loading;\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport PropTypes from 'prop-types';\n\nlet styles;\n\nconst TABLE = ({ children, ...props }) => (\n  <table className={styles.table} {...props}>\n    {children}\n  </table>\n);\nTABLE.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst TR = ({ children, ...props }) => <tr {...props}>{children}</tr>;\nTR.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst TD = ({ children, ...props }) => <td {...props}>{children}</td>;\nTD.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst THEAD = ({ data }) => (\n  <thead>\n    <TR className={styles.tr}>\n      {data.map(label => (\n        <TD className={styles.td} key={`column-${label}`}>\n          {label}\n        </TD>\n      ))}\n    </TR>\n  </thead>\n);\nTHEAD.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst TBODY = ({ rows }) => (\n  <tbody className={styles.tbody}>\n    {rows.map(({ colspan, tds, key }) => (\n      <TR key={key} className={styles.tr}>\n        {tds.map(([tdKey, tdValue, tdClassName]) => (\n          <TD\n            className={cx(styles.td, tdClassName || '')}\n            key={tdKey}\n            colSpan={colspan || undefined}\n          >\n            {tdValue}\n          </TD>\n        ))}\n      </TR>\n    ))}\n  </tbody>\n);\nTBODY.propTypes = {\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      colspan: PropTypes.number,\n      key: PropTypes.string,\n      tds: PropTypes.arrayOf(PropTypes.node).isRequired,\n    }),\n  ).isRequired,\n};\n\nstyles = {\n  thead: css``,\n  tbody: css`\n    tr:hover,\n    tr:focus {\n      background: #f7fcff;\n    }\n  `,\n  tr: css`\n    border-bottom: 1px solid #c7c7c7;\n  `,\n  td: css`\n    padding: 10px 12px;\n    text-align: left;\n  `,\n};\n\nexport { TR, TD, TABLE as Table, TBODY as TBody, THEAD as THead };\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport makeCancelable from 'makecancelable';\nimport { Markup } from 'interweave';\nimport { css } from 'emotion';\nimport { StickyContainer, Sticky } from 'react-sticky';\n\nimport Loading from '../../02_atoms/Loading/Loading';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nimport api from '../../../utils/api/api';\nimport { MESSAGE_SEVERITY_SUCCESS } from '../../../constants/messages';\nimport { setMessage, clearMessage } from '../../../actions/application';\n\nexport const filterPermissions = (input, permissions) =>\n  permissions.filter(\n    ({ title, description, provider, provider_label: providerLabel }) =>\n      `${title}${description}${provider}${providerLabel}`\n        .toLowerCase()\n        .includes(input.toLowerCase()),\n  );\n\nlet styles;\n\nconst Permissions = class Permissions extends Component {\n  static propTypes = {\n    setMessage: PropTypes.func.isRequired,\n    clearMessage: PropTypes.func.isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        role: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    loaded: false,\n    rawPermissions: [],\n    renderablePermissions: [],\n    working: false,\n  };\n\n  componentDidMount() {\n    this.cancelFetch = this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.cancelFetch();\n  }\n\n  onPermissionCheck = (roleName, permission) => {\n    this.setState(prevState => ({\n      changedRoles: [...new Set(prevState.changedRoles).add(roleName).values()],\n      roles: this.togglePermission(permission, roleName, prevState.roles),\n    }));\n    this.props.clearMessage();\n  };\n\n  fetchData = () =>\n    makeCancelable(\n      Promise.all([api('permissions'), api('roles')])\n        .then(([permissions, { data: roles }]) =>\n          this.setState({\n            rawPermissions: permissions,\n            renderablePermissions: permissions,\n            changedRoles: [],\n            working: false,\n            // Move admin roles to the right.\n            roles:\n              this.props.match.params.role &&\n              roles\n                .map(role => role.attributes.id)\n                .includes(this.props.match.params.role)\n                ? roles.filter(\n                    role => role.attributes.id === this.props.match.params.role,\n                  )\n                : roles.sort((a, b) => {\n                    if (a.attributes.is_admin && b.attributes.is_admin) {\n                      return a.attributes.id - b.attributes.id;\n                    }\n                    if (a.attributes.is_admin) {\n                      return 1;\n                    }\n                    if (b.attributes.is_admin) {\n                      return -1;\n                    }\n                    return a.attributes.id - b.attributes.id;\n                  }),\n            loaded: true,\n          }),\n        )\n        .catch(err => this.setState({ loaded: false, err })),\n    );\n\n  togglePermission = (permission, roleName, roles) => {\n    const roleIndex = roles.map(role => role.attributes.id).indexOf(roleName);\n    const role = roles[roleIndex];\n    const index = role.attributes.permissions.indexOf(permission);\n    if (index !== -1) {\n      role.attributes.permissions.splice(index, 1);\n    } else {\n      role.attributes.permissions.push(permission);\n    }\n    roles[roleIndex] = role;\n    return roles;\n  };\n\n  groupPermissions = permissions =>\n    Object.entries(\n      permissions.reduce((acc, cur) => {\n        acc[cur.provider] = acc[cur.provider] || {\n          providerLabel: cur.provider_label,\n          permissions: [],\n        };\n        acc[cur.provider].permissions.push(cur);\n        return acc;\n      }, {}),\n    );\n\n  createTableRows = (groupedPermissions, roles) =>\n    [].concat(\n      ...groupedPermissions.map(\n        ([providerMachineName, { providerLabel, permissions }]) => [\n          {\n            key: `permissionGroup-${providerMachineName}`,\n            colspan: roles.length + 1,\n            tds: [[`td-${providerMachineName}`, <b>{providerLabel}</b>]],\n          },\n          ...permissions.map(permission => ({\n            key: `permissionGroup-${providerMachineName}-${permission.title}`,\n            tds: [\n              [\n                `td-${providerMachineName}-${permission.title}`,\n                <Fragment>\n                  <Markup content={permission.title} />\n                  {permission['restrict access'] && (\n                    <span>\n                      <em>\n                        {' '}\n                        Warning: Give to trusted roles only; this permission has\n                        security implications.{' '}\n                      </em>\n                    </span>\n                  )}\n                  {permission.description && (\n                    <Markup content={` ${permission.description}`} />\n                  )}\n                </Fragment>,\n                css`\n                  padding: 0 0 0 30px;\n                `,\n              ],\n              ...roles.map(({ attributes }, index) => [\n                `td-${providerMachineName}-${permission.title}-${index}-cb`,\n                attributes.is_admin && attributes.id === 'administrator' ? (\n                  <input type=\"checkbox\" checked disabled />\n                ) : (\n                  <input\n                    type=\"checkbox\"\n                    onChange={() =>\n                      this.onPermissionCheck(attributes.id, permission.id)\n                    }\n                    checked={attributes.permissions.includes(permission.id)}\n                  />\n                ),\n              ]),\n            ],\n          })),\n        ],\n      ),\n    );\n\n  handleKeyPress = event => {\n    const input = event.target.value;\n    this.setState(prevState => ({\n      ...prevState,\n      renderablePermissions: filterPermissions(input, prevState.rawPermissions),\n    }));\n  };\n\n  saveRoles = () => {\n    this.setState(\n      prevState => ({ ...prevState, working: true }),\n      () =>\n        Promise.all(\n          this.state.roles\n            .filter(role =>\n              this.state.changedRoles.includes(role.attributes.id),\n            )\n            .map(role =>\n              api('role:patch', {\n                parameters: {\n                  role,\n                },\n              }).then(() => {\n                this.props.setMessage(\n                  'Changes have been saved',\n                  MESSAGE_SEVERITY_SUCCESS,\n                );\n              }),\n            ),\n        ).then(() => {\n          this.cancelFetch = this.fetchData();\n        }),\n    );\n  };\n\n  render() {\n    if (this.state.err) {\n      throw new Error('Error while loading page');\n    } else if (!this.state.loaded) {\n      return <Loading />;\n    }\n    return (\n      <StickyContainer>\n        <Sticky>\n          {({ style }) => (\n            <div style={style} className={styles.stickyBar}>\n              <input\n                type=\"text\"\n                className={styles.searchInput}\n                placeholder=\"Filter by name, description or module\"\n                onChange={this.handleKeyPress}\n                onKeyDown={this.handleKeyPress}\n              />\n              <button\n                type=\"submit\"\n                key=\"button-save-roles\"\n                onClick={this.saveRoles}\n                className={styles.saveButton}\n                disabled={\n                  !this.state.changedRoles.length ||\n                  (this.state.working && this.state.changedRoles.length)\n                }\n              >\n                Save\n              </button>\n            </div>\n          )}\n        </Sticky>\n        <Table>\n          <THead\n            data={[\n              'Permission',\n              ...this.state.roles.map(({ attributes: { label } }) => label),\n            ]}\n          />\n          <TBody\n            rows={this.createTableRows(\n              this.groupPermissions(this.state.renderablePermissions),\n              this.state.roles,\n            )}\n          />\n        </Table>\n      </StickyContainer>\n    );\n  }\n};\n\nstyles = {\n  stickyBar: css`\n    padding: 1.5rem 0;\n    background: #fff;\n    border-bottom: 1px solid #e6e6e6;\n  `,\n  saveButton: css`\n    float: right;\n    color: #333;\n    background-color: #fff;\n    display: inline-block;\n    padding: 6px 12px;\n    margin-bottom: 0;\n    text-align: center;\n    vertical-align: middle;\n    touch-action: manipulation;\n    cursor: pointer;\n    user-select: none;\n    background-image: none;\n    border: 1px solid #ccc;\n  `,\n  searchInput: css`\n    color: #555;\n    width: 400px;\n    padding: 6px 12px;\n    border: 1px solid #ccc;\n    background-color: #fff;\n  `,\n};\n\nexport default connect(\n  null,\n  { setMessage, clearMessage },\n)(Permissions);\n","import {\n  put,\n  call,\n  takeLatest,\n  race,\n  take,\n  cancelled,\n} from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport { ApiError } from '@drupal/admin-ui-utilities';\nimport api from '../utils/api/api';\n\nimport { setErrorMessage } from './application';\n\nexport const ROLES_REQUESTED = 'ROLES_REQUESTED';\nexport const requestRoles = () => ({\n  type: ROLES_REQUESTED,\n  payload: {},\n});\n\nexport const ROLES_LOADED = 'ROLES_LOADED';\nfunction* loadRoles() {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const roles = yield call(api, 'roles');\n    yield put({\n      type: ROLES_LOADED,\n      payload: {\n        roles,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n    if (yield cancelled()) {\n      // do a thing\n    }\n  }\n}\n\nexport const watchRequestedRolesWithCancel = function* watchRequestedRoles() {\n  const { cancel } = yield race({\n    task: takeLatest(ROLES_REQUESTED, loadRoles),\n    cancel: take('CANCEL_TASK'),\n  });\n  if (cancel) {\n    // do a thing.\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport { requestRoles } from '../../../actions/roles';\nimport { cancelTask } from '../../../actions/helpers';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nexport const Roles = class Roles extends Component {\n  componentDidMount() {\n    this.props.requestRoles();\n  }\n\n  componentWillUnmount() {\n    this.props.cancelTask();\n  }\n\n  createTableRows = roles =>\n    roles.map(({ attributes: { label, id } }) => ({\n      key: `row-${label}`,\n      tds: [\n        [`td-${label}`, label],\n        [\n          `td-${label}-actions`,\n          <Link to={`/admin/people/permissions/${id}`}>Edit Permissions</Link>,\n        ],\n      ],\n    }));\n\n  render = () => {\n    if (!this.props.roles) {\n      return <LoadingBar />;\n    }\n    return (\n      <Table>\n        <THead data={['NAME', 'OPERATIONS']} />\n        <TBody rows={this.createTableRows(this.props.roles)} />\n      </Table>\n    );\n  };\n};\n\nRoles.propTypes = {\n  requestRoles: PropTypes.func.isRequired,\n  cancelTask: PropTypes.func.isRequired,\n  roles: PropTypes.arrayOf(PropTypes.object),\n};\n\nRoles.defaultProps = {\n  roles: [],\n};\n\nconst mapStateToProps = ({ application: { roles } }) => ({\n  roles,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestRoles, cancelTask },\n)(Roles);\n","import ConnectedRoles from './Roles';\n\nexport default ConnectedRoles;\n","export const CANCEL_TASK = 'CANCEL_TASK';\nexport const cancelTask = () => ({\n  type: CANCEL_TASK,\n  payload: {},\n});\n","import { put, call, takeLatest } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport { ApiError } from '@drupal/admin-ui-utilities';\n\nimport api from '../utils/api/api';\nimport { setErrorMessage } from './application';\n\nexport const DBLOG_COLLECTION_REQUEST = 'DBLOG_COLLECTION_REQUEST';\nexport const requestDblogCollection = options => ({\n  type: DBLOG_COLLECTION_REQUEST,\n  payload: { options },\n});\n\nexport const DBLOG_FILTER_UPDATED = 'DBLOG_FILTER_UPDATED';\n\nexport const DBLOG_COLLECTION_LOADED = 'DBLOG_COLLECTION_LOADED';\nexport function* loadDblog({ payload: { options } }) {\n  try {\n    const queryString = {\n      sort: options.sort || '',\n      page: {\n        limit: 50,\n        ...(options.offset\n          ? {\n              offset: options.offset,\n            }\n          : {}),\n      },\n      filter: {\n        ...(options.types && Object.keys(options.types).length\n          ? options.types.reduce(\n              (acc, cur) => ({\n                ...acc,\n                [`type${cur}`]: {\n                  condition: {\n                    value: cur,\n                    path: 'type',\n                    memberOf: 'typeGroup',\n                  },\n                },\n              }),\n              { typeGroup: { group: { conjunction: 'OR' } } },\n            )\n          : {}),\n        ...(options.severities && Object.keys(options.severities).length\n          ? options.severities.reduce(\n              (acc, cur) => ({\n                ...acc,\n                [`severity${cur}`]: {\n                  condition: {\n                    value: cur,\n                    path: 'severity',\n                    memberOf: 'severityGroup',\n                  },\n                },\n              }),\n              {\n                severityGroup: {\n                  group: {\n                    conjunction: 'OR',\n                  },\n                },\n              },\n            )\n          : {}),\n      },\n    };\n    yield put(resetLoading());\n    yield put(showLoading());\n    yield put({\n      type: DBLOG_FILTER_UPDATED,\n      payload: {\n        options,\n      },\n    });\n    const dbLogEntriesTypes = yield call(api, 'dblog:types');\n    const dbLogEntries = yield call(api, 'dblog', { queryString });\n    yield put({\n      type: DBLOG_COLLECTION_LOADED,\n      payload: {\n        dbLogEntries,\n        dbLogEntriesTypes,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield call(ApiError.errorToHumanString, error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const watchDblogRequests = function* watchDblogRequests() {\n  yield takeLatest(DBLOG_COLLECTION_REQUEST, loadDblog);\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { Markup } from 'interweave';\n\nimport { requestDblogCollection } from '../../../actions/reports';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nclass Dblog extends Component {\n  static propTypes = {\n    requestDblogCollection: PropTypes.func.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        wid: PropTypes.number.isRequired,\n        messageFormattedPlain: PropTypes.string.isRequired,\n        timestamp: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      }),\n    ),\n    availableTypes: PropTypes.arrayOf(PropTypes.string),\n    filterOptions: PropTypes.shape({\n      sort: PropTypes.string,\n      severities: PropTypes.arrayOf(PropTypes.string),\n      offset: PropTypes.number,\n      types: PropTypes.arrayOf(PropTypes.string),\n    }),\n    next: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    entries: null,\n    availableTypes: null,\n    filterOptions: {\n      sort: '',\n      severities: [],\n    },\n    next: true,\n  };\n\n  componentDidMount() {\n    this.props.requestDblogCollection({\n      ...this.props.filterOptions,\n      sort: '-timestamp',\n    });\n  }\n\n  generateTableRows = entries =>\n    entries.map(({ wid, type, messageFormattedPlain, timestamp }) => ({\n      key: String(wid),\n      tds: [\n        [`type-${wid}`, type],\n        [`timestamp-${wid}`, timestamp],\n        [\n          `markup-${wid}`,\n          <Markup\n            content={`${\n              messageFormattedPlain.length > 48\n                ? `${messageFormattedPlain.substring(0, 48)}…`\n                : messageFormattedPlain\n            }`}\n          />,\n        ],\n        [`user-${wid}`, ''],\n      ],\n    }));\n\n  severityFilterHandler = e =>\n    this.props.requestDblogCollection({\n      types: null,\n      offset: 0,\n      ...this.props.filterOptions,\n      severities: Array.from(e.target.options)\n        .filter(option => option.selected)\n        .map(option => option.value),\n    });\n\n  typeFilterHandler = e =>\n    this.props.requestDblogCollection({\n      severities: null,\n      offset: 0,\n      ...this.props.filterOptions,\n      types: Array.from(e.target.options)\n        .filter(option => option.selected)\n        .map(option => option.value),\n    });\n\n  nextPage = () =>\n    this.props.requestDblogCollection({\n      severities: null,\n      ...this.props.filterOptions,\n      offset: (this.props.filterOptions.offset || 0) + 50,\n    });\n\n  previousPage = () =>\n    this.props.requestDblogCollection({\n      severities: null,\n      ...this.props.filterOptions,\n      offset: (this.props.filterOptions.offset || 0) - 50,\n    });\n\n  render() {\n    if (!this.props.entries) {\n      return <LoadingBar />;\n    }\n    return (\n      <Fragment>\n        <select\n          key=\"select-type\"\n          label=\"Type\"\n          multiple\n          size={this.props.availableTypes.length}\n          onBlur={this.typeFilterHandler}\n          selected={this.props.filterOptions.types}\n        >\n          {this.props.availableTypes.map(type => (\n            <option value={type} key={type}>\n              {type}\n            </option>\n          ))}\n        </select>\n        <select\n          key=\"select-severity\"\n          label=\"Severity\"\n          multiple\n          size={8}\n          onBlur={this.severityFilterHandler}\n          selected={this.props.filterOptions.severities}\n        >\n          {[\n            'Emergency',\n            'Alert',\n            'Critical',\n            'Error',\n            'Warning',\n            'Notice',\n            'Info',\n            'Debug',\n          ].map((value, index) => (\n            <option value={index} key={value}>\n              {value}\n            </option>\n          ))}\n        </select>\n        <button\n          type=\"button\"\n          onClick={this.previousPage}\n          disabled={this.props.filterOptions.offset <= 0}\n        >\n          prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.nextPage}\n          disabled={!this.props.next}\n        >\n          next\n        </button>\n        <Table>\n          <THead data={['Type', 'Date', 'Message', 'User']} />\n          <TBody rows={this.generateTableRows(this.props.entries)} />\n        </Table>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ application: { dblog } }) => ({\n  filterOptions: {\n    offset: 0,\n  },\n  ...dblog,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestDblogCollection },\n)(Dblog);\n","const createEntity = schema => {\n  if (typeof schema.default !== 'undefined') {\n    return schema.default;\n  }\n  switch (schema.type) {\n    case 'object':\n      return Object.entries(schema.properties).reduce(\n        (agg, [key, value]) => ({\n          ...agg,\n          [key]: createEntity(value),\n        }),\n        {},\n      );\n    case 'array':\n      return [];\n    case 'string':\n      return '';\n    case 'number':\n      return 0.0;\n    case 'integer':\n      return 0;\n    case 'boolean':\n      return true;\n    case 'language_reference':\n      return null;\n    default:\n      throw new Error('Unhandled case');\n  }\n};\n\nconst createUISchema = (\n  fieldSchema,\n  formDisplaySchema,\n  fieldStorageConfig,\n  widgets,\n) =>\n  Array.from(\n    new Set([...Object.keys(fieldSchema), ...Object.keys(formDisplaySchema)]),\n  )\n    .filter(\n      fieldName =>\n        Object.keys(widgets).filter(name =>\n          formDisplaySchema[fieldName].type.startsWith(name),\n        ).length,\n    )\n    .sort((a, b) => formDisplaySchema[a].weight - formDisplaySchema[b].weight)\n    .reduce((acc, currentFieldName) => {\n      const widgetName = Object.keys(widgets)\n        .filter(name =>\n          formDisplaySchema[currentFieldName].type.startsWith(name),\n        )\n        .shift();\n\n      const widget = {\n        ...widgets[widgetName],\n        name: widgetName,\n      };\n      const fieldStorageSettings = fieldStorageConfig\n        .filter(\n          ({ attributes: { field_name: fieldName } }) =>\n            fieldName === currentFieldName,\n        )\n        .shift();\n      const inputProps = {\n        ...(Object.prototype.hasOwnProperty.call(fieldSchema, currentFieldName)\n          ? fieldSchema[currentFieldName].attributes.settings\n          : {}),\n        ...(Object.prototype.hasOwnProperty.call(\n          formDisplaySchema,\n          currentFieldName,\n        )\n          ? formDisplaySchema[currentFieldName].settings\n          : {}),\n        ...(fieldStorageSettings\n          ? fieldStorageSettings.attributes.settings\n          : {}),\n      };\n      acc.push({\n        fieldName: currentFieldName,\n        constraints: [],\n        widget,\n        inputProps,\n      });\n      return acc;\n    }, []);\n\nconst sortUISchemaFields = (schema, secondaryColumnFields) =>\n  schema.reduce(\n    (acc, curr) => {\n      acc[\n        (secondaryColumnFields.includes(curr.fieldName) && 'right') || 'left'\n      ].push(curr);\n      return acc;\n    },\n    { right: [], left: [] },\n  );\n\nexport { createEntity, createUISchema, sortUISchemaFields };\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport List from '@material-ui/core/List';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { createEntity } from '../../../utils/api/schema';\nimport SchemaPropType from '../../05_pages/NodeForm/SchemaPropType';\n\nconst Add = styled('div')`\n  .icon {\n    margin-left: 10px;\n  }\n`;\n\nconst style = {\n  ListItemStyles: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  ListItemIconStyles: {\n    cursor: 'move',\n    margin: '0 0 0 16px',\n  },\n};\n\nclass MultipleFields extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    component: PropTypes.func.isRequired,\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    schema: SchemaPropType.isRequired,\n  };\n\n  /**\n   * Initial state\n   */\n  state = {\n    handle: null,\n    currentIndex: -1,\n    newItemAdded: false,\n  };\n\n  /**\n   * Sets the state handle with the handle target.\n   * @param {Event} event\n   */\n  onMouseDown = event => {\n    this.setState({\n      handle: event.currentTarget,\n    });\n  };\n\n  /**\n   * Sets the state value with the selected element.\n   * @param {Event} event\n   */\n  onDragStart = event => {\n    const {\n      props: { value },\n      state: { handle },\n    } = this;\n\n    // Don't allow dragging if not handle or only one item in props.value\n    if (!event.target.contains(handle) || value.length === 1) {\n      event.preventDefault();\n      return;\n    }\n    // setData needed for FireFox, needs to setData to work\n    event.dataTransfer.setData('text', '');\n    event.dataTransfer.effectAllowed = 'move';\n    const currentIndex = parseInt(event.currentTarget.dataset.key, 10);\n\n    this.setState({\n      currentIndex,\n    });\n  };\n\n  /**\n   * Changes the current value with the value that is under the\n   * current value, and replace the over value with the current\n   * value.\n   * @param {Event} event\n   */\n  onDragOver = event => {\n    event.preventDefault();\n    const {\n      props: { value },\n      state: { currentIndex },\n    } = this;\n\n    const overIndex = parseInt(event.currentTarget.dataset.key, 10);\n    if (currentIndex !== overIndex) {\n      const selectedValue = value[currentIndex];\n      // Changes the two values with one another\n      value[currentIndex] = value[overIndex];\n      value[overIndex] = selectedValue;\n\n      this.setState({\n        currentIndex: overIndex,\n      });\n    }\n  };\n\n  /**\n   * Will update the state and call the onChange method\n   * once the element has been reordered.\n   */\n  onDragEnd = () => {\n    const { value, onChange } = this.props;\n    this.setState(\n      {\n        handle: null,\n        currentIndex: -1,\n      },\n      () => {\n        onChange(value);\n      },\n    );\n  };\n\n  /**\n   * Updated the current value of the input.\n   * @param {Event} event\n   * @param {String} value\n   */\n  changeItem = index => value => {\n    const { value: propsValue, onChange } = this.props;\n    const newValue = [...propsValue];\n    newValue[index] = value;\n    onChange(newValue);\n  };\n\n  /**\n   * Adds another empty string to the current set of values.\n   */\n  addAnotherItem = () => {\n    const { value, onChange } = this.props;\n    const newValue = [...value, ''];\n    this.setState(\n      {\n        newItemAdded: true,\n      },\n      () => {\n        onChange(newValue);\n      },\n    );\n  };\n\n  createEmptyItem() {\n    return createEntity(this.props.schema.items);\n  }\n\n  render = () => {\n    const {\n      onDragEnd,\n      changeItem,\n      onDragOver,\n      onDragLeave,\n      onDragStart,\n      onMouseDown,\n      addAnotherItem,\n      state: { newItemAdded },\n      props: { label, value: values, component, onChange },\n    } = this;\n\n    // values && values.length is to validate the object is not null and not an empty array, respectively\n    // the last `&& values` is to make sure after validation, it always return `values`  instead of `values.length`\n    const usedValues = (values && values.length && values) || [\n      this.createEmptyItem(),\n    ];\n    return (\n      <FormControl margin=\"normal\" fullWidth>\n        <FormLabel component=\"legend\">{label}</FormLabel>\n        <List>\n          {usedValues &&\n            usedValues.map((value, index) => (\n              <ListItem\n                draggable\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                data-key={index}\n                onDragEnd={onDragEnd}\n                onDragOver={onDragOver}\n                onDragLeave={onDragLeave}\n                onDragStart={onDragStart}\n                style={style.ListItemStyles}\n              >\n                <ListItemIcon\n                  onMouseDown={onMouseDown}\n                  style={style.ListItemIconStyles}\n                >\n                  <ReorderIcon />\n                </ListItemIcon>\n                <ListItemText>\n                  {React.createElement(component, {\n                    ...this.props,\n                    value,\n                    label: '', // Enforce a hidden label\n                    onChange: changeItem(index),\n                    autoFocus: newItemAdded && index + 1 === values.length,\n                  })}\n                </ListItemText>\n                <Fragment>\n                  <Button\n                    mini\n                    variant=\"fab\"\n                    color=\"secondary\"\n                    className=\"remove\"\n                    aria-label=\"Remove Image\"\n                    onClick={() => {\n                      if (values.length > 1) {\n                        values.splice(index, 1);\n                        onChange(values);\n                      }\n                    }}\n                  >\n                    <DeleteIcon />\n                  </Button>\n                </Fragment>\n              </ListItem>\n            ))}\n        </List>\n        <Add>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={addAnotherItem}\n            aria-label=\"Add another item\"\n          >\n            Add another item\n            <AddIcon />\n          </Button>\n        </Add>\n      </FormControl>\n    );\n  };\n}\n\nexport default MultipleFields;\n","import { put, call, takeLatest, all } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport { ApiError } from '@drupal/admin-ui-utilities';\n\nimport api from '../utils/api/api';\nimport { setErrorMessage } from './application';\n\nexport const UI_SCHEMA_REQUESTED = 'UI_SCHEMA_REQUESTED';\nexport const requestUiSchema = ({ entityTypeId, bundle }) => ({\n  type: UI_SCHEMA_REQUESTED,\n  payload: { entityTypeId, bundle },\n});\n\nexport const UI_SCHEMA_LOADED = 'UI_SCHEMA_LOADED';\nfunction* loadUiSchema(action) {\n  const { entityTypeId, bundle } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const [\n      { data: fieldSchema },\n      { data: formDisplaySchema },\n      { data: fieldStorageConfig },\n    ] = yield all([\n      api('field_schema', {\n        queryString: {\n          filter: { entity_type: entityTypeId, bundle },\n        },\n      }),\n      api('form_display', {\n        queryString: {\n          filter: { targetEntityType: entityTypeId, bundle, mode: 'default' },\n        },\n      }),\n      api('field_storage_config', {\n        queryString: {\n          filter: { condition: { path: 'entity_type', value: entityTypeId } },\n        },\n      }),\n    ]);\n\n    yield put({\n      type: UI_SCHEMA_LOADED,\n      payload: {\n        entityTypeId,\n        bundle,\n        fieldSchema,\n        formDisplaySchema,\n        fieldStorageConfig,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const SCHEMA_REQUESTED = 'SCHEMA_REQUESTED';\nexport const requestSchema = ({ entityTypeId, bundle }) => ({\n  type: SCHEMA_REQUESTED,\n  payload: { entityTypeId, bundle },\n});\n\nexport const SCHEMA_LOADED = 'SCHEMA_LOADED';\nfunction* loadSchema(action) {\n  const { entityTypeId, bundle } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const entitySchema = yield call(api, 'schema', {\n      parameters: { entityTypeId, bundle },\n      queryString: { _describes: 'api_json', _format: 'schema_json' },\n    });\n\n    yield put({\n      type: SCHEMA_LOADED,\n      payload: {\n        entityTypeId,\n        bundle,\n        entitySchema,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const SCHEMA_BY_ENTITY_ID_REQUESTED = 'SCHEMA_BY_ENTITY_ID_REQUESTED';\nexport const requestSchemaByEntityId = ({ entityTypeId, entityId }) => ({\n  type: SCHEMA_BY_ENTITY_ID_REQUESTED,\n  payload: { entityTypeId, entityId },\n});\n\nexport const SCHEMA_BY_ENTITY_ID_LOADED = 'SCHEMA_BY_ENTITY_ID_LOADED';\nfunction* loadSchemaByEntityId(action) {\n  const { entityTypeId, entityId } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const entitySchema = yield call(api, 'schema_by_id', {\n      parameters: { entityTypeId, entityId },\n    });\n\n    yield put({\n      type: SCHEMA_BY_ENTITY_ID_LOADED,\n      payload: {\n        entityTypeId,\n        entityId,\n        entitySchema,\n      },\n    });\n  } catch (error) {\n    yield put(setErrorMessage(error.toString()));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(SCHEMA_REQUESTED, loadSchema);\n  yield takeLatest(SCHEMA_BY_ENTITY_ID_REQUESTED, loadSchemaByEntityId);\n  yield takeLatest(UI_SCHEMA_REQUESTED, loadUiSchema);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport SchemaPropType from './SchemaPropType';\n\nimport MultipleFields from '../../02_atoms/MultipleFields/MultipleFields';\n\nimport { contentAdd } from '../../../actions/content';\nimport { requestUiSchema } from '../../../actions/schema';\nimport {\n  requestComponentList,\n  setErrorMessage,\n} from '../../../actions/application';\n\nimport { createUISchema, sortUISchemaFields } from '../../../utils/api/schema';\nimport EnsureComponent from '../../02_atoms/EnsureComponent/EnsureComponent';\n\nlet styles;\n\nclass NodeForm extends React.Component {\n  static propTypes = {\n    schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n    onSave: PropTypes.func.isRequired,\n    entityTypeId: PropTypes.string.isRequired,\n    bundle: PropTypes.string.isRequired,\n    requestUiSchema: PropTypes.func.isRequired,\n    uiSchema: PropTypes.oneOfType([\n      PropTypes.shape({\n        fieldSchema: PropTypes.shape({}),\n        formDisplaySchema: PropTypes.shape({}),\n      }),\n      PropTypes.bool,\n    ]),\n    restorableEntity: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      attributes: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n      }).isRequired,\n    }),\n    setErrorMessage: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n    requestComponentList: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    schema: false,\n    uiSchema: false,\n    restorableEntity: null,\n    onChange: () => {},\n  };\n\n  state = {\n    restored: false,\n  };\n\n  componentDidMount() {\n    this.props.requestUiSchema({\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n    });\n\n    this.calculateState(this.props, this.state, state => this.setState(state));\n    this.props.requestComponentList();\n  }\n\n  componentDidUpdate() {\n    this.calculateState(this.props, this.state, state => this.setState(state));\n  }\n\n  onAttributeChange = fieldName => data => {\n    this.setState(\n      prevState => ({\n        entity: {\n          ...prevState.entity,\n          attributes: {\n            ...prevState.entity.attributes,\n            [fieldName]: data,\n          },\n        },\n      }),\n      () => this.props.onChange(this.props.bundle, this.state.entity),\n    );\n  };\n\n  onSave = () => {\n    const missingFields = this.resolveMissingRequiredFields();\n    if (missingFields.length) {\n      this.props.setErrorMessage(\n        missingFields.length > 1\n          ? `The following fields are missing, ${missingFields.join(', ')}.`\n          : `The following field is missing, ${missingFields.join('')}.`,\n      );\n    } else {\n      this.props.onSave(this.state.entity);\n    }\n  };\n\n  onRelationshipChange = fieldName => data => {\n    // Support widgets with multiple cardinality.\n    const fieldData = Object.values(data);\n    this.setState(\n      prevState => ({\n        entity: {\n          ...prevState.entity,\n          relationships: {\n            ...prevState.entity.relationships,\n            [fieldName]: fieldData,\n          },\n        },\n      }),\n      () => this.props.onChange(this.props.bundle, this.state.entity),\n    );\n  };\n\n  getSchemaInfo = (schema, fieldName) =>\n    schema.properties.attributes.properties[fieldName] ||\n    schema.properties.relationships.properties[fieldName];\n\n  resolveMissingRequiredFields = () => {\n    const unavailableFields = ['nid', 'uuid', 'vid', 'path'];\n    const requiredFields = this.props.schema.properties.attributes.required.filter(\n      field => !unavailableFields.includes(field),\n    );\n    return Object.entries(this.state.entity.attributes)\n      .filter(([fieldName]) => requiredFields.includes(fieldName))\n      .filter(([fieldName, value]) => {\n        // @todo Ideally the schema would identify the main property for us.\n        if (\n          typeof value === 'object' &&\n          Object.keys(value).length &&\n          value.value === ''\n        ) {\n          return fieldName;\n        }\n        if (typeof value === 'string' && value.length === 0) {\n          return fieldName;\n        }\n        return false;\n      })\n      .map(([fieldName]) => fieldName);\n  };\n\n  calculateState = (prevProps, prevState, setState) => {\n    if (!prevProps.schema) {\n      return;\n    }\n\n    if (!prevProps.uiSchema) {\n      return;\n    }\n\n    if (prevState.entity) {\n      return;\n    }\n\n    const state = {\n      ...prevState,\n      // Mark the entity as restored when we don't have a restoreable entity,\n      // as we don't want to ask the user.\n      restored: prevState.restored || !prevProps.restorableEntity,\n      restorableEntity: !prevState.restored && prevProps.restorableEntity,\n      entity: prevProps.entity,\n    };\n\n    // Just contain values which are in the ui metadata.\n    state.entity.attributes = Object.entries(state.entity.attributes)\n      .filter(([key]) =>\n        Object.keys(prevProps.uiSchema.formDisplaySchema)\n          .concat(['type'])\n          .includes(key),\n      )\n      .reduce((agg, [key, value]) => ({ ...agg, [key]: value }), {});\n\n    setState(state);\n  };\n\n  createField = ({ fieldName, widget, inputProps }) => {\n    // @todo We need to pass along props.\n    // @todo How do we handle cardinality together with jsonapi\n    // making a distinction between single value fields and multi value fields.\n    const fieldSchema = this.getSchemaInfo(this.props.schema, fieldName);\n\n    const { attributes, relationships } = this.props.schema.properties;\n\n    const propType =\n      (attributes.properties[fieldName] && 'attributes') ||\n      (relationships.properties[fieldName] && 'relationships');\n\n    const widgetProps = {\n      key: fieldName,\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n      fieldName,\n      classes: {\n        root: styles.widgetRoot,\n      },\n      value: this.state.entity[propType][fieldName],\n      label: fieldSchema && fieldSchema.title,\n      schema: fieldSchema,\n      onChange: (propType === 'attributes'\n        ? this.onAttributeChange\n        : this.onRelationshipChange)(fieldName),\n      required: this.props.schema.properties.attributes.required.includes(\n        fieldName,\n      ),\n      inputProps,\n    };\n\n    const widgetIsMultiple = widget.multiple || false;\n    const hasMultipleDeltas =\n      (fieldSchema.type && fieldSchema.type === 'array') ||\n      (fieldSchema.properties && fieldSchema.properties.type === 'array');\n\n    return (\n      <EnsureComponent\n        name={widget.name}\n        component={widget.component}\n        render={widgetComponent =>\n          hasMultipleDeltas && !widgetIsMultiple ? (\n            <MultipleFields component={widgetComponent} {...widgetProps} />\n          ) : (\n            React.createElement(widgetComponent, widgetProps)\n          )\n        }\n      />\n    );\n  };\n\n  renderRestoreSnackbar() {\n    return (\n      // Ensure that there was some previously stored entity\n      this.props.restorableEntity &&\n      // Hide thie restore form once the content got restored.\n      !this.state.restored && (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          autoHideDuration={10000}\n          open\n          data-nightwatch=\"restore-content-snackbar\"\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Unsaved content found</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() =>\n                this.setState({\n                  entity: this.props.restorableEntity,\n                  restored: true,\n                })\n              }\n            >\n              Restore\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={() =>\n                this.setState({\n                  restored: true,\n                })\n              }\n            >\n              <CloseIcon className={styles.icon} />\n            </IconButton>,\n          ]}\n        />\n      )\n    );\n  }\n\n  render() {\n    let result = null;\n    if (\n      this.props.schema &&\n      this.props.uiSchema &&\n      this.state.entity &&\n      this.props.components.widgets\n    ) {\n      const { right, left } = sortUISchemaFields(\n        createUISchema(\n          this.props.uiSchema.fieldSchema,\n          this.props.uiSchema.formDisplaySchema,\n          this.props.uiSchema.fieldStorageConfig,\n          this.props.components.widgets,\n        ),\n        ['promote', 'status', 'sticky', 'uid', 'created'],\n      );\n      result = (\n        <div className={styles.gridRoot}>\n          {this.renderRestoreSnackbar()}\n          <Paper classes={{ root: styles.fieldContainer }}>\n            {left.map(this.createField)}\n            <Divider classes={{ root: styles.divider }} />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.onSave}>\n              Save\n            </Button>\n          </Paper>\n          <Paper classes={{ root: styles.fieldContainer }}>\n            {right.map(this.createField)}\n          </Paper>\n        </div>\n      );\n    }\n    return result;\n  }\n}\n\nstyles = {\n  fieldContainer: css`\n    padding: 50px 90px 40px;\n  `,\n  divider: css`\n    margin: 40px 0;\n  `,\n  gridRoot: css`\n    display: grid;\n    width: 100%;\n    grid-gap: 20px;\n    grid-template-columns: 75% 25%;\n    padding-right: 50px;\n  `,\n  widgetRoot: css`\n    display: flex;\n    align-items: start;\n  `,\n  icon: css`\n    font-size: 20px;\n  `,\n};\n\nconst mapStateToProps = (state, { bundle, entityTypeId }) => ({\n  uiSchema: state.schema.uiSchema[`${entityTypeId}--${bundle}`],\n  components: state.application.components,\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    requestUiSchema,\n    contentAdd,\n    setErrorMessage,\n    requestComponentList,\n  },\n)(NodeForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as MaterialUI from '@material-ui/core';\nimport api from '../../../utils/api/api';\n\nclass EnsureComponent extends React.Component {\n  state = {\n    component: null,\n  };\n\n  static propTypes = {\n    component: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n      .isRequired,\n    render: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    if (typeof this.props.component === 'string') {\n      // Cheat and load \"React\"\n      window.define('react', () => React);\n      window.define('@drupal/admin-ui-utilities', () => ({ api }));\n      Object.keys(MaterialUI).forEach(key =>\n        window.define(`@material-ui/core/${key}`, () => MaterialUI[key]),\n      );\n      window.require([this.props.component], ({ default: component }) => {\n        this.setState({ component });\n      });\n    } else {\n      this.setState({\n        component: this.props.component,\n      });\n    }\n  }\n\n  render() {\n    if (this.state.component) {\n      return this.props.render(this.state.component);\n    }\n    return null;\n  }\n}\n\nexport default EnsureComponent;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport NodeForm from '../NodeForm';\nimport {\n  contentEditChange,\n  contentSave,\n  requestSingleContent,\n} from '../../../actions/content';\nimport PageTitle from '../../02_atoms/PageTitle/PageTitle';\nimport { cleanupRelationships } from '../../../utils/api/content';\nimport { requestSchemaByEntityId } from '../../../actions/schema';\nimport SchemaPropType from '../NodeForm/SchemaPropType';\n\nlet styles;\n\nclass NodeEditForm extends React.Component {\n  componentDidMount() {\n    this.props.requestSchemaByEntityId({\n      entityTypeId: this.props.entityTypeId,\n      entityId: this.props.nid,\n    });\n    this.props.requestSingleContent(this.props.nid);\n  }\n\n  onSave = bundle => entity => {\n    this.props.contentSave(\n      cleanupRelationships({\n        ...entity,\n        type: `${this.props.entityTypeId}--${bundle}`,\n      }),\n    );\n  };\n\n  render() {\n    const { entity, schema } = this.props;\n    let result = null;\n    if (entity && schema) {\n      const bundle = entity.type.replace('node--', '');\n      result = (\n        <Fragment>\n          {entity && (\n            <PageTitle>\n              <em>\n                Edit <span className={styles.bundle}>{bundle}</span>\n              </em>{' '}\n              {entity.attributes.title}\n            </PageTitle>\n          )}\n          <LoadingBar />\n          {entity && (\n            <NodeForm\n              {...this.props}\n              bundle={bundle}\n              entity={entity}\n              onSave={this.onSave(bundle)}\n            />\n          )}\n        </Fragment>\n      );\n    }\n    return result;\n  }\n}\n\nNodeEditForm.defaultProps = {\n  entity: null,\n  schema: null,\n};\n\nNodeEditForm.propTypes = {\n  nid: PropTypes.string.isRequired,\n  requestSingleContent: PropTypes.func.isRequired,\n  contentSave: PropTypes.func.isRequired,\n  entityTypeId: PropTypes.string.isRequired,\n  entity: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    attributes: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  }),\n  requestSchemaByEntityId: PropTypes.func.isRequired,\n  schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n};\n\nstyles = {\n  bundle: css`\n    text-transform: capitalize;\n  `,\n};\n\nconst extractRestorableEntity = (state, entity) => {\n  const restorableEntity = state.content.restorableContentEditById[entity.id];\n  if (\n    restorableEntity &&\n    restorableEntity.attributes &&\n    entity &&\n    entity.attributes &&\n    // Restoring content is only offered when the loaded entity wasn't changed in the meantime.\n    restorableEntity.attributes.changed === entity.attributes.change\n  ) {\n    return restorableEntity;\n  }\n  return null;\n};\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { nid },\n      },\n    },\n  ) => {\n    const entity = state.content.contentByNid[nid];\n    return {\n      schema: state.schema.schema[`node--${nid}`],\n      entity,\n      restorableEntity: entity && extractRestorableEntity(state, entity),\n      entityTypeId: 'node',\n      nid,\n    };\n  },\n  {\n    requestSingleContent,\n    contentSave,\n    onChange: contentEditChange,\n    requestSchemaByEntityId,\n  },\n)(NodeEditForm);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoadingBar from 'react-redux-loading-bar';\nimport NodeForm from '../NodeForm';\nimport {\n  contentAddChange,\n  contentAdd,\n  requestUser,\n} from '../../../actions/content';\nimport PageTitle from '../../02_atoms/PageTitle/PageTitle';\nimport { createEntity } from '../../../utils/api/schema';\nimport { requestSchema } from '../../../actions/schema';\nimport SchemaPropType from '../NodeForm/SchemaPropType';\nimport { cleanupRelationships } from '../../../utils/api/content';\n\nclass NodeAddForm extends React.Component {\n  static propTypes = {\n    bundle: PropTypes.string.isRequired,\n    contentAdd: PropTypes.func.isRequired,\n    entityTypeId: PropTypes.string.isRequired,\n    schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n    requestSchema: PropTypes.func.isRequired,\n    requestUser: PropTypes.func.isRequired,\n    user: PropTypes.shape({}),\n  };\n\n  static defaultProps = {\n    schema: false,\n    user: false,\n  };\n\n  componentDidMount() {\n    this.props.requestUser(1);\n    this.props.requestSchema({\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n    });\n  }\n\n  onSave = entity => {\n    this.props.contentAdd(\n      cleanupRelationships({\n        ...entity,\n        type: `${this.props.entityTypeId}--${this.props.bundle}`,\n      }),\n      this.props.bundle,\n    );\n  };\n\n  forgeEntity = schema => {\n    const entity = createEntity(schema);\n    // Set default `Created On` attribute.\n    const local = new Date();\n    local.setMinutes(local.getMinutes() - local.getTimezoneOffset());\n    entity.attributes.created = Math.round(+local / 1000);\n\n    // Set default `Authored By` relationship.\n    entity.relationships.uid.data = { ...this.props.user };\n\n    return entity;\n  };\n\n  render() {\n    return (\n      this.props.schema &&\n      this.props.user && (\n        <Fragment>\n          <PageTitle>\n            Create\n            {this.props.bundle}\n          </PageTitle>\n          <LoadingBar />\n          <NodeForm\n            {...this.props}\n            entity={this.forgeEntity(this.props.schema)}\n            onSave={this.onSave}\n          />\n        </Fragment>\n      )\n    );\n  }\n}\n\nconst extractRestorableEntity = (state, bundle) =>\n  state.content.restorableContentAddByBundle[bundle];\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { bundle },\n      },\n    },\n  ) => ({\n    schema: state.schema.schema[`node--${bundle}`],\n    restorableEntity: extractRestorableEntity(state, bundle),\n    user: state.content.user,\n    entityTypeId: 'node',\n    bundle,\n  }),\n  {\n    contentAdd,\n    requestSchema,\n    onChange: contentAddChange,\n    requestUser,\n  },\n)(NodeAddForm);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport { Redirect } from 'react-router';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\n\nimport PageTitle from '../../02_atoms/PageTitle';\n\nconst styles = {\n  action: css`\n    margin-left: 0rem;\n    margin-bottom: 0.5rem;\n    min-width: 5rem;\n    max-width: 15rem;\n  `,\n};\n\nexport default class TaxonomyVocabulary extends React.Component {\n  static propTypes = {\n    requestTaxonomyVocabulary: PropTypes.func.isRequired,\n    taxonomyVocabulary: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          attributes: PropTypes.shape({\n            name: PropTypes.string,\n            description: PropTypes.string,\n            vid: PropTypes.string,\n          }),\n        }),\n      ),\n    ]),\n  };\n\n  static defaultProps = {\n    taxonomyVocabulary: null,\n  };\n\n  state = {\n    activeLink: null,\n  };\n\n  componentDidMount() {\n    this.props.requestTaxonomyVocabulary();\n  }\n\n  vocabularyOperations = vid => (\n    <FormControl className={styles.action}>\n      {/* @todo Extract the select element with links out into a component */}\n      <InputLabel htmlFor=\"action\">Actions</InputLabel>\n      <Select\n        value={this.state.activeLink || ''}\n        autoWidth\n        onChange={e => this.setState({ activeLink: e.target.value })}\n      >\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}/overview`}>\n          List Terms\n        </MenuItem>\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}`}>\n          Edit Vocabulary\n        </MenuItem>\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}/add`}>\n          Add Terms\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/fields`}\n        >\n          Manage Fields\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/form-display`}\n        >\n          Manage Form Display\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/display`}\n        >\n          Manage Display\n        </MenuItem>\n      </Select>\n      {this.state.activeLink && <Redirect to={this.state.activeLink} />}\n    </FormControl>\n  );\n\n  render() {\n    const { taxonomyVocabulary } = this.props;\n    return (\n      <Fragment>\n        <PageTitle>Taxonomy</PageTitle>\n        <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Vocabulary name</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell>Operations</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {taxonomyVocabulary &&\n                taxonomyVocabulary.map(vocabulary => (\n                  <TableRow key={vocabulary.id}>\n                    <TableCell>{vocabulary.attributes.name}</TableCell>\n                    <TableCell>{vocabulary.attributes.description}</TableCell>\n                    <TableCell>\n                      {this.vocabularyOperations(vocabulary.attributes.vid)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Fragment>\n    );\n  }\n}\n","import { put, takeLatest, call, select } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport { ApiError } from '@drupal/admin-ui-utilities';\n\nimport api from '../utils/api/api';\nimport { setErrorMessage } from './application';\n\nexport const TAXONOMY_VOCABULARY_REQUESTED = 'TAXONOMY_VOCABULARY_REQUESTED';\nexport const requestTaxonomyVocabulary = () => ({\n  type: TAXONOMY_VOCABULARY_REQUESTED,\n  payload: {},\n});\n\nexport const requestTaxonomyVocabularyById = vocabulary => ({\n  type: TAXONOMY_VOCABULARY_REQUESTED,\n  payload: { vocabulary },\n});\n\nexport const TAXONOMY_VOCABULARY_LOADED = 'TAXONOMY_VOCABULARY_LOADED';\nfunction* loadTaxonomyVocabulary(action) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const { data: taxonomyVocabulary } = yield call(\n      api,\n      'taxonomy_vocabulary',\n      {\n        ...((action.payload.vocabulary && {\n          queryString: {\n            filter: {\n              condition: { path: 'vid', value: action.payload.vocabulary },\n            },\n          },\n        }) ||\n          {}),\n      },\n    );\n\n    yield put({\n      type: TAXONOMY_VOCABULARY_LOADED,\n      payload: {\n        taxonomyVocabulary,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const TAXONOMY_TERMS_REQUESTED = 'TAXONOMY_TERMS_REQUESTED';\nexport const requestTaxonomyTerms = vocabulary => ({\n  type: TAXONOMY_TERMS_REQUESTED,\n  payload: { vocabulary },\n});\n\nexport const getTaxonomyVocabularyById = (taxonomyVocabularyList, vocabulary) =>\n  taxonomyVocabularyList\n    .filter(({ attributes: { vid } }) => vid === vocabulary)\n    .shift();\n\nexport const TAXONOMY_TERMS_LOADED = 'TAXONOMY_TERMS_LOADED';\nfunction* loadTaxonomyTerms(action) {\n  try {\n    const {\n      payload: { vocabulary },\n    } = action;\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const { data: taxonomyTerms } = yield call(api, 'taxonomy_term', {\n      parameters: { type: vocabulary },\n    });\n\n    const {\n      taxonomy: { taxonomyVocabulary },\n    } = yield select();\n    if (\n      !(\n        taxonomyVocabulary.length &&\n        getTaxonomyVocabularyById(taxonomyVocabulary, vocabulary)\n      )\n    ) {\n      yield put({\n        type: TAXONOMY_VOCABULARY_REQUESTED,\n        payload: {\n          vocabulary,\n        },\n      });\n    }\n\n    yield put({\n      type: TAXONOMY_TERMS_LOADED,\n      payload: {\n        vocabulary,\n        taxonomyTerms,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(TAXONOMY_VOCABULARY_REQUESTED, loadTaxonomyVocabulary);\n  yield takeLatest(TAXONOMY_TERMS_REQUESTED, loadTaxonomyTerms);\n}\n","import { connect } from 'react-redux';\n\nimport TaxonomyVocabulary from './TaxonomyVocabulary';\nimport { requestTaxonomyVocabulary } from '../../../actions/taxonomy';\n\nexport default connect(\n  state => ({ taxonomyVocabulary: state.taxonomy.taxonomyVocabulary }),\n  { requestTaxonomyVocabulary },\n)(TaxonomyVocabulary);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\n\nimport { Redirect } from 'react-router';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\n\nimport PageTitle from '../../02_atoms/PageTitle';\n\nconst styles = {\n  action: css`\n    margin-left: 0rem;\n    margin-bottom: 0.5rem;\n    min-width: 5rem;\n    max-width: 15rem;\n  `,\n};\n\nexport default class TaxonomyTermsOverview extends React.Component {\n  static propTypes = {\n    requestTaxonomyTerms: PropTypes.func.isRequired,\n    vocabulary: PropTypes.string.isRequired,\n    taxonomyTerms: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          attributes: PropTypes.shape({\n            name: PropTypes.string,\n            description: PropTypes.string,\n            vid: PropTypes.string,\n          }),\n        }),\n      ),\n    ]),\n    taxonomyVocabulary: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        attributes: PropTypes.shape({\n          name: PropTypes.string,\n          description: PropTypes.string,\n          vid: PropTypes.string,\n        }),\n      }),\n    ]),\n  };\n\n  static defaultProps = {\n    taxonomyTerms: null,\n    taxonomyVocabulary: null,\n  };\n\n  state = {\n    activeLink: null,\n  };\n\n  componentDidMount() {\n    this.props.requestTaxonomyTerms(this.props.vocabulary);\n  }\n\n  termOperations = tid => (\n    <FormControl className={styles.action}>\n      {/* @todo Extract the select element with links out into a component */}\n      <InputLabel htmlFor=\"action\">Actions</InputLabel>\n      <Select\n        autoWidth\n        onChange={e => this.setState({ activeLink: e.target.value })}\n        value={this.state.activeLink || ''}\n      >\n        <MenuItem value={`/taxonomy/term/${tid}/edit`}>Edit</MenuItem>\n        <MenuItem value={`/taxonomy/term/${tid}/delete`}>Delete</MenuItem>\n      </Select>\n      {this.state.activeLink && <Redirect to={this.state.activeLink} />}\n    </FormControl>\n  );\n\n  render() {\n    const { taxonomyTerms, taxonomyVocabulary } = this.props;\n    return (\n      <Fragment>\n        {taxonomyVocabulary && (\n          <PageTitle>{taxonomyVocabulary.attributes.name}</PageTitle>\n        )}\n        <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Operations</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {taxonomyTerms &&\n                taxonomyTerms.map(term => (\n                  <TableRow key={term.attributes.uuid}>\n                    <TableCell>{term.attributes.name}</TableCell>\n                    <TableCell>\n                      {this.termOperations(term.attributes.tid)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Button\n          variant=\"fab\"\n          color=\"primary\"\n          aria-label=\"add\"\n          className={styles.addButton}\n          component={Link}\n          to={`/admin/structure/taxonomy/manage/${this.props.vocabulary}/add`}\n        >\n          <AddIcon />\n        </Button>\n      </Fragment>\n    );\n  }\n}\n","import { connect } from 'react-redux';\n\nimport TaxonomyTermsOverview from './TaxonomyTermsOverview';\nimport {\n  requestTaxonomyTerms,\n  getTaxonomyVocabularyById,\n} from '../../../actions/taxonomy';\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { vocabulary },\n      },\n    },\n  ) => ({\n    taxonomyTerms: state.taxonomy.taxonomyTerms[vocabulary],\n    taxonomyVocabulary: getTaxonomyVocabularyById(\n      state.taxonomy.taxonomyVocabulary,\n      vocabulary,\n    ),\n    vocabulary,\n  }),\n  { requestTaxonomyTerms },\n)(TaxonomyTermsOverview);\n","import AddContent from './components/05_pages/AddContent';\nimport Content from './components/05_pages/Content/Content';\nimport Permissions from './components/05_pages/Permissions/Permissions';\nimport Roles from './components/05_pages/Roles';\nimport Dblog from './components/05_pages/Reports/Dblog';\nimport NodeEditForm from './components/05_pages/NodeEditForm';\nimport NodeAddForm from './components/05_pages/NodeAddForm';\nimport Taxonomy from './components/05_pages/TaxonomyVocabulary';\nimport TaxonomyTermsOverview from './components/05_pages/TaxonomyTermsOverview';\n\n// @todo Share this with Drupal\nconst routes = {\n  '/admin/content': Content,\n  '/admin/people/permissions/:role?': Permissions,\n  '/admin/people/roles': Roles,\n  '/admin/reports/dblog': Dblog,\n  '/node/add': AddContent,\n  '/node/:nid/edit': NodeEditForm,\n  '/node/add/:bundle': NodeAddForm,\n  '/admin/structure/taxonomy/manage/:vocabulary/overview': TaxonomyTermsOverview,\n  '/admin/structure/taxonomy': Taxonomy,\n};\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_WARNING,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_SUCCESS,\n} from '../../../constants/messages';\n\nconst variantIcon = {\n  MESSAGE_SEVERITY_SUCCESS: CheckCircleIcon,\n  MESSAGE_SEVERITY_WARNING: WarningIcon,\n  MESSAGE_SEVERITY_ERROR: ErrorIcon,\n  MESSAGE_SEVERITY_INFO: InfoIcon,\n};\n\nconst styles = {\n  success: css`\n    background-color: #43a047;\n  `,\n  error: css`\n    background-color: #d32f2f;\n  `,\n  info: css`\n    background-color: #1976d2;\n  `,\n  warning: css`\n    background-color: #ffa000;\n  `,\n  icon: css`\n    font-size: 20px;\n  `,\n  iconVariant: css`\n    margin-right: 10px;\n    opacity 0.9;\n  `,\n  message: css`\n    display: flex;\n    align-items: center;\n\n    a {\n      color: #fff;\n    }\n  `,\n};\n\nconst SnackbarMessage = props => {\n  const Icon = variantIcon[props.messageSeverity];\n  return (\n    <Snackbar\n      open={props.open}\n      autoHideDuration={props.duration}\n      onClose={props.onClose}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n    >\n      <SnackbarContent\n        className={(severity => {\n          switch (severity) {\n            case MESSAGE_SEVERITY_ERROR:\n              return styles.error;\n            case MESSAGE_SEVERITY_WARNING:\n              return styles.warning;\n            case MESSAGE_SEVERITY_INFO:\n              return styles.info;\n            case MESSAGE_SEVERITY_SUCCESS:\n              return styles.success;\n            default:\n              return styles.error;\n          }\n        })(props.messageSeverity)}\n        message={\n          <span className={styles.message}>\n            <Icon className={`${styles.icon} ${styles.iconVariant}`} />\n            {props.message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={props.onClose}\n          >\n            <CloseIcon className={styles.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nSnackbarMessage.defaultProps = {\n  duration: 5000,\n};\n\nSnackbarMessage.propTypes = {\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.node.isRequired,\n  messageSeverity: PropTypes.oneOf([\n    MESSAGE_SEVERITY_ERROR,\n    MESSAGE_SEVERITY_SUCCESS,\n    MESSAGE_SEVERITY_INFO,\n    MESSAGE_SEVERITY_WARNING,\n  ]).isRequired,\n  onClose: PropTypes.func.isRequired,\n  duration: PropTypes.number,\n};\n\nexport default SnackbarMessage;\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_SUCCESS,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_WARNING,\n} from '../../../constants/messages';\n\nlet styles;\nlet modifierClassMap;\n\nconst Message = ({ message, messageSeverity }) => (\n  <div className={`${styles.message} ${modifierClassMap[messageSeverity]}`}>\n    {message}\n  </div>\n);\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  messageSeverity: PropTypes.oneOf([\n    MESSAGE_SEVERITY_ERROR,\n    MESSAGE_SEVERITY_SUCCESS,\n    MESSAGE_SEVERITY_INFO,\n    MESSAGE_SEVERITY_WARNING,\n  ]).isRequired,\n};\n\nstyles = {\n  message: css`\n    padding: 20px 25px;\n    margin-bottom: 30px;\n    color: #fff;\n  `,\n  success: css`\n    background-color: #43a047;\n  `,\n  error: css`\n    background-color: #d32f2f;\n  `,\n  info: css`\n    background-color: #1976d2;\n  `,\n  warning: css`\n    background-color: #ffa000;\n  `,\n};\n\nmodifierClassMap = {\n  [MESSAGE_SEVERITY_ERROR]: styles.error,\n  [MESSAGE_SEVERITY_SUCCESS]: styles.success,\n  [MESSAGE_SEVERITY_WARNING]: styles.warning,\n  [MESSAGE_SEVERITY_INFO]: styles.info,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport BuildIcon from '@material-ui/icons/Build';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AssesmentIcon from '@material-ui/icons/Assessment';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport Snackbar from '../../02_atoms/SnackbarMessage/SnackbarMessage';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nimport {\n  requestMenu,\n  closeDrawer,\n  openDrawer,\n  setMessage,\n  clearMessage,\n} from '../../../actions/application';\n\nlet styles;\n\nconst iconMap = {\n  '/admin/content': <ViewListIcon />,\n  '/admin/structure': <BuildIcon />,\n  '/admin/appearance': <ColorLensIcon />,\n  '/admin/modules': <ExtensionIcon />,\n  '/admin/config': <SettingsIcon />,\n  '/admin/people': <PeopleIcon />,\n  '/admin/reports': <AssesmentIcon />,\n  '/admin/help': <HelpIcon />,\n};\n\nclass Default extends React.Component {\n  componentDidMount() {\n    this.props.requestMenu();\n  }\n\n  render = () => (\n    <div className={styles.outerWrapper}>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: `${styles.drawerPaper} ${!this.props.drawerOpen &&\n            styles.drawerPaperClose}`,\n        }}\n        open={this.props.drawerOpen}\n      >\n        <div className={styles.menuButtonWrapper}>\n          {this.props.drawerOpen ? (\n            <IconButton\n              aria-label=\"close drawer\"\n              onClick={this.props.closeDrawer}\n              className={styles.menuButton}\n            >\n              <ChevronLeftIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.props.openDrawer}\n              className={styles.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n        </div>\n        <Divider />\n        <List data-nightwatch=\"menu\">\n          {this.props.menuLinks.map(({ link: menuLink }) => (\n            <ListItem\n              key={menuLink.url.replace(/\\//g, '-')}\n              component=\"li\"\n              button\n            >\n              <Link to={menuLink.url} className={styles.menuLink} role=\"button\">\n                {iconMap[menuLink.url] ? (\n                  <ListItemIcon>{iconMap[menuLink.url]}</ListItemIcon>\n                ) : (\n                  ''\n                )}\n                <ListItemText primary={menuLink.title} />\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n        {this.props.menuLinks.length ? <Divider /> : ''}\n      </Drawer>\n\n      <main className={styles.main} id={styles.main}>\n        <ErrorBoundary>\n          {this.props.children}\n          {this.props.message && (\n            <Snackbar\n              {...this.props.message}\n              onClose={() => this.props.clearMessage(this.props.message.key)}\n            />\n          )}\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nstyles = {\n  menuLink: css`\n    display: inherit;\n    text-decoration: inherit;\n  `,\n  menuButton: css`\n    margin: 8px 12px;\n  `,\n  menuButtonWrapper: css`\n    display: flex;\n    justify-content: flex-end;\n  `,\n  outerWrapper: css`\n    height: 100%;\n    display: flex;\n  `,\n  main: css`\n    flex-grow: 1;\n    padding: 2rem;\n    height: 100%;\n  `,\n  drawerPaper: css`\n    position: relative;\n    width: 250px;\n    transition: width 225ms cubic-bezier(0.4, 0, 0.6, 1) 0ms;\n  `,\n  drawerPaperClose: css`\n    overflow-x: hidden;\n    transition: none;\n    width: 72px;\n    transition: width 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms;\n  `,\n};\n\nDefault.propTypes = {\n  children: PropTypes.node.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    type: PropTypes.string,\n    key: PropTypes.number,\n    open: PropTypes.bool,\n  }),\n  menuLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      link: PropTypes.shape({\n        url: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    }),\n  ).isRequired,\n  requestMenu: PropTypes.func.isRequired,\n  openDrawer: PropTypes.func.isRequired,\n  closeDrawer: PropTypes.func.isRequired,\n  setMessage: PropTypes.func.isRequired,\n  clearMessage: PropTypes.func.isRequired,\n  drawerOpen: PropTypes.bool,\n};\n\nDefault.defaultProps = {\n  message: null,\n  drawerOpen: false,\n};\n\nconst mapStateToProps = state => ({\n  message: state.application.messages[0] || null,\n  menuLinks: state.application.menuLinks || [],\n  drawerOpen: state.application.drawerOpen,\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      requestMenu,\n      openDrawer,\n      closeDrawer,\n      setMessage,\n      clearMessage,\n    },\n  )(Default),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InlineMessage from '../../02_atoms/InlineMessage/InlineMessage';\n\nimport { MESSAGE_SEVERITY_ERROR } from '../../../constants/messages';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n    };\n  }\n\n  componentDidCatch(error) {\n    this.setState({\n      error,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <InlineMessage\n          message={this.state.error.toString()}\n          messageSeverity={MESSAGE_SEVERITY_ERROR}\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ErrorBoundary;\n","import { Component } from 'react';\n\nimport routes from './routes';\n\nexport interface Props {\n  location: {\n    [pathname: string]: string;\n  };\n}\n\nclass NoMatch extends Component<Props> {\n  componentDidMount() {\n    // We want to redirect everything without a match back to Drupal.\n    if (!Object.keys(routes).includes(this.props.location.pathname)) {\n      window.location.href =\n        process.env.REACT_APP_DRUPAL_BASE_URL + this.props.location.pathname;\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n\nexport default NoMatch;\n","import { all } from 'redux-saga/effects';\nimport applicationSaga from './application';\nimport contentSaga from './content';\nimport schemaSaga from './schema';\nimport { watchDblogRequests } from './reports';\nimport { watchRequestedRolesWithCancel } from './roles';\nimport taxonomySaga from './taxonomy';\n\nexport default function* rootSaga() {\n  yield all([\n    applicationSaga(),\n    contentSaga(),\n    watchDblogRequests(),\n    watchRequestedRolesWithCancel(),\n    schemaSaga(),\n    taxonomySaga(),\n  ]);\n}\n","import { LOCATION_CHANGE } from 'react-router-redux';\nimport { ROLES_LOADED } from '../actions/roles';\nimport {\n  DBLOG_COLLECTION_LOADED,\n  DBLOG_FILTER_UPDATED,\n} from '../actions/reports';\nimport {\n  CLOSE_DRAWER,\n  OPEN_DRAWER,\n  SET_MESSAGE,\n  CLEAR_MESSAGE,\n  CLEAR_ALL_MESSAGES,\n  MENU_LOADED,\n  CONTENT_TYPES_LOADED,\n  ACTIONS_LOADED,\n  COMPONENT_LIST_LOADED,\n} from '../actions/application';\n\nexport const initialState = {\n  messages: [],\n  menuLinks: [],\n  filterString: '',\n  contentTypes: {},\n  actions: [],\n  drawerOpen: false,\n  components: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CLOSE_DRAWER: {\n      return {\n        ...state,\n        drawerOpen: false,\n      };\n    }\n    case OPEN_DRAWER: {\n      return {\n        ...state,\n        drawerOpen: true,\n      };\n    }\n    case SET_MESSAGE: {\n      // This causes a new messages object to be created, instead of\n      // maintaining a reference to the old data structure.\n      const messages = [...state.messages];\n      messages.push({\n        message: action.payload.message,\n        messageSeverity: action.payload.messageSeverity,\n        key: Date.now() + Math.random(),\n        open: true,\n      });\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case CLEAR_MESSAGE: {\n      const messages = [...state.messages];\n      messages.splice(\n        messages.findIndex(message => message.key === action.payload.key),\n        1,\n      );\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case CLEAR_ALL_MESSAGES: {\n      const messages = [];\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case LOCATION_CHANGE: {\n      // Clear messages on every location change.\n      return {\n        ...state,\n        messages: [],\n      };\n    }\n    case MENU_LOADED: {\n      return {\n        ...state,\n        menuLinks: Array.isArray(action.payload.menuLinks)\n          ? action.payload.menuLinks\n          : [],\n      };\n    }\n    case DBLOG_COLLECTION_LOADED: {\n      const { dblog, ...rest } = state;\n      return {\n        ...rest,\n        dblog: {\n          ...dblog,\n          next:\n            Object.prototype.hasOwnProperty.call(\n              action.payload.dbLogEntries.links,\n              'next',\n            ) || false,\n          entries: action.payload.dbLogEntries.data.map(\n            ({\n              attributes: {\n                wid,\n                message_formatted_plain: messageFormattedPlain,\n                timestamp,\n                type,\n              },\n            }) => ({ wid, messageFormattedPlain, timestamp, type }),\n          ),\n          availableTypes: action.payload.dbLogEntriesTypes,\n        },\n      };\n    }\n    case DBLOG_FILTER_UPDATED: {\n      const { dblog, ...rest } = state;\n      return {\n        ...rest,\n        dblog: {\n          ...dblog,\n          filterOptions: action.payload.options,\n        },\n      };\n    }\n    case ROLES_LOADED: {\n      const roles = action.payload.roles.data;\n      return {\n        ...state,\n        roles,\n      };\n    }\n    case CONTENT_TYPES_LOADED: {\n      return {\n        ...state,\n        contentTypes: action.payload.contentTypes.data.reduce(\n          (accumulator, contentType) => ({\n            ...accumulator,\n            [contentType.attributes.type]: {\n              name: contentType.attributes.name,\n              description: contentType.attributes.description,\n            },\n          }),\n          {},\n        ),\n      };\n    }\n    case ACTIONS_LOADED: {\n      return {\n        ...state,\n        actions: action.payload.actions.data,\n      };\n    }\n    case COMPONENT_LIST_LOADED: {\n      return {\n        ...state,\n        components: action.payload.components,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  CONTENT_LOADED,\n  CONTENT_SINGLE_LOADED,\n  CONTENT_DELETE,\n  CONTENT_ADD,\n  CONTENT_ADD_CHANGE,\n  USER_LOADED,\n  CONTENT_EDIT_CHANGE,\n} from '../actions/content';\n\nexport const initialState = {\n  contentList: [],\n  contentByNid: {},\n  links: {},\n  restorableContentAddByBundle: {},\n  restorableContentEditById: {},\n  user: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CONTENT_SINGLE_LOADED:\n      return {\n        ...state,\n        contentByNid: {\n          [action.payload.content.attributes.nid]: action.payload.content,\n        },\n      };\n    case CONTENT_ADD_CHANGE:\n      return {\n        ...state,\n        restorableContentAddByBundle: {\n          ...state.restorableContentAddByBundle,\n          [action.payload.bundle]: action.payload.entity,\n        },\n      };\n    case CONTENT_EDIT_CHANGE:\n      return {\n        ...state,\n        restorableContentEditById: {\n          ...state.restorableContentEditById,\n          [action.payload.entity.id]: action.payload.entity,\n        },\n      };\n    case CONTENT_ADD:\n      return {\n        ...state,\n        restorableContentAddByBundle: {\n          [action.payload.bundle]: null,\n        },\n      };\n    case CONTENT_LOADED: {\n      return {\n        ...state,\n        // Group JSON API includes by their type.\n        includes: action.payload.contentList.included\n          ? action.payload.contentList.included.reduce((accumulator, node) => {\n              accumulator[node.type] = accumulator[node.type] || {};\n              accumulator[node.type][node.id] = node;\n              return accumulator;\n            }, {})\n          : {},\n        contentList: action.payload.contentList.data\n          ? action.payload.contentList.data.map(content => ({\n              ...content,\n              // @fixme Instead of doing that we should get the node type\n              // using the type relationship.\n              type: content.type.substr(6),\n            }))\n          : [],\n        links: action.payload.contentList.links,\n      };\n    }\n\n    case CONTENT_DELETE: {\n      return {\n        ...state,\n        contentList: state.contentList.filter(\n          content => content.id !== action.payload.content.id,\n        ),\n      };\n    }\n\n    case USER_LOADED: {\n      return {\n        ...state,\n        user: action.payload.user,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {\n  SCHEMA_LOADED,\n  UI_SCHEMA_LOADED,\n  SCHEMA_BY_ENTITY_ID_LOADED,\n} from '../actions/schema';\n\nexport const initialState = {\n  uiSchema: {},\n  schema: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SCHEMA_LOADED: {\n      return {\n        ...state,\n        schema: {\n          [`${action.payload.entityTypeId}--${action.payload.bundle}`]: action\n            .payload.entitySchema,\n        },\n      };\n    }\n    case SCHEMA_BY_ENTITY_ID_LOADED: {\n      return {\n        ...state,\n        schema: {\n          [`${action.payload.entityTypeId}--${action.payload.entityId}`]: action\n            .payload.entitySchema,\n        },\n      };\n    }\n    case UI_SCHEMA_LOADED: {\n      const [\n        {\n          attributes: { content: formDisplaySchema },\n        },\n      ] = action.payload.formDisplaySchema;\n      const fieldSchema = action.payload.fieldSchema.reduce((acc, cur) => {\n        acc[cur.attributes.field_name] = cur;\n        return acc;\n      }, {});\n      return {\n        ...state,\n        uiSchema: {\n          ...state.uiSchema,\n          [`${action.payload.entityTypeId}--${action.payload.bundle}`]: {\n            fieldSchema,\n            formDisplaySchema,\n            fieldStorageConfig: action.payload.fieldStorageConfig,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  TAXONOMY_VOCABULARY_LOADED,\n  TAXONOMY_TERMS_LOADED,\n} from '../actions/taxonomy';\n\nexport const initialState = {\n  taxonomyVocabulary: [],\n  taxonomyTerms: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TAXONOMY_VOCABULARY_LOADED: {\n      return {\n        ...state,\n        taxonomyVocabulary: action.payload.taxonomyVocabulary,\n      };\n    }\n    case TAXONOMY_TERMS_LOADED: {\n      const { vocabulary, taxonomyTerms } = action.payload;\n      return {\n        ...state,\n        taxonomyTerms: {\n          ...state.taxonomyTerms,\n          [vocabulary]: taxonomyTerms,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport application, {\n  initialState as applicationInitialState,\n} from './application';\nimport content, { initialState as contentInitialState } from './content';\nimport schema, { initialState as schemaInitialState } from './schema';\nimport taxonomy, { initialState as taxonomyInitialState } from './taxonomy';\n\nconst reducers = { application, content, schema, taxonomy };\nexport const initialState = {\n  application: applicationInitialState,\n  content: contentInitialState,\n  schema: schemaInitialState,\n  taxonomy: taxonomyInitialState,\n};\nexport default { ...reducers, loadingBar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst InitialRedirect = ({ location: { search } }) => {\n  // Allow Drupal redirects to determine the initial path.\n  const searchString = search\n    .replace('?q=', '')\n    // trim slashes on the left.\n    .replace(/^\\//, '');\n  if (searchString) {\n    return <Redirect to={searchString} />;\n  }\n  return <Redirect to=\"/\" />;\n};\n\nInitialRedirect.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default InitialRedirect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport deepMerge from 'deepmerge';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport {\n  ConnectedRouter,\n  routerReducer,\n  routerMiddleware,\n} from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport { create } from 'jss';\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  createGenerateClassName,\n  jssPreset,\n} from '@material-ui/core/styles';\n\nimport routes from './routes';\n\nimport Content from './components/05_pages/Content/Content';\nimport Default from './components/06_wrappers/Default/Default';\nimport NoMatch from './NoMatch';\n\nimport actions from './actions/index';\nimport reducers, { initialState } from './reducers/index';\nimport ErrorBoundary from './components/06_wrappers/ErrorBoundary/ErrorBoundary';\nimport InitialRedirect from './InitialRedirect';\n\nimport EnsureComponent from './components/02_atoms/EnsureComponent/EnsureComponent';\n\nconst history = createBrowserHistory();\nconst middleware = routerMiddleware(history);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const localStorageName = 'drupalAdminUiReduxState';\n\n/**\n * Restore from local storage.\n */\nconst restoreState = () => {\n  let storedState;\n  let stringifiedState;\n  if (typeof window === 'object') {\n    try {\n      // Test for Safari private browsing mode. This will throw an error if it can't set an item.\n      localStorage.setItem('localStorageTest', true);\n      stringifiedState = localStorage.getItem(localStorageName) || '';\n    } catch (e) {\n      // In case like Safari private browing mode we don't support any restoring.\n      // Also note: enzyme has window but no Cookie set.\n      stringifiedState =\n        (window.Cookie &&\n          decodeURIComponent(window.Cookie.get(localStorageName))) ||\n        '';\n    }\n  }\n\n  try {\n    storedState = JSON.parse(stringifiedState);\n  } catch (e) {\n    storedState = {};\n  }\n  return storedState;\n};\n\nexport const localStorageStore = state => ({\n  content: {\n    restorableContentAddByBundle: state.content.restorableContentAddByBundle,\n    restorableContentEditById: state.content.restorableContentEditById,\n  },\n});\n\nconst storeState = store => {\n  // Persist state.\n  const state = store.getState();\n\n  // Save to local storage\n  const stringifiedState = JSON.stringify(localStorageStore(state));\n  try {\n    localStorage.setItem(localStorageName, stringifiedState);\n  } catch (e) {\n    // This will happen with Safari in private browsing mode.\n  }\n};\n\nconst store = createStore(\n  combineReducers({ ...reducers, router: routerReducer }),\n  deepMerge(initialState, restoreState()),\n  composeWithDevTools(applyMiddleware(sagaMiddleware, middleware)),\n);\nsagaMiddleware.run(actions);\n\nif (typeof window === 'object') {\n  store.subscribe(() => storeState(store));\n}\n\nconst generateClassName = createGenerateClassName();\nconst jss = create(jssPreset());\n// We define a custom insertion point that JSS will look for injecting the styles in the DOM.\njss.options.insertionPoint = document.getElementById('jss-insertion-point');\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = ({ serverRoutes }) => (\n  <JssProvider jss={jss} generateClassName={generateClassName}>\n    <MuiThemeProvider theme={theme}>\n      <ErrorBoundary>\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <Default>\n              <Switch>\n                <Route exact path=\"/\" component={withRouter(Content)} />\n                {Object.entries({\n                  ...routes,\n                  ...Object.values(serverRoutes).reduce(\n                    (acc, { route, component, moduleName: routePrefix }) => ({\n                      ...acc,\n                      ...{ [`/${routePrefix}${route}`]: component },\n                    }),\n                    {},\n                  ),\n                }).map(([route, component]) => (\n                  <Route\n                    exact\n                    path={route}\n                    component={() => (\n                      <EnsureComponent\n                        component={component}\n                        render={widgetComponent =>\n                          React.createElement(withRouter(widgetComponent))\n                        }\n                      />\n                    )}\n                    key={route}\n                  />\n                ))}\n                <Route\n                  path=\"/(vfancy/?)\"\n                  component={withRouter(InitialRedirect)}\n                />\n                <Route component={NoMatch} />\n              </Switch>\n            </Default>\n          </ConnectedRouter>\n        </Provider>\n      </ErrorBoundary>\n    </MuiThemeProvider>\n  </JssProvider>\n);\n\nApp.propTypes = {\n  serverRoutes: PropTypes.arrayOf(\n    PropTypes.shape({\n      route: PropTypes.string.isRequired,\n      component: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nApp.defaultProps = {\n  serverRoutes: {},\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n            }\n          }\n        };\n      };\n    })\n    .catch(() => {});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {});\n}\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {});\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport api from './utils/api/api';\n\n// Disable react-axe without an additional cli flag.\n// See README.md for more information.\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_AXE) {\n  // eslint-disable-next-line import/no-extraneous-dependencies, global-require\n  const axe = require('react-axe');\n  axe(React, ReactDOM);\n}\n\n// Fetch routes provided by Drupal modules.\n// This happens outsite of React and before the application starts.\napi('admin_ui_routes').then(({ routes }) => {\n  ReactDOM.render(\n    <App serverRoutes={routes} />,\n    document.getElementById('root'),\n  );\n});\nregisterServiceWorker();\n"],"sourceRoot":""}
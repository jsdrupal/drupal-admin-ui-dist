{"version":3,"sources":["utils/api/errors.js","utils/api/api.js","constants/messages.js","actions/application.js","components/02_atoms/PageTitle/PageTitle.js","components/02_atoms/PageTitle/index.js","components/05_pages/AddContent/AddContent.js","components/05_pages/AddContent/index.js","components/02_atoms/OpsModalButton/OpsModalButton.js","components/01_subatomics/MessageHelpers/MessageSave.js","utils/api/content.js","actions/content.js","components/04_templates/ContentTable/ContentTable.js","components/05_pages/Content/ConfirmationDialog.js","components/05_pages/Content/Content.js","components/02_atoms/Loading/Loading.js","components/01_subatomics/Table/Table.js","components/05_pages/Permissions/Permissions.js","actions/roles.js","components/05_pages/Roles/Roles.js","components/05_pages/Roles/index.js","actions/helpers.js","actions/reports.js","components/05_pages/Reports/Dblog.js","components/05_pages/NodeForm/SchemaPropType.js","utils/api/schema.js","components/02_atoms/MultipleFields/MultipleFields.js","actions/schema.js","components/05_pages/NodeForm/WidgetPropTypes.js","components/02_atoms/Widgets/OptionsSelect.js","components/02_atoms/Widgets/NumberTextfield.js","components/02_atoms/Widgets/StringTextfield.js","components/02_atoms/Widgets/BooleanCheckbox.js","components/02_atoms/Widgets/DatetimeTimestamp.js","components/02_atoms/FileUpload/FileUpload.js","utils/api/fieldItem.js","components/02_atoms/Widgets/FileUploadWidget.js","components/02_atoms/Widgets/EntityReferenceAutocomplete.js","components/02_atoms/Widgets/TextTextarea.js","components/05_pages/NodeForm/index.js","components/05_pages/NodeForm/Widgets.js","components/05_pages/NodeEditForm/index.js","components/05_pages/NodeAddForm/index.js","components/05_pages/TaxonomyVocabulary/TaxonomyVocabulary.js","actions/taxonomy.js","components/05_pages/TaxonomyVocabulary/index.js","components/05_pages/TaxonomyTermsOverview/TaxonomyTermsOverview.js","components/05_pages/TaxonomyTermsOverview/index.js","routes.js","components/02_atoms/SnackbarMessage/SnackbarMessage.js","components/02_atoms/InlineMessage/InlineMessage.js","components/06_wrappers/Default/Default.js","components/06_wrappers/ErrorBoundary/ErrorBoundary.js","NoMatch.js","actions/index.js","reducers/application.js","reducers/content.js","reducers/schema.js","reducers/taxonomy.js","reducers/index.js","InitialRedirect.js","App.js","registerServiceWorker.js","index.js"],"names":["ApiError","status","statusText","response","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","name","message","concat","error","toHumanString","toString","json","Error","api","_callee","endpoint","_ref","_ref$queryString","queryString","_ref$parameters","parameters","_ref$options","options","url","deleteToken","node","saveToken","_saveToken","data","_args","arguments","regenerator_default","a","wrap","_context","prev","next","length","undefined","credentials","headers","t0","abrupt","Accept","text","role","id","method","body","JSON","stringify","entityTypeId","bundle","fieldName","fileName","objectSpread","type","includes","sent","links","self","replace","process","attributes","nid","revision_timestamp","changed","relationships","revision_uid","uid","join","entityId","fetch","qs","arrayFormat","then","res","stop","MESSAGE_SEVERITY_SUCCESS","loadMenu","loadContentTypes","loadActions","watchRequestedMenu","setMessage","messageSeverity","payload","setErrorMessage","setSuccessMessage","clearMessage","key","MENU_REQUESTED","MENU_LOADED","menuLinks","errorMessage","put","resetLoading","showLoading","errorToHumanString","hideLoading","finish","_marked","CONTENT_TYPES_REQUESTED","requestContentTypes","contentTypesSelector","state","application","contentTypes","CONTENT_TYPES_LOADED","_context2","_marked2","ACTIONS_REQUESTED","getActionsCache","actions","ACTIONS_LOADED","_context3","select","keys","t1","_marked3","_context4","takeLatest","takeEvery","_marked4","styles","title","css","_templateObject","withSideEffect","propsList","innermostProps","children","document","Array","isArray","map","e","trim","react_default","createElement","Typography_default","variant","classes","root","PageTitle","menuLink","AddContent_templateObject","_templateObject2","render","className","_02_atoms_PageTitle","Paper_default","List_default","data-nightwatch","props","contentType","ListItem_default","component","Link","to","ListItemText_default","primary","secondary","interweave_lib","content","description","Component","connect","AddContent","Transition","Slide_default","assign","direction","OpsModalButton","open","handleClickOpen","setState","handleClose","_this2","_this$props","cancelText","confirmText","enterAction","buttonProps","objectWithoutProperties","react","IconButton_default","onClick","Dialog_default","TransitionComponent","onClose","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","color","React","MessageSave","extractContentType","substring","mapContentTypeToName","cleanupRelationships","rest","entries","reduce","acc","cur","_cur","slicedToArray","relationshipData","loadContent","loadSingleContent","executeAction","saveContent","addContent","deleteContent","loadUser","rootSaga","CONTENT_REQUESTED","CONTENT_LOADED","action","sort","page","offset","limit","path","contentList","filter","operator","value","typeGroup","group","conjunction","typearticle","typepage","accumulator","defineProperty","condition","memberOf","include","content_marked","CONTENT_SINGLE_REQUESTED","CONTENT_SINGLE_LOADED","_ref$data","content_marked2","CONTENT_SAVE","contentSave","CONTENT_ADD","contentAdd","CONTENT_DELETE","contentDelete","ACTION_EXECUTE","SUPPORTED_ACTIONS","_ref2","_ref2$payload","nids","saveAction","contentItem","String","plugin","sticky","promote","x","all","content_marked3","_ref3","_ref4","_ref5","_ref5$0$data$attribut","contentTypeName","MessageHelpers_MessageSave","content_marked4","_ref6","contentName","_context5","push","_marked5","_ref7","_context6","_marked6","USER_REQUESTED","USER_LOADED","_ref8","_ref8$data","user","_context7","_marked7","_context8","_marked8","noContentMessage","ContentTable_templateObject","ContentTable","checked","setChecked","_this$props$page","count","ref","table","Table_default","TableHead_default","TableRow_default","TableCell_default","padding","Checkbox_default","onChange","event","selectAll","inputProps","aria-label","label","sortable","TableSortLabel_default","toLowerCase","active","tableSortHandler","TableBody_default","_node$attributes","rowSelectId","nextChecked","parse","htmlFor","Intl","DateTimeFormat","navigator","language","weekday","year","month","day","hour","minute","format","Date","style","whiteSpace","button","Edit_default","_02_atoms_OpsModalButton_OpsModalButton","Delete_default","TablePagination_default","rowsPerPage","onChangePage","pageChangeHandler","rowsPerPageOptions","labelDisplayedRows","nextIconButtonProps","backIconButtonProps","dialogActionName","ConfirmationDialog_templateObject","listItemText","ConfirmationDialog_templateObject2","ConfirmationDialog","dialogVisibility","actionLabel","shift","_ref5$attributes","Content_templateObject","addButton","Content_templateObject2","_templateObject3","formControl","_templateObject4","chips","_templateObject5","chip","_templateObject6","selectEmpty","_templateObject7","_templateObject8","filters","_templateObject9","_templateObject10","textField","_templateObject11","Content","dialogOpen","dialogClose","matchingAction","actionExecute","prevState","requestContent","build_default","position","marginBottom","TextField_default","placeholder","target","margin","FormControl_default","InputLabel_default","Select_default","multiple","input","Input_default","renderValue","selected","Chip_default","MenuItem_default","indexOf","autoWidth","disabled","values","Boolean","Content_ConfirmationDialog","Add_default","_04_templates_ContentTable_ContentTable","requestActions","defaultProps","rotate","keyframes","Loading_templateObject","Loading_templateObject2","peace","Loading_templateObject3","Loading","TABLE","TR","TD","THEAD","Table_TR","tr","Table_TD","td","TBODY","rows","tbody","colspan","tds","tdKey","tdValue","tdClassName","cx","colSpan","thead","Table_templateObject","Table_templateObject2","Table_templateObject3","Table_templateObject4","filterPermissions","permissions","provider","providerLabel","provider_label","Permissions","_Component","_getPrototypeOf2","_len","args","_key","apply","loaded","rawPermissions","renderablePermissions","working","onPermissionCheck","roleName","permission","changedRoles","toConsumableArray","Set","add","roles","togglePermission","fetchData","makeCancelable","Promise","match","params","b","is_admin","catch","err","roleIndex","index","splice","groupPermissions","createTableRows","groupedPermissions","providerMachineName","_ref6$","Permissions_templateObject","handleKeyPress","saveRoles","cancelFetch","inherits","createClass","react_sticky_lib","stickyBar","searchInput","onKeyDown","saveButton","Table_TABLE","Table_THEAD","_ref9","Table_TBODY","_02_atoms_Loading_Loading","Permissions_templateObject2","Permissions_templateObject3","Permissions_templateObject4","loadRoles","ROLES_LOADED","cancelled","roles_marked","watchRequestedRolesWithCancel","mark","watchRequestedRoles","race","task","cancel","take","Roles","_ref$attributes","requestRoles","cancelTask","ConnectedRoles","loadDblog","DBLOG_FILTER_UPDATED","DBLOG_COLLECTION_LOADED","dbLogEntriesTypes","dbLogEntries","types","severities","severityGroup","reports_marked","watchDblogRequests","Dblog","generateTableRows","wid","messageFormattedPlain","timestamp","severityFilterHandler","requestDblogCollection","filterOptions","from","option","typeFilterHandler","nextPage","previousPage","size","availableTypes","onBlur","dblog","lazyFunction","f","propName","componentName","lazySchemaType","PropTypes","shape","string","isRequired","properties","objectOf","createEntity","schema","default","agg","Add","styled","MultipleFields_templateObject","ListItemStyles","paddingLeft","paddingRight","ListItemIconStyles","cursor","MultipleFields","handle","currentIndex","newItemAdded","onMouseDown","currentTarget","onDragStart","_assertThisInitialize","assertThisInitialized","contains","dataTransfer","setData","effectAllowed","parseInt","dataset","preventDefault","onDragOver","_assertThisInitialize2","overIndex","selectedValue","onDragEnd","changeItem","_this$props2","propsValue","newValue","addAnotherItem","_this$props3","_assertThisInitialize3","onDragLeave","_assertThisInitialize4","usedValues","createEmptyItem","fullWidth","FormLabel_default","draggable","data-key","ListItemIcon_default","Reorder_default","autoFocus","mini","MultipleFields_Add","items","loadUiSchema","loadSchema","loadSchemaByEntityId","UI_SCHEMA_REQUESTED","UI_SCHEMA_LOADED","_action$payload","fieldSchema","formDisplaySchema","fieldStorageConfig","entity_type","targetEntityType","mode","schema_marked","SCHEMA_REQUESTED","SCHEMA_LOADED","_action$payload2","entitySchema","_describes","_format","schema_marked2","SCHEMA_BY_ENTITY_ID_REQUESTED","SCHEMA_BY_ENTITY_ID_LOADED","_action$payload3","schema_marked3","schema_marked4","func","OptionsSelect_templateObject","OptionsSelect","helpText","required","defaultValue","allowedValues","allowed_values","NativeSelect_default","machineName","humanName","FormHelperText_default","NumberTextfield","Number","InputProps","unsigned","endAdornment","suffix","InputAdornment_default","startAdornment","prefix","min","StringTextfield","BooleanCheckbox","FormControlLabel_default","control","BooleanCheckbox_templateObject","DatetimeTimestamp","toJSON","slice","InputLabelProps","shrink","Container","FileUpload_templateObject","Element","FileUpload_templateObject2","Text","FileUpload_templateObject3","marginTopDense","marginTop","FileUpload","total","files","errors","filesLength","isDisabled","stopPropagation","setElementStyles","dropEffect","onDrop","readFile","click","element","border","opacity","getFiles","uploadFile","file","reader","window","FileReader","onloadend","asyncToGenerator","_ref$target","readyState","result","resetState","onFileUpload","buffer","token","createdFile","DONE","Uint8Array","X-CSRF-Token","_x","readAsArrayBuffer","checkFile","lastModified","extension","split","_assertThisInitialize5","max_filesize","file_extensions","_assertThisInitialize6","_assertThisInitialize7","_assertThisInitialize8","_assertThisInitialize9","remainingUploads","slicedFiles","obj","forEach","isEnabled","fn","_assertThisInitialize10","_assertThisInitialize11","_assertThisInitialize12","innerRef","CloudUpload_default","display","LinearProgress_default","setItemById","item","findIndex","i","getItemsAsArray","CardWrapper","FileUploadWidget_templateObject","FileUploadWidget_templateObject2","Image","FileUploadWidget_templateObject3","FileUploadWidget_templateObject4","FileUploadWidget","selectedItems","setSelectedItems","recalculateSelectedItems","ids","fetchEntitites","entities","meta","prevProps","_this$props$schema","maxItems","maxItemsCount","FileUploadWidget_Element","_02_atoms_FileUpload_FileUpload","newItems","itemsAgg","uuid","filename","alt","Card_default","CardContent_default","_item$file","last","src","deleteItemById","Divider_default","results","EntityReferenceAutocomplete_templateObject","EntityReferenceAutocomplete_templateObject2","EntityReferenceAutocomplete","inputValue","suggestions","Map","getMaxItems","_this$determineEntity","determineEntityTypeAndBundlesFromSchema","_this$determineEntity2","enum","handleChange","handleInputChange","_this$determineEntity4","_this$determineEntity5","fetchSuggestedEntities","handleKeyDown","_this$state","keycode","handleDelete","_ref10$","bundles","_ref11","renderSuggestion","_ref12","suggestion","itemProps","highlightedIndex","selectedItem","isHighlighted","isSelected","fontWeight","renderInput","_ref13","other","inputRef","autoComplete","_this$state2","downshift_esm","itemToString","_ref14","getInputProps","getItemProps","isOpen","_ref15","_ref16","tabIndex","onDelete","square","TextTextarea","createValueFromString","RichTextEditor","extractValueString","valueString","componentDidUpdate","react_rte_default","container","TextTextarea_templateObject","TextTextarea_templateObject2","widgets","options_select","number","boolean_checkbox","datetime_timestamp","image_image","entity_reference_autocomplete","text_textarea","NodeForm","restored","onAttributeChange","entity","onSave","missingFields","resolveMissingRequiredFields","onRelationshipChange","fieldData","getSchemaInfo","unavailableFields","requiredFields","field","calculateState","uiSchema","restorableEntity","_ref10","createField","widget","_this$props$schema$pr","propType","widgetProps","widgetRoot","widgetComponent","widgetIsMultiple","_02_atoms_MultipleFields_MultipleFields","requestUiSchema","_this3","_this4","Snackbar_default","anchorOrigin","vertical","horizontal","autoHideDuration","ContentProps","aria-describedby","Close_default","icon","secondaryColumnFields","_sortUISchemaFields","startsWith","weight","currentFieldName","fieldStorageSettings","field_name","prototype","hasOwnProperty","settings","constraints","curr","right","left","gridRoot","renderRestoreSnackbar","fieldContainer","divider","NodeForm_templateObject","NodeForm_templateObject2","NodeForm_templateObject3","NodeForm_templateObject4","NodeForm_templateObject5","_05_pages_NodeForm","NodeEditForm","requestSchemaByEntityId","requestSingleContent","_02_atoms_PageTitle_PageTitle","NodeEditForm_templateObject","contentByNid","restorableContentEditById","change","extractRestorableEntity","NodeAddForm","forgeEntity","local","setMinutes","getMinutes","getTimezoneOffset","created","Math","round","requestUser","requestSchema","restorableContentAddByBundle","TaxonomyVocabulary","activeLink","vocabularyOperations","vid","MenuItem_MenuItem_default","Redirect","requestTaxonomyVocabulary","taxonomyVocabulary","vocabulary","loadTaxonomyVocabulary","loadTaxonomyTerms","TAXONOMY_VOCABULARY_REQUESTED","TAXONOMY_VOCABULARY_LOADED","taxonomy_marked","TAXONOMY_TERMS_REQUESTED","getTaxonomyVocabularyById","taxonomyVocabularyList","TAXONOMY_TERMS_LOADED","taxonomyTerms","taxonomy","taxonomy_marked2","taxonomy_marked3","TaxonomyTermsOverview_templateObject","TaxonomyTermsOverview","termOperations","tid","requestTaxonomyTerms","term","routes","/admin/content","/admin/people/permissions/:role?","/admin/people/roles","/admin/reports/dblog","/node/add","/node/:nid/edit","/node/add/:bundle","/admin/structure/taxonomy/manage/:vocabulary/overview","/admin/structure/taxonomy","Taxonomy","variantIcon","CheckCircleIcon","MESSAGE_SEVERITY_WARNING","WarningIcon","MESSAGE_SEVERITY_ERROR","ErrorIcon","MESSAGE_SEVERITY_INFO","InfoIcon","success","SnackbarMessage_templateObject","SnackbarMessage_templateObject2","info","SnackbarMessage_templateObject3","warning","SnackbarMessage_templateObject4","SnackbarMessage_templateObject5","iconVariant","SnackbarMessage_templateObject6","SnackbarMessage_templateObject7","SnackbarMessage","Icon","duration","SnackbarContent_default","severity","modifierClassMap","InlineMessage_templateObject","InlineMessage_templateObject2","InlineMessage_templateObject3","InlineMessage_templateObject4","InlineMessage_templateObject5","_modifierClassMap","Message","ErrorBoundary","InlineMessage","iconMap","ViewList_default","/admin/structure","Build_default","/admin/appearance","ColorLens_default","/admin/modules","Extension_default","/admin/config","Settings_default","/admin/people","People_default","/admin/reports","Assessment_default","/admin/help","Help_default","Default","outerWrapper","CssBaseline_default","Drawer_default","paper","drawerPaper","drawerOpen","drawerPaperClose","menuButtonWrapper","closeDrawer","menuButton","ChevronLeft_default","openDrawer","Menu_default","link","main","_06_wrappers_ErrorBoundary_ErrorBoundary","_02_atoms_SnackbarMessage_SnackbarMessage","requestMenu","Default_templateObject","Default_templateObject2","Default_templateObject3","Default_templateObject4","Default_templateObject5","Default_templateObject6","Default_templateObject7","withRouter","messages","NoMatch","location","pathname","applicationSaga","contentSaga","schemaSaga","taxonomySaga","actions_marked","initialState","filterString","reducers","now","random","LOCATION_CHANGE","message_formatted_plain","included","substr","applicationInitialState","contentInitialState","schemaInitialState","taxonomyInitialState","src_reducers","loadingBar","InitialRedirect","searchString","search","es_Redirect","history","createBrowserHistory","middleware","routerMiddleware","sagaMiddleware","createSagaMiddleware","store","createStore","combineReducers","router","routerReducer","deepMerge","storedState","localStorage","setItem","getItem","Cookie","decodeURIComponent","get","restoreState","composeWithDevTools","applyMiddleware","run","subscribe","getState","stringifiedState","localStorageStore","storeState","generateClassName","createGenerateClassName","jss","create","jssPreset","insertionPoint","getElementById","theme","createMuiTheme","typography","useNextVariants","App","JssProvider_default","react_redux_es","react_router_redux_es","_06_wrappers_Default_Default","Switch","Route","exact","route","isLocalhost","hostname","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","src_App","URL","origin","addEventListener","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cc763f49.chunk.js","sourcesContent":["/**\n * Error class for an API response outside the 200 range\n *\n * @param {number} status - the status code of the API response\n * @param {string} statusText - the status text of the API response\n * @param {object} response - the parsed JSON response of the API server if the\n *  'Content-Type' header signals a JSON response\n */\nclass ApiError extends Error {\n  constructor(status, statusText, response) {\n    super();\n    this.name = 'ApiError';\n    this.status = status;\n    this.statusText = statusText;\n    this.response = response;\n    this.message = `${status} - ${statusText}`;\n  }\n\n  static errorToHumanString(error) {\n    if (error.name === 'ApiError') {\n      return ApiError.toHumanString(error);\n    }\n    return error.toString();\n  }\n\n  static async toHumanString(error) {\n    try {\n      switch (error.status) {\n        case 403:\n          return `You don't have access: ${\n            (await error.response.json()).message\n          } Maybe you aren't logged in.`;\n        case 404:\n          return `Some page is missing: ${\n            (await error.response.json()).message\n          }`;\n        case 400:\n          return `You posted some invalid data, contact the administration team: ${\n            (await error.response.json()).message\n          }`;\n        case 500:\n          return `The server crashed, contact the administration team: ${\n            (await error.response.json()).message\n          }`;\n        default:\n          return error.toString();\n      }\n    } catch (e) {\n      return error.toString();\n    }\n  }\n}\n\n// eslint-disable-next-line import/prefer-default-export\nexport { ApiError };\n","import qs from 'qs';\nimport { ApiError } from './errors';\n\nasync function api(\n  endpoint,\n  { queryString = null, parameters = {}, options = {} } = {},\n) {\n  let url;\n  options.credentials = 'include';\n  options.headers = options.headers || {};\n\n  switch (endpoint) {\n    case 'menu':\n      url = '/admin-api/menu?_format=json';\n      break;\n    case 'dblog':\n      url = '/jsonapi/watchdog_entity/';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'csrf_token':\n      url = '/session/token';\n      options.text = true;\n      break;\n    case 'dblog:types':\n      url = '/admin-ui-support/dblog-types?_format=json';\n      break;\n    case 'roles':\n      url = '/jsonapi/user_role';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'role':\n      url = `/jsonapi/user_role/${parameters.role.id}`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'role:patch':\n      url = `/jsonapi/user_role/${parameters.role.id}`;\n      options.headers.Accept = 'application/vnd.api+json';\n      options.method = 'PATCH';\n      options.body = JSON.stringify({ data: parameters.role });\n      options.headers['Content-Type'] = 'application/vnd.api+json';\n      break;\n    case 'file:upload':\n      url = `/file/upload/${parameters.entityTypeId}/${parameters.bundle}/${\n        parameters.fieldName\n      }`;\n      options.method = 'POST';\n      options.headers['Content-Type'] = 'application/octet-stream';\n      options.headers['Content-Disposition'] = `file; filename=\"${\n        parameters.fileName\n      }\"`;\n      options.body = parameters.body;\n      break;\n    case 'permissions':\n      url = '/admin-api/permissions?_format=json';\n      break;\n    case 'content':\n      url = '/jsonapi/node';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'content_single':\n      url = `/jsonapi/node/${parameters.bundle}/${parameters.id}`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'file':\n      url = `/jsonapi/file`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'actions':\n      url = '/jsonapi/action';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'contentTypes':\n      url = '/jsonapi/node_type';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    case 'node:delete': {\n      // Set the type to the right value for jsonapi to process.\n      // @todo Ideally this should not be differnet in the first place.\n      parameters.node = {\n        ...parameters.node,\n        type: parameters.node.type.includes('--')\n          ? parameters.node.type\n          : `node--${parameters.node.type}`,\n      };\n\n      const deleteToken = await api('csrf_token');\n      // @todo Delete requests sadly return non json.\n      options.text = true;\n      options.headers.Accept = 'application/vnd.api+json';\n      options.headers['X-CSRF-Token'] = deleteToken;\n      options.headers['Content-Type'] = 'application/vnd.api+json';\n      options.method = 'DELETE';\n      url = parameters.node.links.self.replace(\n        process.env.REACT_APP_DRUPAL_BASE_URL,\n        '',\n      );\n      break;\n    }\n    case 'node:add': {\n      const { node } = parameters;\n      // Set the type to the right value for jsonapi to process.\n      // @todo Ideally this should not be differnet in the first place.\n      node.type = node.type.includes('--') ? node.type : `node--${node.type}`;\n\n      // Ensure that we don't have an ID when creating new content.\n      delete node.id;\n      delete node.attributes.nid;\n      delete node.attributes.revision_timestamp;\n      delete node.attributes.changed;\n\n      // Delete revision_uid, type, uid\n      delete node.relationships.revision_uid;\n      delete node.relationships.type;\n      delete node.relationships.uid;\n\n      const saveToken = await api('csrf_token');\n      options.headers.Accept = 'application/vnd.api+json';\n      options.headers['X-CSRF-Token'] = saveToken;\n      options.method = 'POST';\n      options.body = JSON.stringify({ data: node });\n      url = `/jsonapi/${node.type.replace('--', '/')}`;\n      break;\n    }\n    case 'node:save': {\n      // Set the type to the right value for jsonapi to process.\n      // @todo Ideally this should not be differnet in the first place.\n      parameters.node = {\n        ...parameters.node,\n        type: parameters.node.type.includes('--')\n          ? parameters.node.type\n          : `node--${parameters.node.type}`,\n      };\n\n      const saveToken = await api('csrf_token');\n      options.headers.Accept = 'application/vnd.api+json';\n      options.headers['X-CSRF-Token'] = saveToken;\n      options.method = 'PATCH';\n      options.body = JSON.stringify({ data: parameters.node });\n      url = parameters.node.links.self.replace(\n        process.env.REACT_APP_DRUPAL_BASE_URL,\n        '',\n      );\n      break;\n    }\n    case 'taxonomy_vocabulary': {\n      url = '/jsonapi/taxonomy_vocabulary';\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    }\n    case 'taxonomy_term': {\n      url = `/jsonapi/taxonomy_term/${parameters.type}`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    }\n    case 'user': {\n      url = `/jsonapi/user`;\n      options.headers.Accept = 'application/vnd.api+json';\n      break;\n    }\n    case 'schema': {\n      url = `/schemata/${[parameters.entityTypeId, parameters.bundle].join(\n        '/',\n      )}`;\n      break;\n    }\n    case 'schema_by_id': {\n      url = `/admin-api/entity-schema/${parameters.entityTypeId}/${\n        parameters.entityId\n      }`;\n      break;\n    }\n    case 'field_schema': {\n      url = '/jsonapi/field_config';\n      break;\n    }\n    case 'form_display': {\n      url = '/jsonapi/entity_form_display';\n      break;\n    }\n    case 'field_storage_config': {\n      url = '/jsonapi/field_storage_config';\n      break;\n    }\n    default:\n      break;\n  }\n\n  const data = await fetch(\n    `${process.env.REACT_APP_DRUPAL_BASE_URL}${url}${\n      queryString\n        ? `?${qs.stringify(queryString, { arrayFormat: 'brackets' })}`\n        : ''\n    }`,\n    options,\n  ).then(res => {\n    if (![200, 201, 204].includes(res.status)) {\n      throw new ApiError(res.status, res.statusText, res);\n    }\n\n    // CSRF tokens return text, not json.\n    if (options.text) {\n      return res.text();\n    }\n    return res.json();\n  });\n  return data;\n}\n\nexport default api;\n","// messageSeverity – used to determine render traits based on message severity.\nexport const MESSAGE_SEVERITY_ERROR = 'MESSAGE_SEVERITY_ERROR';\nexport const MESSAGE_SEVERITY_SUCCESS = 'MESSAGE_SEVERITY_SUCCESS';\nexport const MESSAGE_SEVERITY_INFO = 'MESSAGE_SEVERITY_INFO';\nexport const MESSAGE_SEVERITY_WARNING = 'MESSAGE_SEVERITY_WARNING';\n","import { call, put, select, takeLatest, takeEvery } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport api from '../utils/api/api';\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_SUCCESS,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_WARNING,\n} from '../constants/messages';\nimport { ApiError } from '../utils/api/errors';\n\nexport const OPEN_DRAWER = 'OPEN_DRAWER';\nexport const openDrawer = () => ({\n  type: OPEN_DRAWER,\n});\n\nexport const CLOSE_DRAWER = 'CLOSE_DRAWER';\nexport const closeDrawer = () => ({\n  type: CLOSE_DRAWER,\n});\n\nexport const SET_MESSAGE = 'SET_MESSAGE';\n\n/**\n *\n * @param {string} message - the message content\n * @param {string} severity - the severity level of the message, one of the levels\n *  listed at constants/messages.js\n * @returns {{type: string, payload: {message: *, messageSeverity: *}}}\n */\nexport const setMessage = (message, messageSeverity) => ({\n  type: SET_MESSAGE,\n  payload: {\n    message,\n    messageSeverity,\n  },\n});\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_ERROR}}}\n */\nexport const setErrorMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_ERROR);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_SUCCESS}}}\n */\nexport const setSuccessMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_SUCCESS);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_INFO}}}\n */\nexport const setInfoMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_INFO);\n\n/**\n * @param {string} message - the message content\n *\n * @returns {{type: string, payload: {message: *, messageSeverity: MESSAGE_SEVERITY_WARNING}}}\n */\nexport const setWarningMessage = message =>\n  setMessage(message, MESSAGE_SEVERITY_WARNING);\n\nexport const CLEAR_MESSAGE = 'CLEAR_MESSAGE';\nexport const clearMessage = key => ({\n  type: CLEAR_MESSAGE,\n  payload: {\n    key,\n  },\n});\n\nexport const CLEAR_ALL_MESSAGES = 'CLEAR_MESSAGES';\nexport const clearAllMessages = () => ({\n  type: CLEAR_ALL_MESSAGES,\n  payload: {},\n});\n\nexport const MENU_REQUESTED = 'MENU_REQUESTED';\nexport const requestMenu = () => ({\n  type: MENU_REQUESTED,\n  payload: {},\n});\n\nexport const MENU_LOADED = 'MENU_LOADED';\nfunction* loadMenu() {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const menuLinks = yield call(api, 'menu');\n\n    yield put({\n      type: MENU_LOADED,\n      payload: {\n        menuLinks,\n      },\n    });\n  } catch (error) {\n    if (process.env.REACT_APP_DRUPAL_BASE_URL.includes('localhost')) {\n      yield put(\n        setErrorMessage(\n          'Unable to access data from Drupal. Did you set REACT_APP_DRUPAL_BASE_URL to localhost instead of 127.0.0.1?',\n        ),\n      );\n    }\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\n/**\n * Gets all available content types.\n */\nexport const CONTENT_TYPES_REQUESTED = 'CONTENT_TYPES_REQUESTED';\nexport const requestContentTypes = () => ({\n  type: CONTENT_TYPES_REQUESTED,\n  payload: {},\n});\n\nexport const contentTypesSelector = state => state.application.contentTypes;\nexport const CONTENT_TYPES_LOADED = 'CONTENT_TYPES_LOADED';\nfunction* loadContentTypes() {\n  try {\n    const contentTypes = yield call(api, 'contentTypes');\n    yield put({\n      type: CONTENT_TYPES_LOADED,\n      payload: {\n        contentTypes,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\n/**\n * Gets all available action types.\n */\nexport const ACTIONS_REQUESTED = 'ACTIONS_REQUESTED';\nexport const requestActions = () => ({\n  type: ACTIONS_REQUESTED,\n  payload: {},\n});\n\nexport const getActionsCache = state => state.application.actions;\nexport const ACTIONS_LOADED = 'ACTIONS_LOADED';\nfunction* loadActions() {\n  try {\n    let actions = { data: yield select(getActionsCache) };\n    if (!Object.keys(actions.data).length) {\n      actions = yield call(api, 'actions');\n    }\n    yield put({\n      type: ACTIONS_LOADED,\n      payload: {\n        actions,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  }\n}\n\nexport default function* watchRequestedMenu() {\n  yield takeLatest(MENU_REQUESTED, loadMenu);\n  yield takeLatest(CONTENT_TYPES_REQUESTED, loadContentTypes);\n  yield takeEvery(ACTIONS_REQUESTED, loadActions);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\nimport { css } from 'emotion';\n\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  title: css`\n    margin: 10px 3px 40px;\n  `,\n};\n\nconst PageTitle = ({ children }) => (\n  <Typography variant=\"h4\" classes={{ root: styles.title }}>\n    {children}\n  </Typography>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nconst reducePropsToState = propsList => {\n  const innermostProps = propsList[propsList.length - 1];\n  if (innermostProps) {\n    return innermostProps.children;\n  }\n\n  return null;\n};\n\n/**\n * Set the title of the page based on the children of PageTitle.\n *\n * @param  {(String|Array)} title\n *   Title may be an array if the number children is > 1\n */\nconst handleStateChangeOnClient = title => {\n  document.title = (Array.isArray(title) ? title : [title])\n    .map(e => (e && typeof e === 'string' ? e.trim() : ''))\n    .join(' ');\n};\n\nexport default withSideEffect(reducePropsToState, handleStateChangeOnClient)(\n  PageTitle,\n);\n","import PageTitle from './PageTitle';\n\nexport default PageTitle;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Markup } from 'interweave';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PageTitle from '../../02_atoms/PageTitle';\n\nconst styles = {\n  menuLink: css`\n    text-decoration: inherit;\n  `,\n  root: css`\n    margin-bottom: 50px;\n  `,\n};\n\nexport default class extends Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    requestContentTypes: PropTypes.func.isRequired,\n  };\n\n  componentDidMount() {\n    this.props.requestContentTypes();\n  }\n\n  render = () => (\n    <div className={styles.root}>\n      <PageTitle>Add content</PageTitle>\n      <Paper>\n        <List data-nightwatch=\"node-type-list\">\n          {Object.keys(this.props.contentTypes).map(contentType => (\n            <ListItem component=\"li\" key={`node-add-${contentType}`}>\n              <Link className={styles.menuLink} to={`/node/add/${contentType}`}>\n                <ListItemText\n                  primary={this.props.contentTypes[contentType].name}\n                  secondary={\n                    <Markup\n                      content={this.props.contentTypes[contentType].description}\n                    />\n                  }\n                />\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n      </Paper>\n    </div>\n  );\n}\n","import { connect } from 'react-redux';\n\nimport { requestContentTypes } from '../../../actions/application';\n\nimport AddContent from './AddContent';\n\nconst mapStateToProps = state => ({\n  contentTypes: state.application.contentTypes,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestContentTypes },\n)(AddContent);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n  return <Slide direction=\"up\" {...props} />;\n}\n\n/* A Drupal specific button, for use in the operations column of a table.\n *\n * Typically a Add, Edit or Delete icon can be provided as a child element\n * see for example  '@material-ui/icons/Add'\n *\n * When pressed a modal dialog slides up into view.\n */\nclass OpsModalButton extends React.Component {\n  static propTypes = {\n    /**\n     * The dialog title.\n     */\n    title: PropTypes.string.isRequired,\n    /**\n     * The text below the dialog title.\n     */\n    text: PropTypes.string.isRequired,\n    /**\n     * The confirm button label.\n     */\n    confirmText: PropTypes.string.isRequired,\n    /**\n     * The cancel button label.\n     */\n    cancelText: PropTypes.string.isRequired,\n    /**\n     * Children of the button.\n     */\n    children: PropTypes.node.isRequired,\n    /**\n     * Called when the confirm button is pressed.\n     */\n    enterAction: PropTypes.func.isRequired,\n  };\n\n  state = {\n    open: false,\n  };\n\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    // Pass all props except those consumed here down into the button.\n    const {\n      title,\n      text,\n      cancelText,\n      confirmText,\n      enterAction,\n      ...buttonProps\n    } = this.props;\n\n    return (\n      <Fragment>\n        <IconButton {...buttonProps} onClick={this.handleClickOpen}>\n          {this.props.children}\n        </IconButton>\n        <Dialog\n          open={this.state.open}\n          TransitionComponent={Transition}\n          onClose={this.handleClose}\n        >\n          <DialogTitle>{title}</DialogTitle>\n          <DialogContent>\n            <DialogContentText>{text}</DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button\n              onClick={() => {\n                enterAction();\n                this.handleClose();\n              }}\n              color=\"primary\"\n            >\n              {confirmText}\n            </Button>\n            <Button onClick={this.handleClose} color=\"primary\">\n              {cancelText}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Fragment>\n    );\n  }\n}\n\nexport default OpsModalButton;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst MessageSave = ({ bundle, title, nid }) => (\n  <Fragment>\n    <p>\n      {bundle} <Link to={`/node/${nid}`}>{title}</Link> has been updated\n    </p>\n  </Fragment>\n);\n\nMessageSave.propTypes = {\n  bundle: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  nid: PropTypes.number.isRequired,\n};\n\nexport default MessageSave;\n","export const extractContentType = content =>\n  content && content.type && content.type.substring('node--'.length);\n\nexport const mapContentTypeToName = (contentTypes, contentType) =>\n  contentTypes &&\n  contentType &&\n  contentTypes[contentType] &&\n  contentTypes[contentType].name;\n\nexport const cleanupRelationships = ({ relationships, ...rest }) => ({\n  ...rest,\n  relationships: Object.entries(relationships).reduce((acc, cur) => {\n    const [key, { data: relationshipData }] = cur;\n    if (\n      typeof relationshipData === 'object' &&\n      relationshipData.id &&\n      relationshipData.type &&\n      relationshipData.id !== '' &&\n      relationshipData.type !== ''\n    ) {\n      acc[key] = { data: relationshipData };\n    }\n    if (Array.isArray(relationshipData) && relationshipData.length) {\n      acc[key] = { data: relationshipData };\n    }\n    return acc;\n  }, {}),\n});\n","import React from 'react';\nimport {\n  put,\n  call,\n  takeLatest,\n  takeEvery,\n  select,\n  all,\n} from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport { push } from 'react-router-redux';\n\nimport api from '../utils/api/api';\nimport {\n  contentTypesSelector,\n  setErrorMessage,\n  setSuccessMessage,\n  requestContentTypes,\n} from './application';\n\nimport MessageSave from '../components/01_subatomics/MessageHelpers/MessageSave';\nimport { extractContentType, mapContentTypeToName } from '../utils/api/content';\nimport { ApiError } from '../utils/api/errors';\n\nexport const CONTENT_REQUESTED = 'CONTENT_REQUESTED';\nexport const requestContent = (\n  options = { contentTypes: [], status: null },\n) => ({\n  type: CONTENT_REQUESTED,\n  payload: { options },\n});\n\nexport const CONTENT_LOADED = 'CONTENT_LOADED';\nfunction* loadContent(action) {\n  const title =\n    (action.payload.options && action.payload.options.title) || null;\n  const contentTypes =\n    (action.payload.options && action.payload.options.contentTypes) || [];\n  const status =\n    (action.payload.options && action.payload.options.status) || null;\n  const sort = (action.payload.options && action.payload.options.sort) || null;\n  const page = (action.payload.options && action.payload.options.page) || null;\n\n  try {\n    yield put(showLoading());\n\n    const queryString = {\n      filter: {},\n    };\n\n    if (page) {\n      const { offset, limit } = page;\n      queryString.page = { offset, limit };\n    }\n\n    if (sort) {\n      const { path, direction } = sort;\n      queryString.sort = `${(direction === 'DESC' && '-') || ''}${path}`;\n    }\n\n    if (title && title.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        title: {\n          path: 'title',\n          operator: 'CONTAINS',\n          value: title,\n        },\n      };\n    }\n    if (contentTypes.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        typeGroup: { group: { conjunction: 'OR' } },\n        typearticle: {},\n        typepage: {},\n        ...contentTypes.reduce(\n          (accumulator, contentType) => ({\n            ...accumulator,\n            [`type${contentType}`]: {\n              condition: {\n                value: contentType,\n                path: 'type',\n                memberOf: 'typeGroup',\n              },\n            },\n          }),\n          {},\n        ),\n      };\n    }\n    if (status && status.length) {\n      queryString.filter = {\n        ...queryString.filter,\n        status: {\n          value: status === 'published' ? 1 : 0,\n        },\n      };\n    }\n\n    queryString.include = 'uid';\n\n    // Unset this, otherwise it'll send 'filter=' to JSON:API and cause an error.\n    if (!Object.keys(queryString.filter).length) {\n      delete queryString.filter;\n    }\n\n    const contentList = yield call(api, 'content', { queryString });\n    yield put({\n      type: CONTENT_LOADED,\n      payload: {\n        contentList,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const CONTENT_SINGLE_REQUESTED = 'CONTENT_SINGLE_REQUESTED';\nexport const requestSingleContent = nid => ({\n  type: CONTENT_SINGLE_REQUESTED,\n  payload: { nid },\n});\n\nexport const CONTENT_SINGLE_LOADED = 'CONTENT_SINGLE_LOADED';\nfunction* loadSingleContent(action) {\n  const {\n    payload: { nid },\n  } = action;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const {\n      data: [content],\n    } = yield call(api, 'content', {\n      queryString: {\n        filter: { condition: { path: 'nid', value: nid } },\n      },\n    });\n\n    yield put({\n      type: CONTENT_SINGLE_LOADED,\n      payload: {\n        content,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const CONTENT_ADD_CHANGE = 'CONTENT_ADD_CHANGE';\nexport const contentAddChange = (bundle, entity) => ({\n  type: CONTENT_ADD_CHANGE,\n  payload: { bundle, entity },\n});\n\nexport const CONTENT_EDIT_CHANGE = 'CONTENT_EDIT_CHANGE';\nexport const contentEditChange = (bundle, entity) => ({\n  type: CONTENT_EDIT_CHANGE,\n  payload: { bundle, entity },\n});\n\nexport const CONTENT_SAVE = 'CONTENT_SAVE';\nexport const contentSave = content => ({\n  type: CONTENT_SAVE,\n  payload: {\n    content,\n  },\n});\n\nexport const CONTENT_ADD = 'CONTENT_ADD';\nexport const contentAdd = (content, bundle) => ({\n  type: CONTENT_ADD,\n  payload: {\n    content,\n    bundle,\n  },\n});\n\nexport const CONTENT_DELETE = 'CONTENT_DELETE';\nexport const contentDelete = content => ({\n  type: CONTENT_DELETE,\n  payload: {\n    content,\n  },\n});\n\nexport const ACTION_EXECUTE = 'ACTION_EXECUTE';\nexport const actionExecute = (action, nids) => ({\n  type: ACTION_EXECUTE,\n  payload: {\n    action,\n    nids,\n  },\n});\n\nexport const SUPPORTED_ACTIONS = [\n  'entity:delete_action:node',\n  'node_make_sticky_action',\n  'node_make_unsticky_action',\n  'node_promote_action',\n  'entity:publish_action:node',\n  'node_unpromote_action',\n  'entity:unpublish_action:node',\n];\n\n// @todo How do we update the store with the new values of the nodes\n//    or the deleted nodes, see https://github.com/jsdrupal/drupal-admin-ui/issues/131\n// @todo Once jsonapi supports bulk operations, leverage it.\nexport function* executeAction({ payload: { action, nids } }) {\n  try {\n    const contentList = yield select(state => state.content.contentList);\n    const actions = nids\n      .map(nid => {\n        const node = contentList.filter(\n          contentItem => String(contentItem.attributes.nid) === nid,\n        )[0];\n\n        let saveAction;\n        switch (action.attributes.plugin) {\n          case 'entity:delete_action:node':\n            saveAction = put(contentDelete(node));\n            break;\n          case 'node_make_sticky_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  sticky: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_make_unsticky_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  sticky: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_promote_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  promote: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'node_unpromote_action':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  promote: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'entity:publish_action:node':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  status: true,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          case 'entity:unpublish_action:node':\n            saveAction = put(\n              contentSave({\n                id: node.id,\n                type: node.type,\n                attributes: {\n                  status: false,\n                },\n                links: node.links,\n              }),\n            );\n            break;\n          default:\n            break;\n        }\n        return saveAction;\n      })\n      .filter(x => x);\n    yield all(actions);\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* saveContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const [\n      {\n        data: {\n          attributes: { title, nid },\n        },\n      },\n    ] = yield all([\n      api('node:save', { parameters: { node: content } }),\n      put(requestContentTypes()),\n    ]);\n\n    // Get the content types from the redux state\n    const contentTypes = yield select(contentTypesSelector);\n    // Extract the content type from the content data\n    const contentType = extractContentType(content);\n\n    // Map the content type to the human-readable name\n    const contentTypeName =\n      mapContentTypeToName(contentTypes, contentType) || 'unknown';\n\n    yield put(\n      setSuccessMessage(\n        <MessageSave bundle={contentTypeName} title={title} nid={nid} />,\n      ),\n    );\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* addContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    yield all([\n      call(api, 'node:add', { parameters: { node: content } }),\n      put(requestContentTypes()),\n    ]);\n\n    // Get the content types from the redux state\n    const contentTypes = yield select(contentTypesSelector);\n    // Extract the content type from the content data\n    const contentType = extractContentType(content);\n    // Map the content type to the human-readable name\n    const contentName =\n      mapContentTypeToName(contentTypes, contentType) || 'unknown';\n\n    yield put(push('/admin/content'));\n    yield put(setSuccessMessage(`New ${contentName} added successfully`));\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nfunction* deleteContent({ payload: { content } }) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    yield call(api, 'node:delete', { parameters: { node: content } });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const USER_REQUESTED = 'USER_REQUESTED';\nexport const requestUser = uid => ({\n  type: USER_REQUESTED,\n  payload: { uid },\n});\n\nexport const USER_LOADED = 'USER_LOADED';\nfunction* loadUser(action) {\n  const {\n    payload: { uid },\n  } = action;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const {\n      data: [user],\n    } = yield call(api, 'user', {\n      queryString: {\n        filter: { condition: { path: 'uid', value: uid } },\n      },\n    });\n\n    yield put({\n      type: USER_LOADED,\n      payload: {\n        user,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(CONTENT_REQUESTED, loadContent);\n  yield takeEvery(CONTENT_SAVE, saveContent);\n  yield takeLatest(CONTENT_SINGLE_REQUESTED, loadSingleContent);\n  yield takeEvery(ACTION_EXECUTE, executeAction);\n  yield takeLatest(CONTENT_ADD, addContent);\n  yield takeEvery(CONTENT_DELETE, deleteContent);\n  yield takeLatest(USER_REQUESTED, loadUser);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\nimport { connect } from 'react-redux';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport OpsModalButton from '../../02_atoms/OpsModalButton/OpsModalButton';\n\nimport { contentDelete } from '../../../actions/content';\n\nconst styles = {\n  noContentMessage: css`\n    padding: 0 1.5rem 1.5rem;\n  `,\n};\n\nclass ContentTable extends React.Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    contentList: PropTypes.arrayOf(PropTypes.object).isRequired,\n    contentDelete: PropTypes.func.isRequired,\n    pageChangeHandler: PropTypes.func.isRequired,\n    tableSortHandler: PropTypes.func.isRequired,\n    setChecked: PropTypes.func.isRequired,\n    includes: PropTypes.shape({\n      'user--user': PropTypes.object,\n    }).isRequired,\n    links: PropTypes.shape({\n      next: PropTypes.string,\n    }).isRequired,\n    page: PropTypes.shape({\n      offset: PropTypes.number.isRequired,\n      limit: PropTypes.number.isRequired,\n    }).isRequired,\n    sort: PropTypes.shape({\n      path: PropTypes.string.isRequired,\n      direction: PropTypes.oneOf(['DESC', 'ASC']).isRequired,\n    }).isRequired,\n    checked: PropTypes.objectOf(PropTypes.bool).isRequired,\n  };\n\n  selectAll(checked) {\n    this.props.setChecked(\n      (checked &&\n        this.props.contentList.map(({ attributes: { nid } }) => nid).reduce(\n          (acc, cur) => ({\n            ...acc,\n            [cur]: true,\n          }),\n          {},\n        )) ||\n        {},\n    );\n  }\n\n  render() {\n    const {\n      links,\n      contentList,\n      page: { offset, limit },\n    } = this.props;\n    // Calculate the highest known count.\n    const count = offset + contentList.length + (links.next ? 1 : 0);\n\n    return (\n      <div\n        ref={node => {\n          this.table = node;\n        }}\n      >\n        <Table>\n          <TableHead>\n            <TableRow>\n              {\n                <TableCell padding=\"checkbox\">\n                  <Checkbox\n                    id=\"selectAll\"\n                    onChange={(event, checked) => this.selectAll(checked)}\n                    inputProps={{ 'aria-label': 'select all content' }}\n                  />\n                </TableCell>\n              }\n              {[\n                { key: 'title', label: 'Title', sortable: true },\n                {\n                  key: 'type',\n                  label: 'Content Type',\n                  sortable: true,\n                },\n                this.props.includes['user--user']\n                  ? {\n                      key: 'author',\n                      label: 'Author',\n                      sortable: false,\n                    }\n                  : undefined,\n                { key: 'status', label: 'Status', sortable: true },\n                { key: 'changed', label: 'Updated', sortable: true },\n                {\n                  key: 'operations',\n                  label: 'Operations',\n                  sortable: false,\n                },\n              ]\n                .filter(x => x)\n                .map(\n                  ({ key, label, sortable }) =>\n                    sortable ? (\n                      <TableCell key={key}>\n                        <TableSortLabel\n                          direction={\n                            this.props.sort.path === key\n                              ? this.props.sort.direction.toLowerCase()\n                              : undefined\n                          }\n                          active={this.props.sort.path === key}\n                          onClick={this.props.tableSortHandler(\n                            key,\n                            (this.props.sort.path !== key && 'DESC') ||\n                              ((this.props.sort.direction === 'DESC' &&\n                                'ASC') ||\n                                'DESC'),\n                          )}\n                        >\n                          {label}\n                        </TableSortLabel>\n                      </TableCell>\n                    ) : (\n                      <TableCell key={key}>{label}</TableCell>\n                    ),\n                )}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.props.contentList.map(node => {\n              const {\n                type,\n                attributes: { changed, nid, status, title },\n                relationships,\n              } = node;\n              const rowSelectId = `row-select-for-${String(nid)}`;\n              return (\n                <TableRow key={nid}>\n                  {\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        id={rowSelectId}\n                        value={String(nid)}\n                        onChange={(event, checked) => {\n                          this.props.setChecked(\n                            (() => {\n                              // Clone the object to not change the props directly.\n                              const nextChecked = JSON.parse(\n                                JSON.stringify(this.props.checked),\n                              );\n                              nextChecked[nid] = checked;\n                              return nextChecked;\n                            })(),\n                          );\n                        }}\n                        checked={this.props.checked[nid] || false}\n                      />\n                    </TableCell>\n                  }\n                  <TableCell>\n                    <Link to={`/node/${nid}`}>\n                      <label htmlFor={rowSelectId}>{title}</label>\n                    </Link>\n                  </TableCell>\n                  <TableCell>{this.props.contentTypes[type].name}</TableCell>\n                  {this.props.includes['user--user'] && (\n                    <TableCell>\n                      {this.props.includes['user--user'][\n                        relationships.uid.data.id\n                      ] ? (\n                        <Link\n                          to={`/user/${\n                            this.props.includes['user--user'][\n                              relationships.uid.data.id\n                            ].attributes.uid\n                          }`}\n                        >\n                          {\n                            this.props.includes['user--user'][\n                              relationships.uid.data.id\n                            ].attributes.name\n                          }\n                        </Link>\n                      ) : (\n                        'Anonymous (not verified)'\n                      )}\n                    </TableCell>\n                  )}\n                  <TableCell>\n                    {(status && 'Published') || 'Unpublished'}\n                  </TableCell>\n                  <TableCell>\n                    {new Intl.DateTimeFormat(navigator.language, {\n                      weekday: 'long',\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric',\n                      hour: 'numeric',\n                      minute: 'numeric',\n                    }).format(new Date(changed * 1000))}\n                  </TableCell>\n                  <TableCell style={{ whiteSpace: 'nowrap' }}>\n                    <IconButton\n                      aria-label=\"edit\"\n                      className={styles.button}\n                      component={Link}\n                      data-nightwatch={`Edit ${title}`}\n                      to={`/node/${nid}/edit`}\n                    >\n                      <EditIcon />\n                    </IconButton>\n                    <OpsModalButton\n                      aria-label=\"delete\"\n                      className={styles.button}\n                      title={`Are you sure that you want to delete this content ${title}?`}\n                      text=\"This action cannot be undone.\"\n                      cancelText=\"Cancel\"\n                      confirmText=\"Delete\"\n                      enterAction={() => {\n                        this.props.contentDelete(node);\n                      }}\n                    >\n                      <DeleteIcon />\n                    </OpsModalButton>\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n        <TablePagination\n          component=\"div\"\n          count={count}\n          rowsPerPage={limit}\n          page={offset / limit}\n          onChangePage={this.props.pageChangeHandler}\n          rowsPerPageOptions={[limit]}\n          labelDisplayedRows={({ page }) => `Page: ${page + 1}`}\n          nextIconButtonProps={{ 'aria-label': 'Next content page.' }}\n          backIconButtonProps={{\n            'aria-label': 'Previous content page.',\n          }}\n        />\n        {!this.props.contentList.length && (\n          <Typography className={styles.noContentMessage}>\n            There is no content yet. {<Link to=\"/node/add\">Add one</Link>}.\n          </Typography>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { contentDelete },\n)(ContentTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n  dialogActionName: css`\n    text-transform: lowercase;\n  `,\n  listItemText: css`\n    list-style-type: disc;\n    display: list-item;\n  `,\n};\n\nconst ConfirmationDialog = ({\n  action,\n  actions,\n  checked,\n  contentList,\n  dialogVisibility,\n  handleClose,\n  executeAction,\n}) => {\n  const actionLabel = actions\n    .filter(({ attributes: { id } }) => id === action)\n    .map(({ attributes: { label } }) => label)\n    .shift();\n  return (\n    <Dialog\n      open={dialogVisibility}\n      TransitionComponent={props => <Slide direction=\"up\" {...props} />}\n      onClose={handleClose}\n    >\n      <DialogTitle>\n        Are you sure you want to apply the &quot;\n        <span className={styles.dialogActionName}>{actionLabel}</span>\n        &quot; action to these content items?\n      </DialogTitle>\n      <DialogContent>\n        <List>\n          {contentList\n            .filter(({ attributes: { nid } }) =>\n              Object.keys(checked).includes(`${nid}`),\n            )\n            .map(({ attributes: { title, nid } }) => (\n              <ListItem key={nid}>\n                <ListItemText className={styles.listItemText}>\n                  {`${title}`}\n                </ListItemText>\n              </ListItem>\n            ))}\n        </List>\n        <Typography>This action cannot be undone.</Typography>\n      </DialogContent>\n      <DialogActions>\n        <Button\n          onClick={() => {\n            executeAction();\n            handleClose();\n          }}\n          color=\"primary\"\n        >\n          {actionLabel}\n        </Button>\n        <Button onClick={handleClose} color=\"primary\">\n          <p>Cancel</p>\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nConfirmationDialog.propTypes = {\n  action: PropTypes.string.isRequired,\n  actions: PropTypes.arrayOf(PropTypes.object).isRequired,\n  checked: PropTypes.objectOf(PropTypes.bool).isRequired,\n  contentList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  dialogVisibility: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  executeAction: PropTypes.func.isRequired,\n};\n\nexport default ConfirmationDialog;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport PageTitle from '../../02_atoms/PageTitle';\nimport ContentTable from '../../04_templates/ContentTable/ContentTable';\n\nimport ConfirmationDialog from './ConfirmationDialog';\n\nimport {\n  requestContentTypes,\n  requestActions,\n} from '../../../actions/application';\nimport {\n  requestContent,\n  SUPPORTED_ACTIONS,\n  actionExecute,\n} from '../../../actions/content';\n\nconst styles = {\n  root: css`\n    margin-bottom: 50px;\n  `,\n  addButton: css`\n    margin: 0.5rem;\n    position: fixed;\n    right: 0;\n    bottom: 0;\n  `,\n  action: css`\n    margin: 0.5rem;\n    margin-left: 0rem;\n    min-width: 8rem;\n    max-width: 19rem;\n  `,\n  formControl: css`\n    margin: 0.5rem;\n    min-width: 8rem;\n    max-width: 19rem;\n  `,\n  chips: css`\n    display: flex;\n    flex-wrap: wrap;\n  `,\n  chip: css`\n    margin: 0.5rem;\n  `,\n  selectEmpty: css`\n    margin-top: 0.5rem;\n  `,\n  button: css`\n    margin: 0.5rem;\n  `,\n  filters: css`\n    padding: 0 1.5rem;\n  `,\n  noContentMessage: css`\n    padding: 0 1.5rem 1.5rem;\n  `,\n  textField: css`\n    width: 300px;\n  `,\n};\n\nclass Content extends Component {\n  static propTypes = {\n    contentTypes: PropTypes.objectOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        description: PropTypes.string.isRequired,\n      }),\n    ).isRequired,\n    requestContent: PropTypes.func.isRequired,\n    requestContentTypes: PropTypes.func.isRequired,\n    contentList: PropTypes.arrayOf(PropTypes.object),\n    requestActions: PropTypes.func.isRequired,\n    actionExecute: PropTypes.func.isRequired,\n    actions: PropTypes.arrayOf(PropTypes.object),\n    includes: PropTypes.shape({\n      'user--user': PropTypes.object,\n    }),\n    links: PropTypes.shape({\n      next: PropTypes.string,\n    }),\n  };\n\n  static defaultProps = {\n    contentList: [],\n    includes: {},\n    actions: [],\n    links: {},\n  };\n\n  state = {\n    contentTypes: [],\n    status: null,\n    sort: { path: 'changed', direction: 'DESC' },\n    page: {\n      offset: 0,\n      limit: 50,\n    },\n    action: null,\n    checked: {},\n    dialogVisibility: false,\n  };\n\n  componentDidMount() {\n    this.props.requestContentTypes();\n    this.props.requestContent(this.state);\n    this.props.requestActions();\n  }\n\n  dialogOpen = () => this.setState({ dialogVisibility: true });\n\n  dialogClose = () =>\n    this.setState({ dialogVisibility: false, action: null, checked: {} });\n\n  executeAction = () => {\n    const matchingAction = this.props.actions.filter(\n      action => action.attributes.id === this.state.action,\n    )[0];\n    this.props.actionExecute(matchingAction, Object.keys(this.state.checked));\n    this.setState({ checked: {}, action: null });\n  };\n\n  tableSortHandler = (path, direction) => () => {\n    this.setState(\n      prevState => ({\n        sort: { path, direction },\n        page: { offset: 0, limit: prevState.page.limit },\n      }),\n      () => {\n        this.props.requestContent(this.state);\n      },\n    );\n  };\n\n  pageChangeHandler = (event, page) => {\n    this.setState(\n      ({ page: { limit } }) => ({\n        page: { offset: page * limit, limit },\n      }),\n      () => {\n        this.props.requestContent(this.state);\n      },\n    );\n  };\n\n  render = () => (\n    <div className={styles.root}>\n      <PageTitle>Content</PageTitle>\n      <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n      <Paper>\n        {this.props.contentTypes &&\n          this.props.actions && (\n            <Fragment>\n              <div className={styles.filters}>\n                {this.props.contentTypes &&\n                  this.props.actions && (\n                    <Fragment>\n                      <TextField\n                        inputProps={{ 'aria-label': 'Title' }}\n                        label=\"Title\"\n                        placeholder=\"Title\"\n                        className={styles.textField}\n                        onChange={e => {\n                          this.setState({ title: e.target.value }, () => {\n                            this.props.requestContent(this.state);\n                          });\n                        }}\n                        margin=\"normal\"\n                      />\n\n                      <FormControl className={styles.formControl}>\n                        <InputLabel htmlFor=\"select-multiple-checkbox\">\n                          Content Type\n                        </InputLabel>\n                        <Select\n                          multiple\n                          value={this.state.contentTypes}\n                          data-nightwatch=\"content-type-select\"\n                          onChange={e => {\n                            this.setState(\n                              { contentTypes: e.target.value },\n                              () => {\n                                this.props.requestContent(this.state);\n                              },\n                            );\n                          }}\n                          input={\n                            <Input\n                              name=\"content-type\"\n                              id=\"select-multiple-checkbox\"\n                            />\n                          }\n                          renderValue={selected => (\n                            <div className={styles.chips}>\n                              {selected.map(value => (\n                                <Chip\n                                  key={value}\n                                  label={this.props.contentTypes[value].name}\n                                  className={styles.chip}\n                                />\n                              ))}\n                            </div>\n                          )}\n                        >\n                          {Object.keys(this.props.contentTypes).map(type => (\n                            <MenuItem key={type} value={type}>\n                              <Checkbox\n                                checked={\n                                  this.state.contentTypes.indexOf(type) > -1\n                                }\n                              />\n                              <ListItemText\n                                primary={this.props.contentTypes[type].name}\n                              />\n                            </MenuItem>\n                          ))}\n                        </Select>\n                      </FormControl>\n\n                      <FormControl className={styles.formControl}>\n                        <InputLabel htmlFor=\"status\">Status</InputLabel>\n                        <Select\n                          value={this.state.status || ''}\n                          onChange={e => {\n                            this.setState({ status: e.target.value }, () => {\n                              this.props.requestContent(this.state);\n                            });\n                          }}\n                          input={<Input name=\"status\" id=\"status\" />}\n                          autoWidth\n                        >\n                          <MenuItem value=\"\">\n                            <em>Any</em>\n                          </MenuItem>\n                          <MenuItem value=\"published\">Published</MenuItem>\n                          <MenuItem value=\"unpublished\">Unpublished</MenuItem>\n                        </Select>\n                      </FormControl>\n\n                      <div>\n                        <FormControl\n                          className={styles.action}\n                          disabled={\n                            Object.values(this.state.checked).filter(Boolean)\n                              .length === 0 || false\n                          }\n                        >\n                          <InputLabel htmlFor=\"action\">Actions</InputLabel>\n                          <Select\n                            value={this.state.action || ''}\n                            onChange={e => {\n                              this.setState({ action: e.target.value });\n                            }}\n                            input={<Input name=\"action\" id=\"action\" />}\n                            autoWidth\n                          >\n                            <MenuItem value=\"\">\n                              <em>None</em>\n                            </MenuItem>\n                            {this.props.actions.map(action => (\n                              <MenuItem\n                                key={action.id}\n                                value={action.attributes.id}\n                              >\n                                {action.attributes.label}\n                              </MenuItem>\n                            ))}\n                          </Select>\n                        </FormControl>\n\n                        {this.state.action &&\n                          Object.values(this.state.checked).filter(Boolean)\n                            .length !== 0 && (\n                            <Fragment>\n                              <Button\n                                // onClick={this.executeAction}\n                                onClick={this.dialogOpen}\n                                color=\"primary\"\n                                variant=\"contained\"\n                              >\n                                Apply\n                              </Button>\n                              <ConfirmationDialog\n                                action={this.state.action}\n                                actions={this.props.actions}\n                                checked={this.state.checked}\n                                contentList={this.props.contentList}\n                                dialogVisibility={this.state.dialogVisibility}\n                                handleClose={this.dialogClose}\n                                executeAction={this.executeAction}\n                              />\n                            </Fragment>\n                          )}\n                      </div>\n                    </Fragment>\n                  )}\n\n                <Button\n                  variant=\"fab\"\n                  color=\"primary\"\n                  aria-label=\"add\"\n                  className={styles.addButton}\n                  component={Link}\n                  to=\"/node/add\"\n                >\n                  <AddIcon />\n                </Button>\n              </div>\n              <ContentTable\n                pageChangeHandler={this.pageChangeHandler}\n                tableSortHandler={this.tableSortHandler}\n                links={this.props.links}\n                contentList={this.props.contentList}\n                page={this.state.page}\n                includes={this.props.includes}\n                sort={this.state.sort}\n                contentTypes={this.props.contentTypes}\n                checked={this.state.checked}\n                setChecked={values => {\n                  this.setState({ checked: values });\n                }}\n              />\n            </Fragment>\n          )}\n      </Paper>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contentTypes: state.application.contentTypes,\n  contentList: state.content.contentList,\n  includes: state.content.includes,\n  links: state.content.links,\n  actions: state.application.actions.filter(action =>\n    SUPPORTED_ACTIONS.includes(action.attributes.plugin),\n  ),\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    requestActions,\n    requestContentTypes,\n    requestContent,\n    actionExecute,\n  },\n)(Content);\n","import React from 'react';\nimport { css, keyframes } from 'emotion';\n\nlet rotate = null;\nlet styles;\n\nconst Loading = () => (\n  <div className={styles.wrap}>\n    <span className={styles.peace} role=\"img\" aria-label=\"Peace Sign\">\n      ✌\n    </span>\n  </div>\n);\n\nrotate = keyframes`\n  from {\n    transform: rotate(-10deg);\n  }\n  to {\n    transform: rotate(10deg);\n  }\n`;\n\nstyles = {\n  wrap: css`\n    margin: 100px auto 0;\n  `,\n  peace: css`\n    display: inline-block;\n    vertical-align: middle;\n    animation-direction: alternate;\n    animation-iteration-count: infinite;\n    animation-duration: 0.5s;\n    animation-timing-function: cubic-bezier(0, 0, 1, 1);\n    transform-origin: bottom;\n    font-size: 50px;\n    animation-name: ${rotate};\n  `,\n};\n\nexport default Loading;\n","import React from 'react';\nimport { css, cx } from 'emotion';\nimport PropTypes from 'prop-types';\n\nlet styles;\n\nconst TABLE = ({ children, ...props }) => (\n  <table className={styles.table} {...props}>\n    {children}\n  </table>\n);\nTABLE.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst TR = ({ children, ...props }) => <tr {...props}>{children}</tr>;\nTR.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst TD = ({ children, ...props }) => <td {...props}>{children}</td>;\nTD.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nconst THEAD = ({ data }) => (\n  <thead>\n    <TR className={styles.tr}>\n      {data.map(label => (\n        <TD className={styles.td} key={`column-${label}`}>\n          {label}\n        </TD>\n      ))}\n    </TR>\n  </thead>\n);\nTHEAD.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nconst TBODY = ({ rows }) => (\n  <tbody className={styles.tbody}>\n    {rows.map(({ colspan, tds, key }) => (\n      <TR key={key} className={styles.tr}>\n        {tds.map(([tdKey, tdValue, tdClassName]) => (\n          <TD\n            className={cx(styles.td, tdClassName || '')}\n            key={tdKey}\n            colSpan={colspan || undefined}\n          >\n            {tdValue}\n          </TD>\n        ))}\n      </TR>\n    ))}\n  </tbody>\n);\nTBODY.propTypes = {\n  rows: PropTypes.arrayOf(\n    PropTypes.shape({\n      colspan: PropTypes.number,\n      key: PropTypes.string,\n      tds: PropTypes.arrayOf(PropTypes.node).isRequired,\n    }),\n  ).isRequired,\n};\n\nstyles = {\n  thead: css``,\n  tbody: css`\n    tr:hover,\n    tr:focus {\n      background: #f7fcff;\n    }\n  `,\n  tr: css`\n    border-bottom: 1px solid #c7c7c7;\n  `,\n  td: css`\n    padding: 10px 12px;\n    text-align: left;\n  `,\n};\n\nexport { TR, TD, TABLE as Table, TBODY as TBody, THEAD as THead };\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport makeCancelable from 'makecancelable';\nimport { Markup } from 'interweave';\nimport { css } from 'emotion';\nimport { StickyContainer, Sticky } from 'react-sticky';\n\nimport Loading from '../../02_atoms/Loading/Loading';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nimport api from '../../../utils/api/api';\nimport { MESSAGE_SEVERITY_SUCCESS } from '../../../constants/messages';\nimport { setMessage, clearMessage } from '../../../actions/application';\n\nexport const filterPermissions = (input, permissions) =>\n  permissions.filter(\n    ({ title, description, provider, provider_label: providerLabel }) =>\n      `${title}${description}${provider}${providerLabel}`\n        .toLowerCase()\n        .includes(input.toLowerCase()),\n  );\n\nlet styles;\n\nconst Permissions = class Permissions extends Component {\n  static propTypes = {\n    setMessage: PropTypes.func.isRequired,\n    clearMessage: PropTypes.func.isRequired,\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        role: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n  };\n\n  state = {\n    loaded: false,\n    rawPermissions: [],\n    renderablePermissions: [],\n    working: false,\n  };\n\n  componentDidMount() {\n    this.cancelFetch = this.fetchData();\n  }\n\n  componentWillUnmount() {\n    this.cancelFetch();\n  }\n\n  onPermissionCheck = (roleName, permission) => {\n    this.setState(prevState => ({\n      changedRoles: [...new Set(prevState.changedRoles).add(roleName).values()],\n      roles: this.togglePermission(permission, roleName, prevState.roles),\n    }));\n    this.props.clearMessage();\n  };\n\n  fetchData = () =>\n    makeCancelable(\n      Promise.all([api('permissions'), api('roles')])\n        .then(([permissions, { data: roles }]) =>\n          this.setState({\n            rawPermissions: permissions,\n            renderablePermissions: permissions,\n            changedRoles: [],\n            working: false,\n            // Move admin roles to the right.\n            roles:\n              this.props.match.params.role &&\n              roles\n                .map(role => role.attributes.id)\n                .includes(this.props.match.params.role)\n                ? roles.filter(\n                    role => role.attributes.id === this.props.match.params.role,\n                  )\n                : roles.sort((a, b) => {\n                    if (a.attributes.is_admin && b.attributes.is_admin) {\n                      return a.attributes.id - b.attributes.id;\n                    }\n                    if (a.attributes.is_admin) {\n                      return 1;\n                    }\n                    if (b.attributes.is_admin) {\n                      return -1;\n                    }\n                    return a.attributes.id - b.attributes.id;\n                  }),\n            loaded: true,\n          }),\n        )\n        .catch(err => this.setState({ loaded: false, err })),\n    );\n\n  togglePermission = (permission, roleName, roles) => {\n    const roleIndex = roles.map(role => role.attributes.id).indexOf(roleName);\n    const role = roles[roleIndex];\n    const index = role.attributes.permissions.indexOf(permission);\n    if (index !== -1) {\n      role.attributes.permissions.splice(index, 1);\n    } else {\n      role.attributes.permissions.push(permission);\n    }\n    roles[roleIndex] = role;\n    return roles;\n  };\n\n  groupPermissions = permissions =>\n    Object.entries(\n      permissions.reduce((acc, cur) => {\n        acc[cur.provider] = acc[cur.provider] || {\n          providerLabel: cur.provider_label,\n          permissions: [],\n        };\n        acc[cur.provider].permissions.push(cur);\n        return acc;\n      }, {}),\n    );\n\n  createTableRows = (groupedPermissions, roles) =>\n    [].concat(\n      ...groupedPermissions.map(\n        ([providerMachineName, { providerLabel, permissions }]) => [\n          {\n            key: `permissionGroup-${providerMachineName}`,\n            colspan: roles.length + 1,\n            tds: [[`td-${providerMachineName}`, <b>{providerLabel}</b>]],\n          },\n          ...permissions.map(permission => ({\n            key: `permissionGroup-${providerMachineName}-${permission.title}`,\n            tds: [\n              [\n                `td-${providerMachineName}-${permission.title}`,\n                <Fragment>\n                  <Markup content={permission.title} />\n                  {permission['restrict access'] && (\n                    <span>\n                      <em>\n                        {' '}\n                        Warning: Give to trusted roles only; this permission has\n                        security implications.{' '}\n                      </em>\n                    </span>\n                  )}\n                  {permission.description && (\n                    <Markup content={` ${permission.description}`} />\n                  )}\n                </Fragment>,\n                css`\n                  padding: 0 0 0 30px;\n                `,\n              ],\n              ...roles.map(({ attributes }, index) => [\n                `td-${providerMachineName}-${permission.title}-${index}-cb`,\n                attributes.is_admin && attributes.id === 'administrator' ? (\n                  <input type=\"checkbox\" checked disabled=\"disabled\" />\n                ) : (\n                  <input\n                    type=\"checkbox\"\n                    onChange={() =>\n                      this.onPermissionCheck(attributes.id, permission.id)\n                    }\n                    checked={attributes.permissions.includes(permission.id)}\n                  />\n                ),\n              ]),\n            ],\n          })),\n        ],\n      ),\n    );\n\n  handleKeyPress = event => {\n    const input = event.target.value;\n    this.setState(prevState => ({\n      ...prevState,\n      renderablePermissions: filterPermissions(input, prevState.rawPermissions),\n    }));\n  };\n\n  saveRoles = () => {\n    this.setState(\n      prevState => ({ ...prevState, working: true }),\n      () =>\n        Promise.all(\n          this.state.roles\n            .filter(role =>\n              this.state.changedRoles.includes(role.attributes.id),\n            )\n            .map(role =>\n              api('role:patch', {\n                parameters: {\n                  role,\n                },\n              }).then(() => {\n                this.props.setMessage(\n                  'Changes have been saved',\n                  MESSAGE_SEVERITY_SUCCESS,\n                );\n              }),\n            ),\n        ).then(() => {\n          this.cancelFetch = this.fetchData();\n        }),\n    );\n  };\n\n  render() {\n    if (this.state.err) {\n      throw new Error('Error while loading page');\n    } else if (!this.state.loaded) {\n      return <Loading />;\n    }\n    return (\n      <StickyContainer>\n        <Sticky>\n          {({ style }) => (\n            <div style={style} className={styles.stickyBar}>\n              <input\n                type=\"text\"\n                className={styles.searchInput}\n                placeholder=\"Filter by name, description or module\"\n                onChange={this.handleKeyPress}\n                onKeyDown={this.handleKeyPress}\n              />\n              <button\n                type=\"submit\"\n                key=\"button-save-roles\"\n                onClick={this.saveRoles}\n                className={styles.saveButton}\n                disabled={\n                  !this.state.changedRoles.length ||\n                  (this.state.working && this.state.changedRoles.length)\n                }\n              >\n                Save\n              </button>\n            </div>\n          )}\n        </Sticky>\n        <Table>\n          <THead\n            data={[\n              'Permission',\n              ...this.state.roles.map(({ attributes: { label } }) => label),\n            ]}\n          />\n          <TBody\n            rows={this.createTableRows(\n              this.groupPermissions(this.state.renderablePermissions),\n              this.state.roles,\n            )}\n          />\n        </Table>\n      </StickyContainer>\n    );\n  }\n};\n\nstyles = {\n  stickyBar: css`\n    padding: 1.5rem 0;\n    background: #fff;\n    border-bottom: 1px solid #e6e6e6;\n  `,\n  saveButton: css`\n    float: right;\n    color: #333;\n    background-color: #fff;\n    display: inline-block;\n    padding: 6px 12px;\n    margin-bottom: 0;\n    text-align: center;\n    vertical-align: middle;\n    touch-action: manipulation;\n    cursor: pointer;\n    user-select: none;\n    background-image: none;\n    border: 1px solid #ccc;\n  `,\n  searchInput: css`\n    color: #555;\n    width: 400px;\n    padding: 6px 12px;\n    border: 1px solid #ccc;\n    background-color: #fff;\n  `,\n};\n\nexport default connect(\n  null,\n  { setMessage, clearMessage },\n)(Permissions);\n","import {\n  put,\n  call,\n  takeLatest,\n  race,\n  take,\n  cancelled,\n} from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport api from '../utils/api/api';\n\nimport { setErrorMessage } from './application';\nimport { ApiError } from '../utils/api/errors';\n\nexport const ROLES_REQUESTED = 'ROLES_REQUESTED';\nexport const requestRoles = () => ({\n  type: ROLES_REQUESTED,\n  payload: {},\n});\n\nexport const ROLES_LOADED = 'ROLES_LOADED';\nfunction* loadRoles() {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n    const roles = yield call(api, 'roles');\n    yield put({\n      type: ROLES_LOADED,\n      payload: {\n        roles,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n    if (yield cancelled()) {\n      // do a thing\n    }\n  }\n}\n\nexport const watchRequestedRolesWithCancel = function* watchRequestedRoles() {\n  const { cancel } = yield race({\n    task: takeLatest(ROLES_REQUESTED, loadRoles),\n    cancel: take('CANCEL_TASK'),\n  });\n  if (cancel) {\n    // do a thing.\n  }\n};\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport { requestRoles } from '../../../actions/roles';\nimport { cancelTask } from '../../../actions/helpers';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nexport const Roles = class Roles extends Component {\n  componentDidMount() {\n    this.props.requestRoles();\n  }\n\n  componentWillUnmount() {\n    this.props.cancelTask();\n  }\n\n  createTableRows = roles =>\n    roles.map(({ attributes: { label, id } }) => ({\n      key: `row-${label}`,\n      tds: [\n        [`td-${label}`, label],\n        [\n          `td-${label}-actions`,\n          <Link to={`/admin/people/permissions/${id}`}>Edit Permissions</Link>,\n        ],\n      ],\n    }));\n\n  render = () => {\n    if (!this.props.roles) {\n      return <LoadingBar />;\n    }\n    return (\n      <Table>\n        <THead data={['NAME', 'OPERATIONS']} />\n        <TBody rows={this.createTableRows(this.props.roles)} />\n      </Table>\n    );\n  };\n};\n\nRoles.propTypes = {\n  requestRoles: PropTypes.func.isRequired,\n  cancelTask: PropTypes.func.isRequired,\n  roles: PropTypes.arrayOf(PropTypes.object),\n};\n\nRoles.defaultProps = {\n  roles: [],\n};\n\nconst mapStateToProps = ({ application: { roles } }) => ({\n  roles,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestRoles, cancelTask },\n)(Roles);\n","import ConnectedRoles from './Roles';\n\nexport default ConnectedRoles;\n","export const CANCEL_TASK = 'CANCEL_TASK';\nexport const cancelTask = () => ({\n  type: CANCEL_TASK,\n  payload: {},\n});\n","import { put, call, takeLatest } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\nimport api from '../utils/api/api';\nimport { setErrorMessage } from './application';\nimport { ApiError } from '../utils/api/errors';\n\nexport const DBLOG_COLLECTION_REQUEST = 'DBLOG_COLLECTION_REQUEST';\nexport const requestDblogCollection = options => ({\n  type: DBLOG_COLLECTION_REQUEST,\n  payload: { options },\n});\n\nexport const DBLOG_FILTER_UPDATED = 'DBLOG_FILTER_UPDATED';\n\nexport const DBLOG_COLLECTION_LOADED = 'DBLOG_COLLECTION_LOADED';\nexport function* loadDblog({ payload: { options } }) {\n  try {\n    const queryString = {\n      sort: options.sort || '',\n      page: {\n        limit: 50,\n        ...(options.offset\n          ? {\n              offset: options.offset,\n            }\n          : {}),\n      },\n      filter: {\n        ...(options.types && Object.keys(options.types).length\n          ? options.types.reduce(\n              (acc, cur) => ({\n                ...acc,\n                [`type${cur}`]: {\n                  condition: {\n                    value: cur,\n                    path: 'type',\n                    memberOf: 'typeGroup',\n                  },\n                },\n              }),\n              { typeGroup: { group: { conjunction: 'OR' } } },\n            )\n          : {}),\n        ...(options.severities && Object.keys(options.severities).length\n          ? options.severities.reduce(\n              (acc, cur) => ({\n                ...acc,\n                [`severity${cur}`]: {\n                  condition: {\n                    value: cur,\n                    path: 'severity',\n                    memberOf: 'severityGroup',\n                  },\n                },\n              }),\n              {\n                severityGroup: {\n                  group: {\n                    conjunction: 'OR',\n                  },\n                },\n              },\n            )\n          : {}),\n      },\n    };\n    yield put(resetLoading());\n    yield put(showLoading());\n    yield put({\n      type: DBLOG_FILTER_UPDATED,\n      payload: {\n        options,\n      },\n    });\n    const dbLogEntriesTypes = yield call(api, 'dblog:types');\n    const dbLogEntries = yield call(api, 'dblog', { queryString });\n    yield put({\n      type: DBLOG_COLLECTION_LOADED,\n      payload: {\n        dbLogEntries,\n        dbLogEntriesTypes,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield call(ApiError.errorToHumanString, error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const watchDblogRequests = function* watchDblogRequests() {\n  yield takeLatest(DBLOG_COLLECTION_REQUEST, loadDblog);\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { Markup } from 'interweave';\n\nimport { requestDblogCollection } from '../../../actions/reports';\nimport { Table, TBody, THead } from '../../01_subatomics/Table/Table';\n\nclass Dblog extends Component {\n  static propTypes = {\n    requestDblogCollection: PropTypes.func.isRequired,\n    entries: PropTypes.arrayOf(\n      PropTypes.shape({\n        wid: PropTypes.number.isRequired,\n        messageFormattedPlain: PropTypes.string.isRequired,\n        timestamp: PropTypes.number.isRequired,\n        type: PropTypes.string.isRequired,\n      }),\n    ),\n    availableTypes: PropTypes.arrayOf(PropTypes.string),\n    filterOptions: PropTypes.shape({\n      sort: PropTypes.string,\n      severities: PropTypes.arrayOf(PropTypes.string),\n      offset: PropTypes.number,\n      types: PropTypes.arrayOf(PropTypes.string),\n    }),\n    next: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    entries: null,\n    availableTypes: null,\n    filterOptions: {\n      sort: '',\n      severities: [],\n    },\n    next: true,\n  };\n\n  componentDidMount() {\n    this.props.requestDblogCollection({\n      ...this.props.filterOptions,\n      sort: '-timestamp',\n    });\n  }\n\n  generateTableRows = entries =>\n    entries.map(({ wid, type, messageFormattedPlain, timestamp }) => ({\n      key: String(wid),\n      tds: [\n        [`type-${wid}`, type],\n        [`timestamp-${wid}`, timestamp],\n        [\n          `markup-${wid}`,\n          <Markup\n            content={`${\n              messageFormattedPlain.length > 48\n                ? `${messageFormattedPlain.substring(0, 48)}…`\n                : messageFormattedPlain\n            }`}\n          />,\n        ],\n        [`user-${wid}`, ''],\n      ],\n    }));\n\n  severityFilterHandler = e =>\n    this.props.requestDblogCollection({\n      types: null,\n      offset: 0,\n      ...this.props.filterOptions,\n      severities: Array.from(e.target.options)\n        .filter(option => option.selected)\n        .map(option => option.value),\n    });\n\n  typeFilterHandler = e =>\n    this.props.requestDblogCollection({\n      severities: null,\n      offset: 0,\n      ...this.props.filterOptions,\n      types: Array.from(e.target.options)\n        .filter(option => option.selected)\n        .map(option => option.value),\n    });\n\n  nextPage = () =>\n    this.props.requestDblogCollection({\n      severities: null,\n      ...this.props.filterOptions,\n      offset: (this.props.filterOptions.offset || 0) + 50,\n    });\n\n  previousPage = () =>\n    this.props.requestDblogCollection({\n      severities: null,\n      ...this.props.filterOptions,\n      offset: (this.props.filterOptions.offset || 0) - 50,\n    });\n\n  render() {\n    if (!this.props.entries) {\n      return <LoadingBar />;\n    }\n    return (\n      <Fragment>\n        <select\n          key=\"select-type\"\n          label=\"Type\"\n          multiple\n          size={this.props.availableTypes.length}\n          onBlur={this.typeFilterHandler}\n          selected={this.props.filterOptions.types}\n        >\n          {this.props.availableTypes.map(type => (\n            <option value={type} key={type}>\n              {type}\n            </option>\n          ))}\n        </select>\n        <select\n          key=\"select-severity\"\n          label=\"Severity\"\n          multiple\n          size={8}\n          onBlur={this.severityFilterHandler}\n          selected={this.props.filterOptions.severities}\n        >\n          {[\n            'Emergency',\n            'Alert',\n            'Critical',\n            'Error',\n            'Warning',\n            'Notice',\n            'Info',\n            'Debug',\n          ].map((value, index) => (\n            <option value={index} key={value}>\n              {value}\n            </option>\n          ))}\n        </select>\n        <button\n          type=\"button\"\n          onClick={this.previousPage}\n          disabled={this.props.filterOptions.offset <= 0}\n        >\n          prev\n        </button>\n        <button\n          type=\"button\"\n          onClick={this.nextPage}\n          disabled={!this.props.next}\n        >\n          next\n        </button>\n        <Table>\n          <THead data={['Type', 'Date', 'Message', 'User']} />\n          <TBody rows={this.generateTableRows(this.props.entries)} />\n        </Table>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({ application: { dblog } }) => ({\n  filterOptions: {\n    offset: 0,\n  },\n  ...dblog,\n});\n\nexport default connect(\n  mapStateToProps,\n  { requestDblogCollection },\n)(Dblog);\n","import PropTypes from 'prop-types';\n\nconst lazyFunction = f => (props, propName, componentName, ...rest) =>\n  f(props, propName, componentName, ...rest);\n\nlet schemaType;\nconst lazySchemaType = lazyFunction(() => schemaType);\n\nexport default PropTypes.shape({\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string,\n  description: PropTypes.string,\n  properties: PropTypes.objectOf(lazyFunction(lazySchemaType)),\n});\n","const createEntity = schema => {\n  if (typeof schema.default !== 'undefined') {\n    return schema.default;\n  }\n  switch (schema.type) {\n    case 'object':\n      return Object.entries(schema.properties).reduce(\n        (agg, [key, value]) => ({\n          ...agg,\n          [key]: createEntity(value),\n        }),\n        {},\n      );\n    case 'array':\n      return [];\n    case 'string':\n      return '';\n    case 'number':\n      return 0.0;\n    case 'integer':\n      return 0;\n    case 'boolean':\n      return true;\n    case 'language_reference':\n      return null;\n    default:\n      throw new Error('Unhandled case');\n  }\n};\n\nconst createUISchema = (\n  fieldSchema,\n  formDisplaySchema,\n  fieldStorageConfig,\n  widgets,\n) =>\n  Array.from(\n    new Set([...Object.keys(fieldSchema), ...Object.keys(formDisplaySchema)]),\n  )\n    .filter(\n      fieldName =>\n        Object.keys(widgets).filter(name =>\n          formDisplaySchema[fieldName].type.startsWith(name),\n        ).length,\n    )\n    .sort((a, b) => formDisplaySchema[a].weight - formDisplaySchema[b].weight)\n    .reduce((acc, currentFieldName) => {\n      const widget =\n        widgets[\n          Object.keys(widgets)\n            .filter(name =>\n              formDisplaySchema[currentFieldName].type.startsWith(name),\n            )\n            .shift()\n        ];\n      const fieldStorageSettings = fieldStorageConfig\n        .filter(\n          ({ attributes: { field_name: fieldName } }) =>\n            fieldName === currentFieldName,\n        )\n        .shift();\n      const inputProps = {\n        ...(Object.prototype.hasOwnProperty.call(fieldSchema, currentFieldName)\n          ? fieldSchema[currentFieldName].attributes.settings\n          : {}),\n        ...(Object.prototype.hasOwnProperty.call(\n          formDisplaySchema,\n          currentFieldName,\n        )\n          ? formDisplaySchema[currentFieldName].settings\n          : {}),\n        ...(fieldStorageSettings\n          ? fieldStorageSettings.attributes.settings\n          : {}),\n      };\n      acc.push({\n        fieldName: currentFieldName,\n        constraints: [],\n        widget,\n        inputProps,\n      });\n      return acc;\n    }, []);\n\nconst sortUISchemaFields = (schema, secondaryColumnFields) =>\n  schema.reduce(\n    (acc, curr) => {\n      acc[\n        (secondaryColumnFields.includes(curr.fieldName) && 'right') || 'left'\n      ].push(curr);\n      return acc;\n    },\n    { right: [], left: [] },\n  );\n\nexport { createEntity, createUISchema, sortUISchemaFields };\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport List from '@material-ui/core/List';\nimport AddIcon from '@material-ui/icons/Add';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport ReorderIcon from '@material-ui/icons/Reorder';\nimport FormControl from '@material-ui/core/FormControl';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport { createEntity } from '../../../utils/api/schema';\nimport SchemaPropType from '../../05_pages/NodeForm/SchemaPropType';\n\nconst Add = styled('div')`\n  .icon {\n    margin-left: 10px;\n  }\n`;\n\nconst style = {\n  ListItemStyles: {\n    paddingLeft: 0,\n    paddingRight: 0,\n  },\n  ListItemIconStyles: {\n    cursor: 'move',\n    margin: '0 0 0 16px',\n  },\n};\n\nclass MultipleFields extends Component {\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    component: PropTypes.func.isRequired,\n    value: PropTypes.arrayOf(PropTypes.string).isRequired,\n    schema: SchemaPropType.isRequired,\n  };\n\n  /**\n   * Initial state\n   */\n  state = {\n    handle: null,\n    currentIndex: -1,\n    newItemAdded: false,\n  };\n\n  /**\n   * Sets the state handle with the handle target.\n   * @param {Event} event\n   */\n  onMouseDown = event => {\n    this.setState({\n      handle: event.currentTarget,\n    });\n  };\n\n  /**\n   * Sets the state value with the selected element.\n   * @param {Event} event\n   */\n  onDragStart = event => {\n    const {\n      props: { value },\n      state: { handle },\n    } = this;\n\n    // Don't allow dragging if not handle or only one item in props.value\n    if (!event.target.contains(handle) || value.length === 1) {\n      event.preventDefault();\n      return;\n    }\n    // setData needed for FireFox, needs to setData to work\n    event.dataTransfer.setData('text', '');\n    event.dataTransfer.effectAllowed = 'move';\n    const currentIndex = parseInt(event.currentTarget.dataset.key, 10);\n\n    this.setState({\n      currentIndex,\n    });\n  };\n\n  /**\n   * Changes the current value with the value that is under the\n   * current value, and replace the over value with the current\n   * value.\n   * @param {Event} event\n   */\n  onDragOver = event => {\n    event.preventDefault();\n    const {\n      props: { value },\n      state: { currentIndex },\n    } = this;\n\n    const overIndex = parseInt(event.currentTarget.dataset.key, 10);\n    if (currentIndex !== overIndex) {\n      const selectedValue = value[currentIndex];\n      // Changes the two values with one another\n      value[currentIndex] = value[overIndex];\n      value[overIndex] = selectedValue;\n\n      this.setState({\n        currentIndex: overIndex,\n      });\n    }\n  };\n\n  /**\n   * Will update the state and call the onChange method\n   * once the element has been reordered.\n   */\n  onDragEnd = () => {\n    const { value, onChange } = this.props;\n    this.setState(\n      {\n        handle: null,\n        currentIndex: -1,\n      },\n      () => {\n        onChange(value);\n      },\n    );\n  };\n\n  /**\n   * Updated the current value of the input.\n   * @param {Event} event\n   * @param {String} value\n   */\n  changeItem = index => value => {\n    const { value: propsValue, onChange } = this.props;\n    const newValue = [...propsValue];\n    newValue[index] = value;\n    onChange(newValue);\n  };\n\n  /**\n   * Adds another empty string to the current set of values.\n   */\n  addAnotherItem = () => {\n    const { value, onChange } = this.props;\n    const newValue = [...value, ''];\n    this.setState(\n      {\n        newItemAdded: true,\n      },\n      () => {\n        onChange(newValue);\n      },\n    );\n  };\n\n  createEmptyItem() {\n    return createEntity(this.props.schema.items);\n  }\n\n  render = () => {\n    const {\n      onDragEnd,\n      changeItem,\n      onDragOver,\n      onDragLeave,\n      onDragStart,\n      onMouseDown,\n      addAnotherItem,\n      state: { newItemAdded },\n      props: { label, value: values, component, onChange },\n    } = this;\n\n    // values && values.length is to validate the object is not null and not an empty array, respectively\n    // the last `&& values` is to make sure after validation, it always return `values`  instead of `values.length`\n    const usedValues = (values && values.length && values) || [\n      this.createEmptyItem(),\n    ];\n    return (\n      <FormControl margin=\"normal\" fullWidth>\n        <FormLabel component=\"legend\">{label}</FormLabel>\n        <List>\n          {usedValues &&\n            usedValues.map((value, index) => (\n              <ListItem\n                draggable\n                // eslint-disable-next-line react/no-array-index-key\n                key={index}\n                data-key={index}\n                onDragEnd={onDragEnd}\n                onDragOver={onDragOver}\n                onDragLeave={onDragLeave}\n                onDragStart={onDragStart}\n                style={style.ListItemStyles}\n              >\n                <ListItemIcon\n                  onMouseDown={onMouseDown}\n                  style={style.ListItemIconStyles}\n                >\n                  <ReorderIcon />\n                </ListItemIcon>\n                <ListItemText>\n                  {React.createElement(component, {\n                    ...this.props,\n                    value,\n                    label: '', // Enforce a hidden label\n                    onChange: changeItem(index),\n                    autoFocus: newItemAdded && index + 1 === values.length,\n                  })}\n                </ListItemText>\n                <Fragment>\n                  <Button\n                    mini\n                    variant=\"fab\"\n                    color=\"secondary\"\n                    className=\"remove\"\n                    aria-label=\"Remove Image\"\n                    onClick={() => {\n                      if (values.length > 1) {\n                        values.splice(index, 1);\n                        onChange(values);\n                      }\n                    }}\n                  >\n                    <DeleteIcon />\n                  </Button>\n                </Fragment>\n              </ListItem>\n            ))}\n        </List>\n        <Add>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={addAnotherItem}\n            aria-label=\"Add another item\"\n          >\n            Add another item\n            <AddIcon />\n          </Button>\n        </Add>\n      </FormControl>\n    );\n  };\n}\n\nexport default MultipleFields;\n","import { put, call, takeLatest, all } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\n\nimport api from '../utils/api/api';\nimport { setErrorMessage } from './application';\nimport { ApiError } from '../utils/api/errors';\n\nexport const UI_SCHEMA_REQUESTED = 'UI_SCHEMA_REQUESTED';\nexport const requestUiSchema = ({ entityTypeId, bundle }) => ({\n  type: UI_SCHEMA_REQUESTED,\n  payload: { entityTypeId, bundle },\n});\n\nexport const UI_SCHEMA_LOADED = 'UI_SCHEMA_LOADED';\nfunction* loadUiSchema(action) {\n  const { entityTypeId, bundle } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const [\n      { data: fieldSchema },\n      { data: formDisplaySchema },\n      { data: fieldStorageConfig },\n    ] = yield all([\n      api('field_schema', {\n        queryString: {\n          filter: { entity_type: entityTypeId, bundle },\n        },\n      }),\n      api('form_display', {\n        queryString: {\n          filter: { targetEntityType: entityTypeId, bundle, mode: 'default' },\n        },\n      }),\n      api('field_storage_config', {\n        queryString: {\n          filter: { condition: { path: 'entity_type', value: entityTypeId } },\n        },\n      }),\n    ]);\n\n    yield put({\n      type: UI_SCHEMA_LOADED,\n      payload: {\n        entityTypeId,\n        bundle,\n        fieldSchema,\n        formDisplaySchema,\n        fieldStorageConfig,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const SCHEMA_REQUESTED = 'SCHEMA_REQUESTED';\nexport const requestSchema = ({ entityTypeId, bundle }) => ({\n  type: SCHEMA_REQUESTED,\n  payload: { entityTypeId, bundle },\n});\n\nexport const SCHEMA_LOADED = 'SCHEMA_LOADED';\nfunction* loadSchema(action) {\n  const { entityTypeId, bundle } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const entitySchema = yield call(api, 'schema', {\n      parameters: { entityTypeId, bundle },\n      queryString: { _describes: 'api_json', _format: 'schema_json' },\n    });\n\n    yield put({\n      type: SCHEMA_LOADED,\n      payload: {\n        entityTypeId,\n        bundle,\n        entitySchema,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const SCHEMA_BY_ENTITY_ID_REQUESTED = 'SCHEMA_BY_ENTITY_ID_REQUESTED';\nexport const requestSchemaByEntityId = ({ entityTypeId, entityId }) => ({\n  type: SCHEMA_BY_ENTITY_ID_REQUESTED,\n  payload: { entityTypeId, entityId },\n});\n\nexport const SCHEMA_BY_ENTITY_ID_LOADED = 'SCHEMA_BY_ENTITY_ID_LOADED';\nfunction* loadSchemaByEntityId(action) {\n  const { entityTypeId, entityId } = action.payload;\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const entitySchema = yield call(api, 'schema_by_id', {\n      parameters: { entityTypeId, entityId },\n    });\n\n    yield put({\n      type: SCHEMA_BY_ENTITY_ID_LOADED,\n      payload: {\n        entityTypeId,\n        entityId,\n        entitySchema,\n      },\n    });\n  } catch (error) {\n    yield put(setErrorMessage(error.toString()));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(SCHEMA_REQUESTED, loadSchema);\n  yield takeLatest(SCHEMA_BY_ENTITY_ID_REQUESTED, loadSchemaByEntityId);\n  yield takeLatest(UI_SCHEMA_REQUESTED, loadUiSchema);\n}\n","import PropTypes from 'prop-types';\n\nexport default {\n  fieldName: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport NativeSelect from '@material-ui/core/NativeSelect';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst styles = {\n  select: css`\n    min-width: 182px;\n  `,\n};\n\nconst OptionsSelect = ({\n  label,\n  value,\n  onChange,\n  helpText,\n  fieldName,\n  required,\n  schema: { default: defaultValue },\n  classes,\n  inputProps: { allowed_values: allowedValues },\n}) => (\n  <FormControl margin=\"normal\" classes={classes}>\n    <InputLabel htmlFor={fieldName} required={required}>\n      {label}\n    </InputLabel>\n    <NativeSelect\n      value={value || defaultValue}\n      fullWidth\n      onChange={event => onChange(event.target.value)}\n      inputProps={{\n        name: fieldName,\n        id: fieldName,\n      }}\n      className={styles.select}\n    >\n      {Object.entries(allowedValues).map(([machineName, humanName]) => (\n        <option key={machineName} value={machineName}>\n          {humanName}\n        </option>\n      ))}\n    </NativeSelect>\n    {helpText && <FormHelperText>{helpText}</FormHelperText>}\n  </FormControl>\n);\n\nOptionsSelect.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.string,\n  helpText: PropTypes.string,\n  schema: PropTypes.shape({\n    default: PropTypes.string.isRequired,\n  }).isRequired,\n  inputProps: PropTypes.shape({\n    allowed_values: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nOptionsSelect.defaultProps = {\n  value: '',\n  helpText: '',\n};\n\nexport default OptionsSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst NumberTextfield = ({\n  classes,\n  label,\n  value,\n  onChange,\n  fieldName,\n  required,\n  inputProps,\n}) => (\n  <TextField\n    id={fieldName}\n    value={value}\n    fullWidth\n    onChange={event => onChange(Number(event.target.value))}\n    InputProps={{\n      ...inputProps,\n      unsigned: inputProps.unsigned && inputProps.unsigned.toString(),\n      endAdornment: inputProps.suffix && (\n        <InputAdornment position=\"end\">{inputProps.suffix}</InputAdornment>\n      ),\n      startAdornment: inputProps.prefix && (\n        <InputAdornment position=\"start\">{inputProps.prefix}</InputAdornment>\n      ),\n    }}\n    type=\"number\"\n    margin=\"normal\"\n    label={label}\n    classes={classes}\n    required={required}\n  />\n);\n\nNumberTextfield.propTypes = {\n  ...WidgetPropTypes,\n  inputProps: PropTypes.shape({\n    max: PropTypes.number,\n    min: PropTypes.number,\n    step: PropTypes.number,\n    suffix: PropTypes.string,\n    prefix: PropTypes.string,\n  }),\n  value: PropTypes.number,\n};\n\nNumberTextfield.defaultProps = {\n  inputProps: {\n    min: 0,\n  },\n  value: '',\n};\n\nexport default NumberTextfield;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst StringTextfield = props => (\n  <TextField\n    id={props.fieldName}\n    value={\n      (Array.isArray(props.value) && props.value.length && props.value[0]) ||\n      props.value\n    }\n    onChange={event => props.onChange(event.target.value)}\n    margin=\"normal\"\n    label={props.label}\n    classes={props.classes}\n    required={props.required}\n    autoFocus={props.autoFocus}\n    fullWidth\n  />\n);\n\nStringTextfield.propTypes = {\n  ...WidgetPropTypes,\n  // @todo This should not be needed after https://github.com/jsdrupal/drupal-admin-ui/issues/195\n  value: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.string),\n    PropTypes.string,\n  ]),\n  autoFocus: PropTypes.bool,\n};\n\nStringTextfield.defaultProps = {\n  value: '',\n  autoFocus: false,\n};\n\nexport default StringTextfield;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CheckBox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { css } from 'emotion';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nlet styles;\n\nconst BooleanCheckbox = props => {\n  const { onChange, label, value } = props;\n\n  return (\n    <FormControlLabel\n      id={`${props.fieldName}-label`}\n      control={\n        <CheckBox\n          id={`${props.fieldName}-cb`}\n          onChange={event => onChange(event.target.checked)}\n          margin=\"normal\"\n          value={String(value)}\n          checked={value}\n        />\n      }\n      label={label}\n      classes={styles}\n      required={props.required}\n    />\n  );\n};\n\nBooleanCheckbox.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.bool,\n};\n\nBooleanCheckbox.defaultProps = {\n  value: false,\n};\n\nstyles = {\n  root: css`\n    align-items: center;\n  `,\n};\n\nexport default BooleanCheckbox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nconst DatetimeTimestamp = ({\n  classes,\n  fieldName,\n  label,\n  value,\n  onChange,\n  required,\n}) => (\n  <TextField\n    id={fieldName}\n    fullWidth\n    label={label}\n    type=\"datetime-local\"\n    defaultValue={value ? new Date(value * 1000).toJSON().slice(0, 19) : null}\n    margin=\"normal\"\n    onChange={event => onChange(+new Date(event.target.value) / 1000)}\n    InputLabelProps={{\n      shrink: true,\n    }}\n    classes={classes}\n    required={required}\n  />\n);\n\nDatetimeTimestamp.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.number,\n  required: PropTypes.bool.isRequired,\n};\n\nDatetimeTimestamp.defaultProps = {\n  value: 0,\n};\n\nexport default DatetimeTimestamp;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport api from '../../../utils/api/api';\n\nconst Container = styled('div')`\n  width: 100%;\n`;\n\nconst Element = styled('div')`\n  border: 2px dashed grey;\n  border-radius: 3px;\n  display: flex;\n  padding: 25px;\n  width: 100%;\n\n  > div {\n    width: 100%;\n  }\n`;\n\nconst Text = styled('div')`\n  margin: 0;\n  text-align: center;\n  .icon {\n    margin-left: 10px;\n  }\n`;\n\nconst marginTopDense = {\n  marginTop: '10px',\n};\n\nconst marginTop = {\n  marginTop: '20px',\n};\n\nconst error = {\n  color: 'red',\n  paddingLeft: 0,\n};\n\nclass FileUpload extends Component {\n  static propTypes = {\n    entityTypeId: PropTypes.string.isRequired,\n    bundle: PropTypes.string.isRequired,\n    fieldName: PropTypes.string.isRequired,\n    onFileUpload: PropTypes.func.isRequired,\n    multiple: PropTypes.bool.isRequired,\n    remainingUploads: PropTypes.number.isRequired,\n    inputProps: PropTypes.shape({\n      file_extensions: PropTypes.string,\n      max_filesize: PropTypes.string,\n    }).isRequired,\n  };\n\n  /**\n   * Initial state\n   */\n  state = {\n    total: 0,\n    files: [],\n    errors: [],\n    filesLength: 0,\n    isDisabled: false,\n  };\n\n  /**\n   * Will set the border of the element to red and\n   * drop effect on drag over.\n   * @param {Event} event\n   */\n  onDragOver = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setElementStyles('red');\n    event.dataTransfer.dropEffect = 'dragend';\n  };\n\n  /**\n   * Resets the border on drag leave.\n   * @param {Event} event\n   */\n  onDragLeave = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.setElementStyles();\n  };\n\n  /**\n   * Will read the file/s that are dropped in the drop area.\n   * @param {Event} event\n   */\n  onDrop = event => {\n    event.stopPropagation();\n    event.preventDefault();\n    this.readFile(event.dataTransfer.files);\n  };\n\n  /**\n   * Will call the click event on the input to open the file explorer\n   * to allow file/s to be selected.\n   */\n  onClick = () => {\n    this.input.click();\n  };\n\n  /**\n   * Sets the styles of the drop zone element.\n   * Set the border and opacity.\n   * @param {String} [color=\"grey\"] Color of the border.\n   */\n  setElementStyles = (color = 'grey') => {\n    const {\n      element,\n      state: { isDisabled },\n    } = this;\n\n    if (element) {\n      element.style.border = `2px dashed ${color}`;\n      element.style.opacity = `${isDisabled ? '0.3' : '1'}`;\n    }\n  };\n\n  /**\n   * Will get the selected file/s from the file explorer.\n   * @param {Event} event\n   */\n  getFiles = event => {\n    this.readFile(event.target.files);\n  };\n\n  /**\n   * Uploads the file to the server, updates the total and files state.\n   * @param {Object} file File to be uploaded.\n   */\n  uploadFile = file => {\n    const reader = new window.FileReader();\n\n    reader.onloadend = async ({ target: { readyState, result } }) => {\n      if (readyState === window.FileReader.DONE) {\n        const {\n          resetState,\n          props: { entityTypeId, bundle, fieldName, onFileUpload },\n        } = this;\n        const { buffer } = new Uint8Array(result);\n        const token = await api('csrf_token');\n        // Replace file name, some reason any space doesn't work\n        // TODO: Find a way to fix this without changing the name\n        const fileName = file.name.replace(/[,#!$^&*;{}=\\-+`~()[\\] ]/g, '_');\n\n        // Upload the file to server\n        const createdFile = await api('file:upload', {\n          parameters: {\n            bundle,\n            fileName,\n            fieldName,\n            entityTypeId,\n            body: buffer,\n          },\n          options: {\n            headers: {\n              'X-CSRF-Token': token,\n            },\n          },\n        });\n\n        this.setState(\n          prevState => ({\n            total: prevState.total + 1,\n            files: [...prevState.files, createdFile],\n          }),\n          () => {\n            onFileUpload(this.state.files);\n            resetState();\n          },\n        );\n      }\n    };\n\n    reader.readAsArrayBuffer(file);\n  };\n\n  /**\n   * Checks the current file has met all the criteria before\n   * being uploaded to the server. If not then will set the\n   * error state and update the total.\n   * Will check file size and extension.\n   * @param {String} type file type.\n   * @param {Number} size file size.\n   * @param {String} name file name.\n   */\n  checkFile = ({ type, size, name, lastModified }) => {\n    /* eslint-disable camelcase */\n    const errors = {};\n    const extension = type.split('/')[1]; // <MIME_subtype>\n    const {\n      resetState,\n      props: {\n        inputProps: { max_filesize, file_extensions },\n      },\n    } = this;\n\n    // Check file size\n    if (max_filesize && size > Number(max_filesize)) {\n      // TODO: Convert max_filesize to MB\n      errors.size =\n        'The file could not be saved because it exceeds 2 MB, the maximum allowed size for uploads.';\n    }\n\n    // Check file extension\n    if (!file_extensions.includes(extension)) {\n      errors.type = `The image file is invalid or the image type is not allowed. Allowed types: ${file_extensions}.`;\n    }\n\n    // Check if there are errors\n    if (Object.keys(errors).length > 0) {\n      errors.name = `The specified file ${name} could not be uploaded.`;\n      errors.id = lastModified;\n\n      // Set the state with error and update total\n      this.setState(\n        prevState => ({\n          total: prevState.total + 1,\n          errors: [...prevState.errors, errors],\n        }),\n        resetState,\n      );\n      return false;\n    }\n\n    return true;\n    /* eslint-enable camelcase */\n  };\n\n  /**\n   * Resets the state if all file/s have been uploaded.\n   */\n  resetState = () => {\n    const {\n      setElementStyles,\n      state: { total, filesLength },\n    } = this;\n\n    if (total === filesLength) {\n      this.setState(\n        { files: [], filesLength: 0, total: 0, isDisabled: false },\n        setElementStyles,\n      );\n    }\n  };\n\n  /**\n   * Will read the file/s, check if multiple files can be uploaded,\n   * check for errors, if no errors then upload the file.\n   * @param {Object} files Selected files.\n   */\n  readFile = files => {\n    const {\n      setElementStyles,\n      checkFile,\n      uploadFile,\n      props: { multiple, remainingUploads },\n    } = this;\n\n    // Slice the files if more than the remaining uploads length\n    const slicedFiles = Object.keys(files)\n      .slice(0, remainingUploads)\n      .reduce((obj, value) => {\n        obj[value] = files[value];\n        return obj;\n      }, {});\n\n    this.setState(\n      {\n        errors: [],\n        isDisabled: true,\n        filesLength: Object.keys(slicedFiles).length,\n      },\n      setElementStyles,\n    );\n\n    if (multiple) {\n      Object.keys(slicedFiles).forEach(key => {\n        const file = slicedFiles[key];\n        if (checkFile(file)) {\n          uploadFile(file);\n        }\n      });\n    }\n\n    // If single file upload, upload the first file from the dropped files\n    if (!multiple && checkFile(slicedFiles[0])) {\n      uploadFile(slicedFiles[0]);\n    }\n  };\n\n  /**\n   * If disabled, then prevent all file upload events.\n   * @param {Function} fn Event function.\n   */\n  isEnabled = fn => {\n    if (this.state.isDisabled) {\n      return null;\n    }\n\n    return fn;\n  };\n\n  render = () => {\n    const {\n      onDrop,\n      onClick,\n      getFiles,\n      isEnabled,\n      onDragOver,\n      onDragLeave,\n      state: { total, errors, isDisabled, filesLength },\n      props: { multiple, remainingUploads },\n    } = this;\n\n    return (\n      <Container>\n        <Element\n          onDrop={isEnabled(onDrop)}\n          onClick={isEnabled(onClick)}\n          onDragOver={isEnabled(onDragOver)}\n          onDragLeave={isEnabled(onDragLeave)}\n          innerRef={element => {\n            this.element = element;\n          }}\n        >\n          <Text>\n            <Typography variant=\"subtitle1\">\n              {multiple\n                ? 'Drop files or click here to upload.'\n                : 'Drop a file or click here to upload.'}\n            </Typography>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              variant=\"contained\"\n              disabled={isDisabled}\n              aria-label=\"Upload Image/s\"\n              style={marginTop}\n            >\n              Upload <CloudUploadIcon className=\"icon\" />\n            </Button>\n          </Text>\n\n          <input\n            type=\"file\"\n            onChange={getFiles}\n            multiple={multiple}\n            style={{ display: 'none' }}\n            ref={element => {\n              this.input = element;\n            }}\n          />\n        </Element>\n\n        {filesLength > 0 && (\n          <LinearProgress\n            style={marginTop}\n            variant=\"determinate\"\n            value={(total / filesLength) * 100}\n          />\n        )}\n\n        {remainingUploads <= 15 && (\n          <Typography component=\"p\" style={marginTopDense}>\n            Remaining uploads: {remainingUploads}\n          </Typography>\n        )}\n\n        {errors.length > 0 && (\n          <div>\n            <Typography style={error} component=\"p\">\n              One or more files could not be uploaded.\n            </Typography>\n\n            <Typography style={error} component=\"ul\">\n              {errors.map(({ name, size, type, id }) => (\n                <Typography style={error} component=\"li\" key={id}>\n                  {name}\n                  <Typography style={error} component=\"ul\">\n                    {size && (\n                      <Typography style={error} component=\"li\">\n                        {size}\n                      </Typography>\n                    )}\n                    {type && (\n                      <Typography style={error} component=\"li\">\n                        {type}\n                      </Typography>\n                    )}\n                  </Typography>\n                </Typography>\n              ))}\n            </Typography>\n          </div>\n        )}\n      </Container>\n    );\n  };\n}\n\nexport default FileUpload;\n","export const setItemById = (multiple, item, items) => {\n  if (multiple) {\n    const index = items.findIndex(i => i.id === item.id);\n    if (index === -1) {\n      return [...items, item];\n    }\n    items[index] = item;\n    return items;\n  }\n  return item;\n};\n\nexport const getItemsAsArray = (multiple, items) => {\n  if (Array.isArray(items)) {\n    return items;\n  }\n  if (multiple) {\n    return Object.values(items);\n  }\n  return [items];\n};\n\nexport const deleteItemById = (multiple, id, items) => {\n  if (!multiple) {\n    return {};\n  }\n\n  return items.filter(i => i.id !== id);\n};\n\nexport default {};\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'react-emotion';\nimport { css } from 'emotion';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Divider from '@material-ui/core/Divider';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from '@material-ui/core/Button';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\nimport FileUpload from '../FileUpload/FileUpload';\nimport {\n  deleteItemById,\n  getItemsAsArray,\n  setItemById,\n} from '../../../utils/api/fieldItem';\nimport api from '../../../utils/api/api';\n\nconst CardWrapper = styled('div')`\n  margin-top: 15px;\n`;\n\nconst Element = styled('div')`\n  width: 100%;\n\n  legend {\n    margin-bottom: 10px;\n  }\n\n  .remove {\n    margin-left: auto;\n  }\n`;\n\nconst Image = styled('div')`\n  > img {\n    max-width: 100px;\n    margin-right: 20px;\n  }\n`;\n\nconst styles = {\n  fullWidth: css`\n    width: 100%;\n  `,\n};\n\nclass FileUploadWidget extends React.Component {\n  state = {\n    selectedItems: null,\n  };\n\n  componentDidMount() {\n    if (\n      !this.state.selectedItems &&\n      this.props.value &&\n      this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.value &&\n      this.props.value.data &&\n      prevProps.value.data !== this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  setSelectedItems = items => {\n    this.setState(\n      {\n        selectedItems: items,\n      },\n      () => {\n        this.props.onChange({\n          data: this.state.selectedItems,\n        });\n      },\n    );\n  };\n\n  recalculateSelectedItems = () => {\n    const entityTypeId = 'file';\n    const bundle = 'file';\n\n    const multiple = this.props.schema.properties.data.type === 'array';\n    const items = getItemsAsArray(multiple, this.props.value.data);\n    const ids = items.map(({ id }) => id);\n    this.fetchEntitites(entityTypeId, bundle, ids).then(\n      ({ data: entities }) => {\n        this.setState({\n          selectedItems: entities\n            .map(({ id, attributes }, index) => ({\n              id,\n              type: 'file--file',\n              [entityTypeId]: attributes,\n              meta: items[index].meta,\n            }))\n            .reduce(\n              (agg, item) => setItemById(multiple, item, agg),\n              multiple ? [] : {},\n            ),\n        });\n      },\n    );\n  };\n\n  fetchEntitites = (entityTypeId, bundle, ids) =>\n    api(entityTypeId, {\n      queryString: {\n        filter: {\n          id: {\n            condition: {\n              operator: 'IN',\n              path: 'uuid',\n              value: ids,\n            },\n          },\n        },\n      },\n      parameters: {\n        bundle,\n      },\n    });\n\n  render() {\n    const {\n      value,\n      label,\n      bundle,\n      fieldName,\n      inputProps,\n      entityTypeId,\n      required,\n      schema: { properties, maxItems },\n      classes,\n    } = this.props;\n\n    if (this.state.selectedItems === null) {\n      return null;\n    }\n\n    // If array then allow for multiple uploads.\n    const multiple = properties.data.type === 'array';\n\n    const items = getItemsAsArray(multiple, this.state.selectedItems)\n      // Default schema creates stub entries, which we don't need here.\n      .filter(item => item.id);\n    const length = (items && items.length) || 0;\n    // maxItems is only set if array, so set to 1 as default.\n    const maxItemsCount = multiple ? maxItems || 100000000000 : 1;\n\n    return (\n      <FormControl\n        margin=\"normal\"\n        required={required}\n        classes={classes}\n        fullWidth\n      >\n        <Element>\n          <FormLabel component=\"legend\">{label}</FormLabel>\n          <div\n            className={styles.fullWidth}\n            style={{\n              display:\n                (!multiple && length) || length === maxItemsCount\n                  ? 'none'\n                  : 'block',\n            }}\n          >\n            <FileUpload\n              bundle={bundle}\n              multiple={multiple}\n              fieldName={fieldName}\n              inputProps={inputProps}\n              entityTypeId={entityTypeId}\n              remainingUploads={maxItemsCount - length}\n              onFileUpload={files => {\n                const newItems = files.reduce((itemsAgg, file) => {\n                  const item = {\n                    file: {\n                      type: 'file--file',\n                      url: file.url[0].value,\n                      id: file.uuid[0].value,\n                      filename: file.filename[0].value,\n                    },\n                    meta: { alt: '' },\n                    id: file.uuid[0].value,\n                    type: 'file--file',\n                  };\n                  return setItemById(multiple, item, itemsAgg);\n                }, items);\n\n                this.setSelectedItems(newItems);\n              }}\n            />\n          </div>\n\n          {length > 0 && (\n            <CardWrapper>\n              <Card>\n                <CardContent>\n                  <List>\n                    {items.map((item, index) => {\n                      const {\n                        id,\n                        meta: { alt },\n                        file: { url, filename },\n                      } = item;\n                      const last = items.length - 1 === index;\n\n                      return (\n                        <Fragment key={id}>\n                          <ListItem>\n                            <Image>\n                              <img\n                                alt={alt || filename}\n                                src={`${\n                                  process.env.REACT_APP_DRUPAL_BASE_URL\n                                }${url}`}\n                              />\n                            </Image>\n                            <TextField\n                              required\n                              value={alt}\n                              margin=\"normal\"\n                              label=\"Alternative text\"\n                              onChange={event =>\n                                this.setSelectedItems(\n                                  setItemById(\n                                    multiple,\n                                    {\n                                      ...item,\n                                      meta: {\n                                        alt: event.target.value,\n                                      },\n                                    },\n                                    value.data,\n                                  ),\n                                )\n                              }\n                            />\n                            <Button\n                              mini\n                              id={id}\n                              variant=\"fab\"\n                              color=\"secondary\"\n                              className=\"remove\"\n                              aria-label=\"Remove Image\"\n                              onClick={event => {\n                                this.setSelectedItems(\n                                  deleteItemById(\n                                    multiple,\n                                    event.currentTarget.id,\n                                    items,\n                                  ),\n                                );\n                              }}\n                            >\n                              <DeleteIcon />\n                            </Button>\n                          </ListItem>\n                          {!last && <Divider />}\n                        </Fragment>\n                      );\n                    })}\n                  </List>\n                </CardContent>\n              </Card>\n            </CardWrapper>\n          )}\n        </Element>\n      </FormControl>\n    );\n  }\n}\n\nconst filePropType = PropTypes.shape({\n  type: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  filename: PropTypes.string.isRequired,\n});\n\nconst fileItemMultiplePropType = PropTypes.shape({\n  id: PropTypes.toString.isRequired,\n  file: filePropType.isRequired,\n});\n\nconst fileItemSinglePropType = PropTypes.shape({\n  file: filePropType.isRequired,\n});\n\nFileUploadWidget.propTypes = {\n  ...WidgetPropTypes,\n  value: PropTypes.shape({\n    data: PropTypes.shape({\n      file: PropTypes.oneOfType([\n        PropTypes.arrayOf(fileItemMultiplePropType),\n        fileItemSinglePropType,\n      ]),\n      meta: PropTypes.shape({\n        alt: PropTypes.string,\n      }),\n    }),\n  }),\n  inputProps: PropTypes.shape({\n    file_extensions: PropTypes.string,\n    max_filesize: PropTypes.string,\n  }),\n  schema: PropTypes.shape({\n    maxItems: PropTypes.number,\n    properties: PropTypes.shape({\n      data: PropTypes.shape({\n        type: PropTypes.string.isRequired,\n      }),\n    }),\n  }).isRequired,\n};\n\nFileUploadWidget.defaultProps = {\n  value: { data: { file: {}, meta: {} } },\n  inputProps: {\n    file_extensions: 'png gif jpg jpeg',\n    max_filesize: '2000000',\n  },\n};\n\nexport default FileUploadWidget;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport keycode from 'keycode';\nimport Downshift from 'downshift';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\nimport SchemaPropType from '../../05_pages/NodeForm/SchemaPropType';\n\nimport api from '../../../utils/api/api';\nimport { getItemsAsArray } from '../../../utils/api/fieldItem';\n\nconst styles = {\n  results: css`\n    position: absolute;\n    z-index: 900;\n  `,\n  fullWidth: css`\n    width: 100%;\n  `,\n};\n\nclass EntityReferenceAutocomplete extends React.Component {\n  static propTypes = {\n    ...WidgetPropTypes,\n    schema: SchemaPropType.isRequired,\n    required: PropTypes.bool.isRequired,\n    inputProps: PropTypes.shape({\n      bundle: PropTypes.string,\n      type: PropTypes.string,\n    }),\n  };\n\n  static defaultProps = {\n    inputProps: {},\n  };\n\n  state = {\n    inputValue: '',\n    selectedItems: null,\n    suggestions: new Map(),\n  };\n\n  componentDidMount() {\n    if (\n      !this.state.selectedItems &&\n      this.props.value &&\n      this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.value &&\n      this.props.value.data &&\n      prevProps.value.data !== this.props.value.data\n    ) {\n      this.recalculateSelectedItems();\n    }\n  }\n\n  getMaxItems = () => {\n    const {\n      schema: { maxItems, properties },\n    } = this.props;\n    const multiple = properties.data.type === 'array';\n    return multiple ? maxItems || 100000000000 : 1;\n  };\n\n  recalculateSelectedItems = () => {\n    const [\n      entityTypeId,\n      [bundle],\n    ] = this.determineEntityTypeAndBundlesFromSchema(this.props.schema);\n\n    const multiple = this.props.schema.properties.data.type === 'array';\n    const items = getItemsAsArray(multiple, this.props.value.data);\n    const ids = items.map(({ id }) => id);\n    this.fetchEntitites(entityTypeId, bundle, ids).then(\n      ({ data: entities }) => {\n        this.setState({\n          selectedItems: entities.map(\n            ({ id, attributes: { name: label } }) => ({\n              id,\n              label,\n              type: (\n                this.props.schema.properties.data.items ||\n                this.props.schema.properties.data\n              ).properties.type.enum[0],\n            }),\n          ),\n        });\n      },\n    );\n  };\n\n  handleChange = ({ id, label }) =>\n    this.setState(\n      ({ selectedItems }) => ({\n        inputValue: '',\n        selectedItems: {\n          ...selectedItems,\n          ...{\n            [id]: {\n              id,\n              label,\n              // Figure out a better way to handle this.\n              type: (\n                this.props.schema.properties.data.items ||\n                this.props.schema.properties.data\n              ).properties.type.enum[0],\n            },\n          },\n        },\n      }),\n      () => {\n        this.props.onChange(this.state.selectedItems);\n      },\n    );\n\n  handleInputChange = event => {\n    if (\n      this.state.selectedItems &&\n      this.getMaxItems() === Object.keys(this.state.selectedItems).length\n    ) {\n      return;\n    }\n\n    this.setState({ inputValue: event.target.value }, () => {\n      if (!this.state.inputValue.length) {\n        return;\n      }\n\n      // @todo Move this call to the mounting component?\n      const [\n        entityTypeId,\n        [bundle],\n      ] = this.determineEntityTypeAndBundlesFromSchema(this.props.schema);\n      this.fetchSuggestedEntities(\n        entityTypeId,\n        bundle,\n        this.state.inputValue,\n      ).then(({ data: items }) => {\n        this.setState({\n          suggestions: new Map(\n            items.map(({ id, attributes: { name: label } }) => [\n              id,\n              { id, label },\n            ]),\n          ),\n        });\n      });\n    });\n  };\n\n  fetchEntitites = (entityTypeId, bundle, ids) =>\n    api(entityTypeId, {\n      queryString: {\n        filter: {\n          id: {\n            condition: {\n              operator: 'IN',\n              path: 'uuid',\n              value: ids,\n            },\n          },\n        },\n      },\n      parameters: {\n        type: bundle,\n      },\n    });\n\n  fetchSuggestedEntities = (bundle, type, input) =>\n    api(bundle, {\n      queryString: {\n        filter: {\n          // @todo On the longrun fetch the label_key from the entity type\n          //   definition.\n          name: {\n            condition: {\n              path: 'name',\n              operator: 'CONTAINS',\n              value: input,\n            },\n          },\n        },\n      },\n      parameters: {\n        type,\n      },\n    });\n\n  handleKeyDown = event => {\n    const { inputValue, selectedItems } = this.state;\n    if (\n      selectedItems &&\n      selectedItems.length &&\n      !inputValue.length &&\n      keycode(event) === 'backspace'\n    ) {\n      this.setState(\n        {\n          selectedItems: selectedItems.slice(0, selectedItems.length - 1),\n        },\n        () => this.props.onChange(this.state.selectedItems),\n      );\n    }\n  };\n\n  handleDelete = id => () => {\n    this.setState(\n      state => {\n        const { selectedItems } = state;\n        delete selectedItems[id];\n        return { selectedItems };\n      },\n      () => this.props.onChange(this.state.selectedItems),\n    );\n  };\n\n  determineEntityTypeAndBundlesFromSchema = schema => {\n    // For some reason different entity references have different schema.\n    const resourceNames = (\n      schema.properties.data.items || schema.properties.data\n    ).properties.type.enum;\n    return resourceNames\n      .map(name => name.split('--'))\n      .reduce(\n        ([, bundles = []], [entityTypeId, bundle]) => [\n          entityTypeId,\n          [...bundles, entityTypeId === bundle ? undefined : bundle],\n        ],\n        [],\n      );\n  };\n\n  renderSuggestion = ({\n    suggestion,\n    index,\n    itemProps,\n    highlightedIndex,\n    selectedItem: selectedItems,\n  }) => {\n    if (\n      selectedItems &&\n      this.getMaxItems() === Object.keys(selectedItems).length\n    ) {\n      return null;\n    }\n\n    const isHighlighted = highlightedIndex === index;\n    const isSelected =\n      selectedItems && Object.keys(selectedItems).includes(suggestion.id);\n\n    return (\n      <MenuItem\n        {...itemProps}\n        key={suggestion.id}\n        selected={isHighlighted}\n        component=\"div\"\n        style={{\n          fontWeight: isSelected ? 500 : 400,\n        }}\n      >\n        {suggestion.label}\n      </MenuItem>\n    );\n  };\n\n  renderInput = ({ InputProps, ref, label, ...other }) => (\n    <TextField\n      label={label}\n      id={InputProps.id}\n      InputProps={{\n        inputRef: ref,\n        ...InputProps,\n        inputProps: {\n          autoComplete: 'off',\n        },\n      }}\n      {...other}\n    />\n  );\n\n  render() {\n    const { inputValue, selectedItems } = this.state;\n    const { fieldName } = this.props;\n    return (\n      <FormControl\n        margin=\"normal\"\n        required={this.props.required}\n        classes={this.props.classes}\n        fullWidth\n      >\n        <Downshift\n          inputValue={inputValue}\n          onChange={this.handleChange}\n          selectedItem={selectedItems}\n          itemToString={item => (item ? item.label : '')}\n        >\n          {({\n            getInputProps,\n            getItemProps,\n            isOpen,\n            selectedItem,\n            highlightedIndex,\n          }) => (\n            <div className={styles.fullWidth}>\n              {this.renderInput({\n                fullWidth: true,\n                label: this.props.label,\n                InputProps: getInputProps({\n                  startAdornment: selectedItems\n                    ? /* eslint-disable prettier/prettier */\n                      Object.entries(selectedItems).map(([key, value]) => (\n                        <Chip\n                          key={key}\n                          tabIndex={-1}\n                          label={value.label}\n                          className=\"chip\"\n                          onDelete={this.handleDelete(key)}\n                        />\n                      ))\n                    : [],\n                  /* eslint-enable prettier/prettier */\n                  onChange: this.handleInputChange,\n                  onKeyDown: this.handleKeyDown,\n                  placeholder: '',\n                  id: fieldName,\n                }),\n              })}\n              {isOpen ? (\n                <Paper\n                  className={`${styles.results} ${styles.fullWidth}`}\n                  square\n                >\n                  {!!this.state.inputValue.length &&\n                    Array.from(this.state.suggestions.values()).map(\n                      (suggestion, index) =>\n                        this.renderSuggestion({\n                          suggestion,\n                          index,\n                          itemProps: getItemProps({ item: suggestion }),\n                          highlightedIndex,\n                          selectedItem,\n                        }),\n                    )}\n                </Paper>\n              ) : null}\n            </div>\n          )}\n        </Downshift>\n      </FormControl>\n    );\n  }\n}\n\nexport default EntityReferenceAutocomplete;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport RichTextEditor from 'react-rte';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\n\nimport WidgetPropTypes from '../../05_pages/NodeForm/WidgetPropTypes';\n\nlet styles;\n\n/**\n * Some basic wysiwyg editor based upon react-rte which is based upon draft.js.\n * This was designed to be as easiest as possible for the demo.\n *\n * On the longrun we might want to switch back to ckeditor.\n */\nclass TextTextarea extends React.Component {\n  static propTypes = {\n    ...WidgetPropTypes,\n    value: PropTypes.oneOfType([\n      PropTypes.shape({\n        value: PropTypes.string.isRequired,\n      }),\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          value: PropTypes.string.isRequired,\n        }),\n      ),\n    ]),\n  };\n\n  static defaultProps = {\n    value: {\n      value: '',\n      format: 'basic_html',\n    },\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  createValueFromString = props =>\n    RichTextEditor.createValueFromString(\n      // @todo This should not be needed after https://github.com/jsdrupal/drupal-admin-ui/issues/195\n      (Array.isArray(props.value) &&\n        props.value.length &&\n        props.value[0].value) ||\n        props.value.value ||\n        '',\n      'html',\n    );\n\n  extractValueString = props =>\n    (Array.isArray(props.value) &&\n      props.value.length &&\n      props.value[0].value) ||\n    props.value.value ||\n    '';\n\n  state = {\n    value: this.createValueFromString(this.props),\n    valueString: this.extractValueString(this.props),\n  };\n\n  componentDidUpdate = prevProps => {\n    if (\n      this.props.value.value !== prevProps.value.value &&\n      this.extractValueString(this.props) !== this.state.valueString\n    ) {\n      this.setState({\n        value: this.createValueFromString(this.props),\n      });\n    }\n  };\n\n  onChange = value => {\n    const valueString = value.toString('html');\n    this.setState({ value, valueString }, () => {\n      // Send the changes up to the parent component as an HTML string.\n      // This is here to demonstrate using `.toString()` but in a real app it\n      // would be better to avoid generating a string on each change.\n      this.props.onChange({\n        value: valueString,\n        format: 'basic_html',\n      });\n    });\n  };\n\n  render() {\n    return (\n      <FormControl margin=\"normal\" fullWidth required={this.props.required}>\n        <FormLabel classes={{ root: styles.label }}>\n          {this.props.label}\n        </FormLabel>\n        <RichTextEditor\n          className={styles.container}\n          value={this.state.value}\n          onChange={this.onChange}\n        />\n      </FormControl>\n    );\n  }\n}\n\nstyles = {\n  container: css`\n    .public-DraftEditor-content {\n      min-height: 110px;\n    }\n  `,\n  label: css`\n    margin-bottom: 10px;\n  `,\n};\n\nexport default TextTextarea;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\n\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport SchemaPropType from './SchemaPropType';\n\nimport MultipleFields from '../../02_atoms/MultipleFields/MultipleFields';\n\nimport { contentAdd } from '../../../actions/content';\nimport { requestUiSchema } from '../../../actions/schema';\nimport { setErrorMessage } from '../../../actions/application';\n\nimport { createUISchema, sortUISchemaFields } from '../../../utils/api/schema';\n\nimport widgets from './Widgets';\n\nlet styles;\n\nclass NodeForm extends React.Component {\n  static propTypes = {\n    schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n    onSave: PropTypes.func.isRequired,\n    entityTypeId: PropTypes.string.isRequired,\n    bundle: PropTypes.string.isRequired,\n    requestUiSchema: PropTypes.func.isRequired,\n    uiSchema: PropTypes.oneOfType([\n      PropTypes.shape({\n        fieldSchema: PropTypes.shape({}),\n        formDisplaySchema: PropTypes.shape({}),\n      }),\n      PropTypes.bool,\n    ]),\n    restorableEntity: PropTypes.shape({\n      data: PropTypes.object,\n    }),\n    setErrorMessage: PropTypes.func.isRequired,\n    onChange: PropTypes.func,\n  };\n\n  static defaultProps = {\n    schema: false,\n    uiSchema: false,\n    restorableEntity: null,\n    onChange: () => {},\n  };\n\n  state = {\n    restored: false,\n  };\n\n  componentDidMount() {\n    this.props.requestUiSchema({\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n    });\n\n    this.calculateState(this.props, this.state, state => this.setState(state));\n  }\n\n  componentDidUpdate() {\n    this.calculateState(this.props, this.state, state => this.setState(state));\n  }\n\n  onAttributeChange = fieldName => data => {\n    this.setState(\n      prevState => ({\n        entity: {\n          data: {\n            ...prevState.entity.data,\n            attributes: {\n              ...prevState.entity.data.attributes,\n              [fieldName]: data,\n            },\n          },\n        },\n      }),\n      () => this.props.onChange(this.props.bundle, this.state.entity),\n    );\n  };\n\n  onSave = () => {\n    const missingFields = this.resolveMissingRequiredFields();\n    if (missingFields.length) {\n      this.props.setErrorMessage(\n        missingFields.length > 1\n          ? `The following fields are missing, ${missingFields.join(', ')}.`\n          : `The following field is missing, ${missingFields.join('')}.`,\n      );\n    } else {\n      this.props.onSave(this.state.entity.data);\n    }\n  };\n\n  onRelationshipChange = fieldName => data => {\n    // Support widgets with multiple cardinality.\n    let fieldData;\n    if (typeof data.data !== 'undefined') {\n      fieldData = data.data;\n    } else {\n      fieldData = Object.values(data);\n    }\n    this.setState(\n      prevState => ({\n        entity: {\n          data: {\n            ...prevState.entity.data,\n            relationships: {\n              ...prevState.entity.data.relationships,\n              [fieldName]: {\n                data: fieldData,\n              },\n            },\n          },\n        },\n      }),\n      () => this.props.onChange(this.props.bundle, this.state.entity),\n    );\n  };\n\n  getSchemaInfo = (schema, fieldName) =>\n    schema.properties.data.properties.attributes.properties[fieldName] ||\n    schema.properties.data.properties.relationships.properties[fieldName];\n\n  resolveMissingRequiredFields = () => {\n    const unavailableFields = ['nid', 'uuid', 'vid', 'path'];\n    const requiredFields = this.props.schema.properties.data.properties.attributes.required.filter(\n      field => !unavailableFields.includes(field),\n    );\n    return Object.entries(this.state.entity.data.attributes)\n      .filter(([fieldName]) => requiredFields.includes(fieldName))\n      .filter(([fieldName, value]) => {\n        // @todo Ideally the schema would identify the main property for us.\n        if (\n          typeof value === 'object' &&\n          Object.keys(value).length &&\n          value.value === ''\n        ) {\n          return fieldName;\n        }\n        if (typeof value === 'string' && value.length === 0) {\n          return fieldName;\n        }\n        return false;\n      })\n      .map(([fieldName]) => fieldName);\n  };\n\n  calculateState = (prevProps, prevState, setState) => {\n    if (!prevProps.schema) {\n      return;\n    }\n\n    if (!prevProps.uiSchema) {\n      return;\n    }\n\n    if (prevState.entity) {\n      return;\n    }\n\n    const state = {\n      ...prevState,\n      // Mark the entity as restored when we don't have a restoreable entity,\n      // as we don't want to ask the user.\n      restored: prevState.restored || !prevProps.restorableEntity,\n      restorableEntity: !prevState.restored && prevProps.restorableEntity,\n      entity: prevProps.entity,\n    };\n\n    // Just contain values which are in the ui metadata.\n    state.entity.data.attributes = Object.entries(state.entity.data.attributes)\n      .filter(([key]) =>\n        Object.keys(prevProps.uiSchema.formDisplaySchema)\n          .concat(['type'])\n          .includes(key),\n      )\n      .reduce((agg, [key, value]) => ({ ...agg, [key]: value }), {});\n\n    setState(state);\n  };\n\n  createField = ({ fieldName, widget, inputProps }) => {\n    // @todo We need to pass along props.\n    // @todo How do we handle cardinality together with jsonapi\n    // making a distinction between single value fields and multi value fields.\n    const fieldSchema = this.getSchemaInfo(this.props.schema, fieldName);\n\n    const {\n      attributes,\n      relationships,\n    } = this.props.schema.properties.data.properties;\n\n    const propType =\n      (attributes.properties[fieldName] && 'attributes') ||\n      (relationships.properties[fieldName] && 'relationships');\n\n    const widgetProps = {\n      key: fieldName,\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n      fieldName,\n      classes: {\n        root: styles.widgetRoot,\n      },\n      value: this.state.entity.data[propType][fieldName],\n      label: fieldSchema && fieldSchema.title,\n      schema: fieldSchema,\n      onChange: (propType === 'attributes'\n        ? this.onAttributeChange\n        : this.onRelationshipChange)(fieldName),\n      required: this.props.schema.properties.data.properties.attributes.required.includes(\n        fieldName,\n      ),\n      inputProps,\n    };\n\n    const widgetComponent = widget.component;\n    const widgetIsMultiple = widget.multiple || false;\n    const hasMultipleDeltas =\n      (fieldSchema.type && fieldSchema.type === 'array') ||\n      (fieldSchema.properties &&\n        fieldSchema.properties.data &&\n        fieldSchema.properties.data.type === 'array');\n\n    return hasMultipleDeltas && !widgetIsMultiple ? (\n      <MultipleFields component={widgetComponent} {...widgetProps} />\n    ) : (\n      React.createElement(widgetComponent, widgetProps)\n    );\n  };\n\n  renderRestoreSnackbar() {\n    return (\n      // Ensure that there was some previously stored entity\n      this.props.restorableEntity &&\n      // Hide thie restore form once the content got restored.\n      !this.state.restored && (\n        <Snackbar\n          anchorOrigin={{ vertical: 'top', horizontal: 'center' }}\n          autoHideDuration={10000}\n          open\n          data-nightwatch=\"restore-content-snackbar\"\n          ContentProps={{\n            'aria-describedby': 'message-id',\n          }}\n          message={<span id=\"message-id\">Unsaved content found</span>}\n          action={[\n            <Button\n              key=\"undo\"\n              color=\"secondary\"\n              size=\"small\"\n              onClick={() =>\n                this.setState({\n                  entity: this.props.restorableEntity,\n                  restored: true,\n                })\n              }\n            >\n              Restore\n            </Button>,\n            <IconButton\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={() =>\n                this.setState({\n                  restored: true,\n                })\n              }\n            >\n              <CloseIcon className={styles.icon} />\n            </IconButton>,\n          ]}\n        />\n      )\n    );\n  }\n\n  render() {\n    let result = null;\n    if (this.props.schema && this.props.uiSchema && this.state.entity) {\n      const { right, left } = sortUISchemaFields(\n        createUISchema(\n          this.props.uiSchema.fieldSchema,\n          this.props.uiSchema.formDisplaySchema,\n          this.props.uiSchema.fieldStorageConfig,\n          widgets,\n        ),\n        ['promote', 'status', 'sticky', 'uid', 'created'],\n      );\n      result = (\n        <div className={styles.gridRoot}>\n          {this.renderRestoreSnackbar()}\n          <Paper classes={{ root: styles.fieldContainer }}>\n            {left.map(this.createField)}\n            <Divider classes={{ root: styles.divider }} />\n            <Button variant=\"contained\" color=\"primary\" onClick={this.onSave}>\n              Save\n            </Button>\n          </Paper>\n          <Paper classes={{ root: styles.fieldContainer }}>\n            {right.map(this.createField)}\n          </Paper>\n        </div>\n      );\n    }\n    return result;\n  }\n}\n\nstyles = {\n  fieldContainer: css`\n    padding: 50px 90px 40px;\n  `,\n  divider: css`\n    margin: 40px 0;\n  `,\n  gridRoot: css`\n    display: grid;\n    width: 100%;\n    grid-gap: 20px;\n    grid-template-columns: 75% 25%;\n    padding-right: 50px;\n  `,\n  widgetRoot: css`\n    display: flex;\n    align-items: start;\n  `,\n  icon: css`\n    font-size: 20px;\n  `,\n};\n\nconst mapStateToProps = (state, { bundle, entityTypeId }) => ({\n  uiSchema: state.schema.uiSchema[`${entityTypeId}--${bundle}`],\n});\n\nexport default connect(\n  mapStateToProps,\n  {\n    requestUiSchema,\n    contentAdd,\n    setErrorMessage,\n  },\n)(NodeForm);\n","import OptionsSelect from '../../02_atoms/Widgets/OptionsSelect';\nimport NumberTextfield from '../../02_atoms/Widgets/NumberTextfield';\nimport StringTextfield from '../../02_atoms/Widgets/StringTextfield';\nimport BooleanCheckbox from '../../02_atoms/Widgets/BooleanCheckbox';\nimport DatetimeTimestamp from '../../02_atoms/Widgets/DatetimeTimestamp';\nimport FileUploadWidget from '../../02_atoms/Widgets/FileUploadWidget';\nimport EntityReferenceAutocomplete from '../../02_atoms/Widgets/EntityReferenceAutocomplete';\nimport TextTextarea from '../../02_atoms/Widgets/TextTextarea';\n\n// @todo How do we do extensibility from modules, maybe a build step?\nconst widgets = {\n  options_select: {\n    component: OptionsSelect,\n  },\n  number: {\n    component: NumberTextfield,\n  },\n  string: {\n    component: StringTextfield,\n  },\n  boolean_checkbox: {\n    component: BooleanCheckbox,\n  },\n  datetime_timestamp: {\n    component: DatetimeTimestamp,\n  },\n  image_image: {\n    component: FileUploadWidget,\n    multiple: true,\n  },\n  entity_reference_autocomplete: {\n    component: EntityReferenceAutocomplete,\n    multiple: true,\n  },\n  text_textarea: {\n    component: TextTextarea,\n  },\n};\n\nexport default widgets;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\nimport NodeForm from '../NodeForm';\nimport {\n  contentEditChange,\n  contentSave,\n  requestSingleContent,\n} from '../../../actions/content';\nimport PageTitle from '../../02_atoms/PageTitle/PageTitle';\nimport { cleanupRelationships } from '../../../utils/api/content';\nimport { requestSchemaByEntityId } from '../../../actions/schema';\nimport SchemaPropType from '../NodeForm/SchemaPropType';\n\nlet styles;\n\nclass NodeEditForm extends React.Component {\n  componentDidMount() {\n    this.props.requestSchemaByEntityId({\n      entityTypeId: this.props.entityTypeId,\n      entityId: this.props.nid,\n    });\n    this.props.requestSingleContent(this.props.nid);\n  }\n\n  onSave = bundle => entity => {\n    this.props.contentSave(\n      cleanupRelationships({\n        ...entity,\n        type: `${this.props.entityTypeId}--${bundle}`,\n      }),\n    );\n  };\n\n  render() {\n    const { entity, schema } = this.props;\n    let result = null;\n    if (entity && schema) {\n      const bundle = entity.type.replace('node--', '');\n      result = (\n        <Fragment>\n          {entity && (\n            <PageTitle>\n              <em>\n                Edit <span className={styles.bundle}>{bundle}</span>\n              </em>{' '}\n              {entity.attributes.title}\n            </PageTitle>\n          )}\n          <LoadingBar />\n          {entity && (\n            <NodeForm\n              {...this.props}\n              bundle={bundle}\n              entity={{ data: entity }}\n              onSave={this.onSave(bundle)}\n            />\n          )}\n        </Fragment>\n      );\n    }\n    return result;\n  }\n}\n\nNodeEditForm.defaultProps = {\n  entity: null,\n  schema: null,\n};\n\nNodeEditForm.propTypes = {\n  nid: PropTypes.string.isRequired,\n  requestSingleContent: PropTypes.func.isRequired,\n  contentSave: PropTypes.func.isRequired,\n  entityTypeId: PropTypes.string.isRequired,\n  entity: PropTypes.shape({\n    attributes: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n    }).isRequired,\n  }),\n  requestSchemaByEntityId: PropTypes.func.isRequired,\n  schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n};\n\nstyles = {\n  bundle: css`\n    text-transform: capitalize;\n  `,\n};\n\nconst extractRestorableEntity = (state, entity) => {\n  const restorableEntity = state.content.restorableContentEditById[entity.id];\n  if (\n    restorableEntity &&\n    restorableEntity.data &&\n    restorableEntity.data.attributes &&\n    entity &&\n    entity.attributes &&\n    // Restoring content is only offered when the loaded entity wasn't changed in the meantime.\n    restorableEntity.data.attributes.changed === entity.attributes.change\n  ) {\n    return restorableEntity;\n  }\n  return null;\n};\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { nid },\n      },\n    },\n  ) => {\n    const entity = state.content.contentByNid[nid];\n    return {\n      schema: state.schema.schema[`node--${nid}`],\n      entity: state.content.contentByNid[nid],\n      restorableEntity: entity && extractRestorableEntity(state, entity),\n      entityTypeId: 'node',\n      nid,\n    };\n  },\n  {\n    requestSingleContent,\n    contentSave,\n    onChange: contentEditChange,\n    requestSchemaByEntityId,\n  },\n)(NodeEditForm);\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport LoadingBar from 'react-redux-loading-bar';\nimport NodeForm from '../NodeForm';\nimport {\n  contentAddChange,\n  contentAdd,\n  requestUser,\n} from '../../../actions/content';\nimport PageTitle from '../../02_atoms/PageTitle/PageTitle';\nimport { createEntity } from '../../../utils/api/schema';\nimport { requestSchema } from '../../../actions/schema';\nimport SchemaPropType from '../NodeForm/SchemaPropType';\nimport { cleanupRelationships } from '../../../utils/api/content';\n\nclass NodeAddForm extends React.Component {\n  static propTypes = {\n    bundle: PropTypes.string.isRequired,\n    contentAdd: PropTypes.func.isRequired,\n    entityTypeId: PropTypes.string.isRequired,\n    schema: PropTypes.oneOfType([SchemaPropType, PropTypes.bool]),\n    requestSchema: PropTypes.func.isRequired,\n    requestUser: PropTypes.func.isRequired,\n    user: PropTypes.shape({}),\n  };\n\n  static defaultProps = {\n    schema: false,\n    user: false,\n  };\n\n  componentDidMount() {\n    this.props.requestUser(1);\n    this.props.requestSchema({\n      entityTypeId: this.props.entityTypeId,\n      bundle: this.props.bundle,\n    });\n  }\n\n  onSave = entity => {\n    this.props.contentAdd(\n      cleanupRelationships({\n        ...entity,\n        type: `${this.props.entityTypeId}--${this.props.bundle}`,\n      }),\n      this.props.bundle,\n    );\n  };\n\n  forgeEntity = schema => {\n    const entity = createEntity(schema);\n    // Set default `Created On` attribute.\n    const local = new Date();\n    local.setMinutes(local.getMinutes() - local.getTimezoneOffset());\n    entity.data.attributes.created = Math.round(+local / 1000);\n\n    // Set default `Authored By` relationship.\n    entity.data.relationships.uid.data = { ...this.props.user };\n\n    return entity;\n  };\n\n  render() {\n    return (\n      this.props.schema &&\n      this.props.user && (\n        <Fragment>\n          <PageTitle>\n            Create\n            {this.props.bundle}\n          </PageTitle>\n          <LoadingBar />\n          <NodeForm\n            {...this.props}\n            entity={this.forgeEntity(this.props.schema)}\n            onSave={this.onSave}\n          />\n        </Fragment>\n      )\n    );\n  }\n}\n\nconst extractRestorableEntity = (state, bundle) =>\n  state.content.restorableContentAddByBundle[bundle];\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { bundle },\n      },\n    },\n  ) => ({\n    schema: state.schema.schema[`node--${bundle}`],\n    restorableEntity: extractRestorableEntity(state, bundle),\n    user: state.content.user,\n    entityTypeId: 'node',\n    bundle,\n  }),\n  {\n    contentAdd,\n    requestSchema,\n    onChange: contentAddChange,\n    requestUser,\n  },\n)(NodeAddForm);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Redirect } from 'react-router';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\n\nimport PageTitle from '../../02_atoms/PageTitle';\n\nexport default class TaxonomyVocabulary extends React.Component {\n  static propTypes = {\n    requestTaxonomyVocabulary: PropTypes.func.isRequired,\n    taxonomyVocabulary: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          attributes: PropTypes.shape({\n            name: PropTypes.string,\n            description: PropTypes.string,\n            vid: PropTypes.string,\n          }),\n        }),\n      ),\n    ]),\n  };\n\n  static defaultProps = {\n    taxonomyVocabulary: null,\n  };\n\n  state = {\n    activeLink: null,\n  };\n\n  componentDidMount() {\n    this.props.requestTaxonomyVocabulary();\n  }\n\n  vocabularyOperations = vid => (\n    <FormControl>\n      {/* @todo Extract the select element with links out into a component */}\n      <Select\n        value=\"\"\n        autoWidth\n        onChange={e => this.setState({ activeLink: e.target.value })}\n      >\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}/overview`}>\n          List Terms\n        </MenuItem>\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}`}>\n          Edit Vocabulary\n        </MenuItem>\n        <MenuItem value={`/admin/structure/taxonomy/manage/${vid}/add`}>\n          Add Terms\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/fields`}\n        >\n          Manage Fields\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/form-display`}\n        >\n          Manage Form Display\n        </MenuItem>\n        <MenuItem\n          value={`/admin/structure/taxonomy/manage/${vid}/overview/display`}\n        >\n          Manage Display\n        </MenuItem>\n      </Select>\n      {this.state.activeLink && <Redirect to={this.state.activeLink} />}\n    </FormControl>\n  );\n\n  render() {\n    const { taxonomyVocabulary } = this.props;\n    return (\n      <Fragment>\n        <PageTitle>Taxonomy</PageTitle>\n        <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Vocabulary name</TableCell>\n                <TableCell>Description</TableCell>\n                <TableCell>Operations</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {taxonomyVocabulary &&\n                taxonomyVocabulary.map(vocabulary => (\n                  <TableRow key={vocabulary.id}>\n                    <TableCell>{vocabulary.attributes.name}</TableCell>\n                    <TableCell>{vocabulary.attributes.description}</TableCell>\n                    <TableCell>\n                      {this.vocabularyOperations(vocabulary.attributes.vid)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Paper>\n      </Fragment>\n    );\n  }\n}\n","import { put, takeLatest, call, select } from 'redux-saga/effects';\nimport {\n  showLoading,\n  hideLoading,\n  resetLoading,\n} from 'react-redux-loading-bar';\n\nimport api from '../utils/api/api';\nimport { ApiError } from '../utils/api/errors';\nimport { setErrorMessage } from './application';\n\nexport const TAXONOMY_VOCABULARY_REQUESTED = 'TAXONOMY_VOCABULARY_REQUESTED';\nexport const requestTaxonomyVocabulary = () => ({\n  type: TAXONOMY_VOCABULARY_REQUESTED,\n  payload: {},\n});\n\nexport const requestTaxonomyVocabularyById = vocabulary => ({\n  type: TAXONOMY_VOCABULARY_REQUESTED,\n  payload: { vocabulary },\n});\n\nexport const TAXONOMY_VOCABULARY_LOADED = 'TAXONOMY_VOCABULARY_LOADED';\nfunction* loadTaxonomyVocabulary(action) {\n  try {\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const { data: taxonomyVocabulary } = yield call(\n      api,\n      'taxonomy_vocabulary',\n      {\n        ...((action.payload.vocabulary && {\n          queryString: {\n            filter: {\n              condition: { path: 'vid', value: action.payload.vocabulary },\n            },\n          },\n        }) ||\n          {}),\n      },\n    );\n\n    yield put({\n      type: TAXONOMY_VOCABULARY_LOADED,\n      payload: {\n        taxonomyVocabulary,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport const TAXONOMY_TERMS_REQUESTED = 'TAXONOMY_TERMS_REQUESTED';\nexport const requestTaxonomyTerms = vocabulary => ({\n  type: TAXONOMY_TERMS_REQUESTED,\n  payload: { vocabulary },\n});\n\nexport const getTaxonomyVocabularyById = (taxonomyVocabularyList, vocabulary) =>\n  taxonomyVocabularyList\n    .filter(({ attributes: { vid } }) => vid === vocabulary)\n    .shift();\n\nexport const TAXONOMY_TERMS_LOADED = 'TAXONOMY_TERMS_LOADED';\nfunction* loadTaxonomyTerms(action) {\n  try {\n    const {\n      payload: { vocabulary },\n    } = action;\n    yield put(resetLoading());\n    yield put(showLoading());\n\n    const { data: taxonomyTerms } = yield call(api, 'taxonomy_term', {\n      parameters: { type: vocabulary },\n    });\n\n    const {\n      taxonomy: { taxonomyVocabulary },\n    } = yield select();\n    if (\n      !(\n        taxonomyVocabulary.length &&\n        getTaxonomyVocabularyById(taxonomyVocabulary, vocabulary)\n      )\n    ) {\n      yield put({\n        type: TAXONOMY_VOCABULARY_REQUESTED,\n        payload: {\n          vocabulary,\n        },\n      });\n    }\n\n    yield put({\n      type: TAXONOMY_TERMS_LOADED,\n      payload: {\n        vocabulary,\n        taxonomyTerms,\n      },\n    });\n  } catch (error) {\n    const errorMessage = yield ApiError.errorToHumanString(error);\n    yield put(setErrorMessage(errorMessage));\n  } finally {\n    yield put(hideLoading());\n  }\n}\n\nexport default function* rootSaga() {\n  yield takeLatest(TAXONOMY_VOCABULARY_REQUESTED, loadTaxonomyVocabulary);\n  yield takeLatest(TAXONOMY_TERMS_REQUESTED, loadTaxonomyTerms);\n}\n","import { connect } from 'react-redux';\n\nimport TaxonomyVocabulary from './TaxonomyVocabulary';\nimport { requestTaxonomyVocabulary } from '../../../actions/taxonomy';\n\nexport default connect(\n  state => ({ taxonomyVocabulary: state.taxonomy.taxonomyVocabulary }),\n  { requestTaxonomyVocabulary },\n)(TaxonomyVocabulary);\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { css } from 'emotion';\n\nimport { Redirect } from 'react-router';\n\nimport LoadingBar from 'react-redux-loading-bar';\n\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem/MenuItem';\n\nimport PageTitle from '../../02_atoms/PageTitle';\n\nconst styles = {\n  addButton: css`\n    margin: 0.5rem;\n    position: fixed;\n    right: 0;\n    bottom: 0;\n  `,\n};\n\nexport default class TaxonomyTermsOverview extends React.Component {\n  static propTypes = {\n    requestTaxonomyTerms: PropTypes.func.isRequired,\n    vocabulary: PropTypes.string.isRequired,\n    taxonomyTerms: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.arrayOf(\n        PropTypes.shape({\n          attributes: PropTypes.shape({\n            name: PropTypes.string,\n            description: PropTypes.string,\n            vid: PropTypes.string,\n          }),\n        }),\n      ),\n    ]),\n    taxonomyVocabulary: PropTypes.oneOfType([\n      PropTypes.bool,\n      PropTypes.shape({\n        attributes: PropTypes.shape({\n          name: PropTypes.string,\n          description: PropTypes.string,\n          vid: PropTypes.string,\n        }),\n      }),\n    ]),\n  };\n\n  static defaultProps = {\n    taxonomyTerms: null,\n    taxonomyVocabulary: null,\n  };\n\n  state = {\n    activeLink: null,\n  };\n\n  componentDidMount() {\n    this.props.requestTaxonomyTerms(this.props.vocabulary);\n  }\n\n  termOperations = tid => (\n    <FormControl>\n      {/* @todo Extract the select element with links out into a component */}\n      <Select\n        autoWidth\n        onChange={e => this.setState({ activeLink: e.target.value })}\n        value={this.state.activeLink}\n      >\n        <MenuItem value={`/taxonomy/term/${tid}/edit`}>Edit</MenuItem>\n        <MenuItem value={`/taxonomy/term/${tid}/delete`}>Delete</MenuItem>\n      </Select>\n      {this.state.activeLink && <Redirect to={this.state.activeLink} />}\n    </FormControl>\n  );\n\n  render() {\n    const { taxonomyTerms, taxonomyVocabulary } = this.props;\n    return (\n      <Fragment>\n        {taxonomyVocabulary && (\n          <PageTitle>{taxonomyVocabulary.attributes.name}</PageTitle>\n        )}\n        <LoadingBar style={{ position: 'relative', marginBottom: '5px' }} />\n        <Paper>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>Name</TableCell>\n                <TableCell>Operations</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {taxonomyTerms &&\n                taxonomyTerms.map(term => (\n                  <TableRow key={term.attributes.uuid}>\n                    <TableCell>{term.attributes.name}</TableCell>\n                    <TableCell>\n                      {this.termOperations(term.attributes.tid)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n            </TableBody>\n          </Table>\n        </Paper>\n        <Button\n          variant=\"fab\"\n          color=\"primary\"\n          aria-label=\"add\"\n          className={styles.addButton}\n          component={Link}\n          to={`/admin/structure/taxonomy/manage/${this.props.vocabulary}/add`}\n        >\n          <AddIcon />\n        </Button>\n      </Fragment>\n    );\n  }\n}\n","import { connect } from 'react-redux';\n\nimport TaxonomyTermsOverview from './TaxonomyTermsOverview';\nimport {\n  requestTaxonomyTerms,\n  getTaxonomyVocabularyById,\n} from '../../../actions/taxonomy';\n\nexport default connect(\n  (\n    state,\n    {\n      match: {\n        params: { vocabulary },\n      },\n    },\n  ) => ({\n    taxonomyTerms: state.taxonomy.taxonomyTerms[vocabulary],\n    taxonomyVocabulary: getTaxonomyVocabularyById(\n      state.taxonomy.taxonomyVocabulary,\n      vocabulary,\n    ),\n    vocabulary,\n  }),\n  { requestTaxonomyTerms },\n)(TaxonomyTermsOverview);\n","import AddContent from './components/05_pages/AddContent';\nimport Content from './components/05_pages/Content/Content';\nimport Permissions from './components/05_pages/Permissions/Permissions';\nimport Roles from './components/05_pages/Roles';\nimport Dblog from './components/05_pages/Reports/Dblog';\nimport NodeEditForm from './components/05_pages/NodeEditForm';\nimport NodeAddForm from './components/05_pages/NodeAddForm';\nimport Taxonomy from './components/05_pages/TaxonomyVocabulary';\nimport TaxonomyTermsOverview from './components/05_pages/TaxonomyTermsOverview';\n\n// @todo Share this with Drupal\nconst routes = {\n  '/admin/content': Content,\n  '/admin/people/permissions/:role?': Permissions,\n  '/admin/people/roles': Roles,\n  '/admin/reports/dblog': Dblog,\n  '/node/add': AddContent,\n  '/node/:nid/edit': NodeEditForm,\n  '/node/add/:bundle': NodeAddForm,\n  '/admin/structure/taxonomy/manage/:vocabulary/overview': TaxonomyTermsOverview,\n  '/admin/structure/taxonomy': Taxonomy,\n};\n\nexport default routes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from 'emotion';\n\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_WARNING,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_SUCCESS,\n} from '../../../constants/messages';\n\nconst variantIcon = {\n  MESSAGE_SEVERITY_SUCCESS: CheckCircleIcon,\n  MESSAGE_SEVERITY_WARNING: WarningIcon,\n  MESSAGE_SEVERITY_ERROR: ErrorIcon,\n  MESSAGE_SEVERITY_INFO: InfoIcon,\n};\n\nconst styles = {\n  success: css`\n    background-color: #43a047;\n  `,\n  error: css`\n    background-color: #d32f2f;\n  `,\n  info: css`\n    background-color: #1976d2;\n  `,\n  warning: css`\n    background-color: #ffa000;\n  `,\n  icon: css`\n    font-size: 20px;\n  `,\n  iconVariant: css`\n    margin-right: 10px;\n    opacity 0.9;\n  `,\n  message: css`\n    display: flex;\n    align-items: center;\n\n    a {\n      color: #fff;\n    }\n  `,\n};\n\nconst SnackbarMessage = props => {\n  const Icon = variantIcon[props.messageSeverity];\n  return (\n    <Snackbar\n      open={props.open}\n      autoHideDuration={props.duration}\n      onClose={props.onClose}\n      anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n    >\n      <SnackbarContent\n        className={(severity => {\n          switch (severity) {\n            case MESSAGE_SEVERITY_ERROR:\n              return styles.error;\n            case MESSAGE_SEVERITY_WARNING:\n              return styles.warning;\n            case MESSAGE_SEVERITY_INFO:\n              return styles.info;\n            case MESSAGE_SEVERITY_SUCCESS:\n              return styles.success;\n            default:\n              return styles.error;\n          }\n        })(props.messageSeverity)}\n        message={\n          <span className={styles.message}>\n            <Icon className={`${styles.icon} ${styles.iconVariant}`} />\n            {props.message}\n          </span>\n        }\n        action={[\n          <IconButton\n            key=\"close\"\n            aria-label=\"Close\"\n            color=\"inherit\"\n            onClick={props.onClose}\n          >\n            <CloseIcon className={styles.icon} />\n          </IconButton>,\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nSnackbarMessage.defaultProps = {\n  duration: 5000,\n};\n\nSnackbarMessage.propTypes = {\n  open: PropTypes.bool.isRequired,\n  message: PropTypes.node.isRequired,\n  messageSeverity: PropTypes.oneOf([\n    MESSAGE_SEVERITY_ERROR,\n    MESSAGE_SEVERITY_SUCCESS,\n    MESSAGE_SEVERITY_INFO,\n    MESSAGE_SEVERITY_WARNING,\n  ]).isRequired,\n  onClose: PropTypes.func.isRequired,\n  duration: PropTypes.number,\n};\n\nexport default SnackbarMessage;\n","import React from 'react';\nimport { css } from 'emotion';\nimport PropTypes from 'prop-types';\nimport {\n  MESSAGE_SEVERITY_ERROR,\n  MESSAGE_SEVERITY_SUCCESS,\n  MESSAGE_SEVERITY_INFO,\n  MESSAGE_SEVERITY_WARNING,\n} from '../../../constants/messages';\n\nlet styles;\nlet modifierClassMap;\n\nconst Message = ({ message, messageSeverity }) => (\n  <div className={`${styles.message} ${modifierClassMap[messageSeverity]}`}>\n    {message}\n  </div>\n);\n\nMessage.propTypes = {\n  message: PropTypes.string.isRequired,\n  messageSeverity: PropTypes.oneOf([\n    MESSAGE_SEVERITY_ERROR,\n    MESSAGE_SEVERITY_SUCCESS,\n    MESSAGE_SEVERITY_INFO,\n    MESSAGE_SEVERITY_WARNING,\n  ]).isRequired,\n};\n\nstyles = {\n  message: css`\n    padding: 20px 25px;\n    margin-bottom: 30px;\n    color: #fff;\n  `,\n  success: css`\n    background-color: #43a047;\n  `,\n  error: css`\n    background-color: #d32f2f;\n  `,\n  info: css`\n    background-color: #1976d2;\n  `,\n  warning: css`\n    background-color: #ffa000;\n  `,\n};\n\nmodifierClassMap = {\n  [MESSAGE_SEVERITY_ERROR]: styles.error,\n  [MESSAGE_SEVERITY_SUCCESS]: styles.success,\n  [MESSAGE_SEVERITY_WARNING]: styles.warning,\n  [MESSAGE_SEVERITY_INFO]: styles.info,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { css } from 'emotion';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport ViewListIcon from '@material-ui/icons/ViewList';\nimport BuildIcon from '@material-ui/icons/Build';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\nimport ExtensionIcon from '@material-ui/icons/Extension';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport PeopleIcon from '@material-ui/icons/People';\nimport AssesmentIcon from '@material-ui/icons/Assessment';\nimport HelpIcon from '@material-ui/icons/Help';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\n\nimport Snackbar from '../../02_atoms/SnackbarMessage/SnackbarMessage';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nimport {\n  requestMenu,\n  closeDrawer,\n  openDrawer,\n  setMessage,\n  clearMessage,\n} from '../../../actions/application';\n\nlet styles;\n\nconst iconMap = {\n  '/admin/content': <ViewListIcon />,\n  '/admin/structure': <BuildIcon />,\n  '/admin/appearance': <ColorLensIcon />,\n  '/admin/modules': <ExtensionIcon />,\n  '/admin/config': <SettingsIcon />,\n  '/admin/people': <PeopleIcon />,\n  '/admin/reports': <AssesmentIcon />,\n  '/admin/help': <HelpIcon />,\n};\n\nclass Default extends React.Component {\n  componentDidMount() {\n    this.props.requestMenu();\n  }\n\n  render = () => (\n    <div className={styles.outerWrapper}>\n      <CssBaseline />\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: `${styles.drawerPaper} ${!this.props.drawerOpen &&\n            styles.drawerPaperClose}`,\n        }}\n        open={this.props.drawerOpen}\n      >\n        <div className={styles.menuButtonWrapper}>\n          {this.props.drawerOpen ? (\n            <IconButton\n              aria-label=\"close drawer\"\n              onClick={this.props.closeDrawer}\n              className={styles.menuButton}\n            >\n              <ChevronLeftIcon />\n            </IconButton>\n          ) : (\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={this.props.openDrawer}\n              className={styles.menuButton}\n            >\n              <MenuIcon />\n            </IconButton>\n          )}\n        </div>\n        <Divider />\n        <List data-nightwatch=\"menu\">\n          {this.props.menuLinks.map(({ link: menuLink }) => (\n            <ListItem\n              key={menuLink.url.replace(/\\//g, '-')}\n              component=\"li\"\n              button\n            >\n              <Link to={menuLink.url} className={styles.menuLink} role=\"button\">\n                {iconMap[menuLink.url] ? (\n                  <ListItemIcon>{iconMap[menuLink.url]}</ListItemIcon>\n                ) : (\n                  ''\n                )}\n                <ListItemText primary={menuLink.title} />\n              </Link>\n            </ListItem>\n          ))}\n        </List>\n        {this.props.menuLinks.length ? <Divider /> : ''}\n      </Drawer>\n\n      <main className={styles.main} id={styles.main}>\n        <ErrorBoundary>\n          {this.props.children}\n          {this.props.message && (\n            <Snackbar\n              {...this.props.message}\n              onClose={() => this.props.clearMessage(this.props.message.key)}\n            />\n          )}\n        </ErrorBoundary>\n      </main>\n    </div>\n  );\n}\n\nstyles = {\n  menuLink: css`\n    display: inherit;\n    text-decoration: inherit;\n  `,\n  menuButton: css`\n    margin: 8px 12px;\n  `,\n  menuButtonWrapper: css`\n    display: flex;\n    justify-content: flex-end;\n  `,\n  outerWrapper: css`\n    height: 100%;\n    display: flex;\n  `,\n  main: css`\n    flex-grow: 1;\n    padding: 2rem;\n    height: 100%;\n  `,\n  drawerPaper: css`\n    position: relative;\n    width: 250px;\n    transition: width 225ms cubic-bezier(0.4, 0, 0.6, 1) 0ms;\n  `,\n  drawerPaperClose: css`\n    overflow-x: hidden;\n    transition: none;\n    width: 72px;\n    transition: width 195ms cubic-bezier(0.4, 0, 0.6, 1) 0ms;\n  `,\n};\n\nDefault.propTypes = {\n  children: PropTypes.node.isRequired,\n  message: PropTypes.shape({\n    message: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    type: PropTypes.string,\n    key: PropTypes.number,\n    open: PropTypes.bool,\n  }),\n  menuLinks: PropTypes.arrayOf(\n    PropTypes.shape({\n      link: PropTypes.shape({\n        url: PropTypes.string,\n        title: PropTypes.string,\n      }),\n    }),\n  ).isRequired,\n  requestMenu: PropTypes.func.isRequired,\n  openDrawer: PropTypes.func.isRequired,\n  closeDrawer: PropTypes.func.isRequired,\n  setMessage: PropTypes.func.isRequired,\n  clearMessage: PropTypes.func.isRequired,\n  drawerOpen: PropTypes.bool,\n};\n\nDefault.defaultProps = {\n  message: null,\n  drawerOpen: false,\n};\n\nconst mapStateToProps = state => ({\n  message: state.application.messages[0] || null,\n  menuLinks: state.application.menuLinks || [],\n  drawerOpen: state.application.drawerOpen,\n});\n\nexport default withRouter(\n  connect(\n    mapStateToProps,\n    {\n      requestMenu,\n      openDrawer,\n      closeDrawer,\n      setMessage,\n      clearMessage,\n    },\n  )(Default),\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport InlineMessage from '../../02_atoms/InlineMessage/InlineMessage';\n\nimport { MESSAGE_SEVERITY_ERROR } from '../../../constants/messages';\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      error: null,\n    };\n  }\n\n  componentDidCatch(error) {\n    this.setState({\n      error,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return (\n        <InlineMessage\n          message={this.state.error.toString()}\n          messageSeverity={MESSAGE_SEVERITY_ERROR}\n        />\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nErrorBoundary.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default ErrorBoundary;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport routes from './routes';\n\nconst NoMatch = class NoMatch extends Component {\n  static propTypes = {\n    location: PropTypes.shape({\n      pathname: PropTypes.string.isRequired,\n    }).isRequired,\n  };\n\n  componentDidMount() {\n    // We want to redirect everything without a match back to Drupal.\n    if (!Object.keys(routes).includes(this.props.location.pathname)) {\n      window.location =\n        process.env.REACT_APP_DRUPAL_BASE_URL + this.props.location.pathname;\n    }\n  }\n\n  render() {\n    return null;\n  }\n};\n\nexport default NoMatch;\n","import { all } from 'redux-saga/effects';\nimport applicationSaga from './application';\nimport contentSaga from './content';\nimport schemaSaga from './schema';\nimport { watchDblogRequests } from './reports';\nimport { watchRequestedRolesWithCancel } from './roles';\nimport taxonomySaga from './taxonomy';\n\nexport default function* rootSaga() {\n  yield all([\n    applicationSaga(),\n    contentSaga(),\n    watchDblogRequests(),\n    watchRequestedRolesWithCancel(),\n    schemaSaga(),\n    taxonomySaga(),\n  ]);\n}\n","import { LOCATION_CHANGE } from 'react-router-redux';\nimport { ROLES_LOADED } from '../actions/roles';\nimport {\n  DBLOG_COLLECTION_LOADED,\n  DBLOG_FILTER_UPDATED,\n} from '../actions/reports';\nimport {\n  CLOSE_DRAWER,\n  OPEN_DRAWER,\n  SET_MESSAGE,\n  CLEAR_MESSAGE,\n  CLEAR_ALL_MESSAGES,\n  MENU_LOADED,\n  CONTENT_TYPES_LOADED,\n  ACTIONS_LOADED,\n} from '../actions/application';\n\nexport const initialState = {\n  messages: [],\n  menuLinks: [],\n  filterString: '',\n  contentTypes: {},\n  actions: [],\n  drawerOpen: false,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CLOSE_DRAWER: {\n      return {\n        ...state,\n        drawerOpen: false,\n      };\n    }\n    case OPEN_DRAWER: {\n      return {\n        ...state,\n        drawerOpen: true,\n      };\n    }\n    case SET_MESSAGE: {\n      // This causes a new messages object to be created, instead of\n      // maintaining a reference to the old data structure.\n      const messages = [...state.messages];\n      messages.push({\n        message: action.payload.message,\n        messageSeverity: action.payload.messageSeverity,\n        key: Date.now() + Math.random(),\n        open: true,\n      });\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case CLEAR_MESSAGE: {\n      const messages = [...state.messages];\n      messages.splice(\n        messages.findIndex(message => message.key === action.payload.key),\n        1,\n      );\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case CLEAR_ALL_MESSAGES: {\n      const messages = [];\n      return {\n        ...state,\n        messages,\n      };\n    }\n    case LOCATION_CHANGE: {\n      // Clear messages on every location change.\n      return {\n        ...state,\n        messages: [],\n      };\n    }\n    case MENU_LOADED: {\n      return {\n        ...state,\n        menuLinks: Array.isArray(action.payload.menuLinks)\n          ? action.payload.menuLinks\n          : [],\n      };\n    }\n    case DBLOG_COLLECTION_LOADED: {\n      const { dblog, ...rest } = state;\n      return {\n        ...rest,\n        dblog: {\n          ...dblog,\n          next:\n            Object.prototype.hasOwnProperty.call(\n              action.payload.dbLogEntries.links,\n              'next',\n            ) || false,\n          entries: action.payload.dbLogEntries.data.map(\n            ({\n              attributes: {\n                wid,\n                message_formatted_plain: messageFormattedPlain,\n                timestamp,\n                type,\n              },\n            }) => ({ wid, messageFormattedPlain, timestamp, type }),\n          ),\n          availableTypes: action.payload.dbLogEntriesTypes,\n        },\n      };\n    }\n    case DBLOG_FILTER_UPDATED: {\n      const { dblog, ...rest } = state;\n      return {\n        ...rest,\n        dblog: {\n          ...dblog,\n          filterOptions: action.payload.options,\n        },\n      };\n    }\n    case ROLES_LOADED: {\n      const roles = action.payload.roles.data;\n      return {\n        ...state,\n        roles,\n      };\n    }\n    case CONTENT_TYPES_LOADED: {\n      return {\n        ...state,\n        contentTypes: action.payload.contentTypes.data.reduce(\n          (accumulator, contentType) => ({\n            ...accumulator,\n            [contentType.attributes.type]: {\n              name: contentType.attributes.name,\n              description: contentType.attributes.description,\n            },\n          }),\n          {},\n        ),\n      };\n    }\n    case ACTIONS_LOADED: {\n      return {\n        ...state,\n        actions: action.payload.actions.data,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  CONTENT_LOADED,\n  CONTENT_SINGLE_LOADED,\n  CONTENT_DELETE,\n  CONTENT_ADD,\n  CONTENT_ADD_CHANGE,\n  USER_LOADED,\n  CONTENT_EDIT_CHANGE,\n} from '../actions/content';\n\nexport const initialState = {\n  contentList: [],\n  contentByNid: {},\n  links: {},\n  restorableContentAddByBundle: {},\n  restorableContentEditById: {},\n  user: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case CONTENT_SINGLE_LOADED:\n      return {\n        ...state,\n        contentByNid: {\n          [action.payload.content.attributes.nid]: action.payload.content,\n        },\n      };\n    case CONTENT_ADD_CHANGE:\n      return {\n        ...state,\n        restorableContentAddByBundle: {\n          ...state.restorableContentAddByBundle,\n          [action.payload.bundle]: action.payload.entity,\n        },\n      };\n    case CONTENT_EDIT_CHANGE:\n      return {\n        ...state,\n        restorableContentEditById: {\n          ...state.restorableContentEditById,\n          [action.payload.entity.data.id]: action.payload.entity,\n        },\n      };\n    case CONTENT_ADD:\n      return {\n        ...state,\n        restorableContentAddByBundle: {\n          [action.payload.bundle]: null,\n        },\n      };\n    case CONTENT_LOADED: {\n      return {\n        ...state,\n        // Group JSON API includes by their type.\n        includes: action.payload.contentList.included\n          ? action.payload.contentList.included.reduce((accumulator, node) => {\n              accumulator[node.type] = accumulator[node.type] || {};\n              accumulator[node.type][node.id] = node;\n              return accumulator;\n            }, {})\n          : {},\n        contentList: action.payload.contentList.data\n          ? action.payload.contentList.data.map(content => ({\n              ...content,\n              // @fixme Instead of doing that we should get the node type\n              // using the type relationship.\n              type: content.type.substr(6),\n            }))\n          : [],\n        links: action.payload.contentList.links,\n      };\n    }\n\n    case CONTENT_DELETE: {\n      return {\n        ...state,\n        contentList: state.contentList.filter(\n          content => content.id !== action.payload.content.id,\n        ),\n      };\n    }\n\n    case USER_LOADED: {\n      return {\n        ...state,\n        user: action.payload.user,\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n","import {\n  SCHEMA_LOADED,\n  UI_SCHEMA_LOADED,\n  SCHEMA_BY_ENTITY_ID_LOADED,\n} from '../actions/schema';\n\nexport const initialState = {\n  uiSchema: {},\n  schema: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case SCHEMA_LOADED: {\n      return {\n        ...state,\n        schema: {\n          [`${action.payload.entityTypeId}--${action.payload.bundle}`]: action\n            .payload.entitySchema,\n        },\n      };\n    }\n    case SCHEMA_BY_ENTITY_ID_LOADED: {\n      return {\n        ...state,\n        schema: {\n          [`${action.payload.entityTypeId}--${action.payload.entityId}`]: action\n            .payload.entitySchema,\n        },\n      };\n    }\n    case UI_SCHEMA_LOADED: {\n      const [\n        {\n          attributes: { content: formDisplaySchema },\n        },\n      ] = action.payload.formDisplaySchema;\n      const fieldSchema = action.payload.fieldSchema.reduce((acc, cur) => {\n        acc[cur.attributes.field_name] = cur;\n        return acc;\n      }, {});\n      return {\n        ...state,\n        uiSchema: {\n          ...state.uiSchema,\n          [`${action.payload.entityTypeId}--${action.payload.bundle}`]: {\n            fieldSchema,\n            formDisplaySchema,\n            fieldStorageConfig: action.payload.fieldStorageConfig,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import {\n  TAXONOMY_VOCABULARY_LOADED,\n  TAXONOMY_TERMS_LOADED,\n} from '../actions/taxonomy';\n\nexport const initialState = {\n  taxonomyVocabulary: [],\n  taxonomyTerms: {},\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case TAXONOMY_VOCABULARY_LOADED: {\n      return {\n        ...state,\n        taxonomyVocabulary: action.payload.taxonomyVocabulary,\n      };\n    }\n    case TAXONOMY_TERMS_LOADED: {\n      const { vocabulary, taxonomyTerms } = action.payload;\n      return {\n        ...state,\n        taxonomyTerms: {\n          ...state.taxonomyTerms,\n          [vocabulary]: taxonomyTerms,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { loadingBarReducer as loadingBar } from 'react-redux-loading-bar';\nimport application, {\n  initialState as applicationInitialState,\n} from './application';\nimport content, { initialState as contentInitialState } from './content';\nimport schema, { initialState as schemaInitialState } from './schema';\nimport taxonomy, { initialState as taxonomyInitialState } from './taxonomy';\n\nconst reducers = { application, content, schema, taxonomy };\nexport const initialState = {\n  application: applicationInitialState,\n  content: contentInitialState,\n  schema: schemaInitialState,\n  taxonomy: taxonomyInitialState,\n};\nexport default { ...reducers, loadingBar };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Redirect } from 'react-router-dom';\n\nconst InitialRedirect = ({ location: { search } }) => {\n  // Allow Drupal redirects to determine the initial path.\n  const searchString = search\n    .replace('?q=', '')\n    // trim slashes on the left.\n    .replace(/^\\//, '');\n  if (searchString) {\n    return <Redirect to={searchString} />;\n  }\n  return <Redirect to=\"/\" />;\n};\n\nInitialRedirect.propTypes = {\n  location: PropTypes.shape({\n    search: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default InitialRedirect;\n","import React from 'react';\nimport { Route, Switch, withRouter } from 'react-router-dom';\nimport createBrowserHistory from 'history/createBrowserHistory';\nimport deepMerge from 'deepmerge';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport {\n  ConnectedRouter,\n  routerReducer,\n  routerMiddleware,\n} from 'react-router-redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { composeWithDevTools } from 'redux-devtools-extension/developmentOnly';\n\nimport JssProvider from 'react-jss/lib/JssProvider';\nimport { create } from 'jss';\nimport {\n  MuiThemeProvider,\n  createMuiTheme,\n  createGenerateClassName,\n  jssPreset,\n} from '@material-ui/core/styles';\n\nimport routes from './routes';\n\nimport Content from './components/05_pages/Content/Content';\nimport Default from './components/06_wrappers/Default/Default';\nimport NoMatch from './NoMatch';\n\nimport actions from './actions/index';\nimport reducers, { initialState } from './reducers/index';\nimport ErrorBoundary from './components/06_wrappers/ErrorBoundary/ErrorBoundary';\nimport InitialRedirect from './InitialRedirect';\n\nconst history = createBrowserHistory();\nconst middleware = routerMiddleware(history);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const localStorageName = 'drupalAdminUiReduxState';\n\n/**\n * Restore from local storage.\n */\nconst restoreState = () => {\n  let storedState = {};\n  if (typeof window === 'object') {\n    try {\n      // Test for Safari private browsing mode. This will throw an error if it can't set an item.\n      localStorage.setItem('localStorageTest', true);\n      storedState = localStorage.getItem(localStorageName) || '{}';\n    } catch (e) {\n      // In case like Safari private browing mode we don't support any restoring.\n      // Also note: enzyme has window but no Cookie set.\n      storedState =\n        (window.Cookie &&\n          decodeURIComponent(window.Cookie.get(localStorageName))) ||\n        {};\n    }\n  }\n\n  try {\n    storedState = JSON.parse(storedState);\n  } catch (e) {\n    storedState = {};\n  }\n  return storedState;\n};\n\nexport const localStorageStore = state => ({\n  content: {\n    restorableContentAddByBundle: state.content.restorableContentAddByBundle,\n    restorableContentEditById: state.content.restorableContentEditById,\n  },\n});\n\nconst storeState = store => {\n  // Persist state.\n  const state = store.getState();\n\n  // Save to local storage\n  const stringifiedState = JSON.stringify(localStorageStore(state));\n  try {\n    localStorage.setItem(localStorageName, stringifiedState);\n  } catch (e) {\n    // This will happen with Safari in private browsing mode.\n  }\n};\n\nconst store = createStore(\n  combineReducers({ ...reducers, router: routerReducer }),\n  deepMerge(initialState, restoreState()),\n  composeWithDevTools(applyMiddleware(sagaMiddleware, middleware)),\n);\nsagaMiddleware.run(actions);\n\nif (typeof window === 'object') {\n  store.subscribe(() => storeState(store));\n}\n\nconst generateClassName = createGenerateClassName();\nconst jss = create(jssPreset());\n// We define a custom insertion point that JSS will look for injecting the styles in the DOM.\njss.options.insertionPoint = document.getElementById('jss-insertion-point');\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nconst App = () => (\n  <JssProvider jss={jss} generateClassName={generateClassName}>\n    <MuiThemeProvider theme={theme}>\n      <ErrorBoundary>\n        <Provider store={store}>\n          <ConnectedRouter history={history}>\n            <Default>\n              <Switch>\n                <Route exact path=\"/\" component={withRouter(Content)} />\n                {Object.keys(routes).map(route => (\n                  <Route\n                    exact\n                    path={route}\n                    component={withRouter(routes[route])}\n                    key={route}\n                  />\n                ))}\n                <Route\n                  path=\"/(vfancy/?)\"\n                  component={withRouter(InitialRedirect)}\n                />\n                <Route component={NoMatch} />\n              </Switch>\n            </Default>\n          </ConnectedRouter>\n        </Provider>\n      </ErrorBoundary>\n    </MuiThemeProvider>\n  </JssProvider>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n            }\n          }\n        };\n      };\n    })\n    .catch(() => {});\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {});\n}\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {});\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\n// Disable react-axe without an additional cli flag.\n// See README.md for more information.\nif (process.env.NODE_ENV !== 'production' && process.env.REACT_APP_AXE) {\n  // eslint-disable-next-line import/no-extraneous-dependencies, global-require\n  const axe = require('react-axe');\n  axe(React, ReactDOM);\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}